<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/var/www/clients/client0/web1/web</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">/var/www/clients/client0/web1/web/var/cache/dev</parameter>
    <parameter key="kernel.cache_dir">/var/www/clients/client0/web1/web/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/var/www/clients/client0/web1/web/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="SymfonyCastsVerifyEmailBundle">SymfonyCasts\Bundle\VerifyEmail\SymfonyCastsVerifyEmailBundle</parameter>
      <parameter key="FMElfinderBundle">FM\ElfinderBundle\FMElfinderBundle</parameter>
      <parameter key="KnpPaginatorBundle">Knp\Bundle\PaginatorBundle\KnpPaginatorBundle</parameter>
      <parameter key="SymfonyCastsResetPasswordBundle">SymfonyCasts\Bundle\ResetPassword\SymfonyCastsResetPasswordBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="ApiPlatformBundle">ApiPlatform\Symfony\Bundle\ApiPlatformBundle</parameter>
      <parameter key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</parameter>
      <parameter key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\GesdinetJWTRefreshTokenBundle</parameter>
      <parameter key="VichUploaderBundle">Vich\UploaderBundle\VichUploaderBundle</parameter>
      <parameter key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</parameter>
      <parameter key="FOSCKEditorBundle">FOS\CKEditorBundle\FOSCKEditorBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfony/debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/twig/extra-bundle</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfony/maker-bundle/src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="SymfonyCastsVerifyEmailBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src</parameter>
        <parameter key="namespace">SymfonyCasts\Bundle\VerifyEmail</parameter>
      </parameter>
      <parameter key="FMElfinderBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/helios-ag/fm-elfinder-bundle/src</parameter>
        <parameter key="namespace">FM\ElfinderBundle</parameter>
      </parameter>
      <parameter key="KnpPaginatorBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\PaginatorBundle</parameter>
      </parameter>
      <parameter key="SymfonyCastsResetPasswordBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src</parameter>
        <parameter key="namespace">SymfonyCasts\Bundle\ResetPassword</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/nelmio/cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="ApiPlatformBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/api-platform/core/src/Symfony/Bundle</parameter>
        <parameter key="namespace">ApiPlatform\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="LexikJWTAuthenticationBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/lexik/jwt-authentication-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\JWTAuthenticationBundle</parameter>
      </parameter>
      <parameter key="GesdinetJWTRefreshTokenBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/gesdinet/jwt-refresh-token-bundle</parameter>
        <parameter key="namespace">Gesdinet\JWTRefreshTokenBundle</parameter>
      </parameter>
      <parameter key="VichUploaderBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle</parameter>
        <parameter key="namespace">Vich\UploaderBundle</parameter>
      </parameter>
      <parameter key="FOSJsRoutingBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/friendsofsymfony/jsrouting-bundle</parameter>
        <parameter key="namespace">FOS\JsRoutingBundle</parameter>
      </parameter>
      <parameter key="FOSCKEditorBundle" type="collection">
        <parameter key="path">/var/www/clients/client0/web1/web/vendor/friendsofsymfony/ckeditor-bundle/src</parameter>
        <parameter key="namespace">FOS\CKEditorBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelDevDebugContainer</parameter>
    <parameter key="upload_directory">/var/www/clients/client0/web1/web/public/uploads/</parameter>
    <parameter key="public_directory">/var/www/clients/client0/web1/web/public/</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">false</parameter>
    <parameter key="kernel.trust_x_sendfile_type_header">false</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">%env(default::SYMFONY_IDE)%</parameter>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/var/www/clients/client0/web1/web/translations</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/var/www/clients/client0/web1/web/var/cache/dev/App_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_dir">/var/www/clients/client0/web1/web/var/cache/dev</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/var/www/clients/client0/web1/web/var/cache/dev/serialization.php</parameter>
    <parameter key="cache.prefix.seed">_/var/www/clients/client0/web1/web.App_KernelDevDebugContainer</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">null</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="validator.mapping.cache.file">/var/www/clients/client0/web1/web/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_main_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/var/www/clients/client0/web1/web/var/cache/dev/profiler</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.attribute.class">Doctrine\ORM\Mapping\Driver\AttributeDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.enable_lazy_ghost_objects">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/clients/client0/web1/web/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine.migrations.preferred_em">null</parameter>
    <parameter key="doctrine.migrations.preferred_connection">null</parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>@FMElfinder/Form/elfinder_widget.html.twig</parameter>
      <parameter>@VichUploader/Form/fields.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>@FOSCKEditor/Form/ckeditor_widget.html.twig</parameter>
      <parameter>bootstrap_4_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/var/www/clients/client0/web1/web/templates</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_COURSE_MANAGER" type="collection">
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_STUDENTS_MANAGER" type="collection">
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_TRAINERS_MANAGER" type="collection">
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_CHEF_DEPARTEMENT" type="collection">
        <parameter>ROLE_COURSE_MANAGER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_USER" type="collection">
        <parameter>ROLE_COURSE_MANAGER</parameter>
        <parameter>ROLE_STUDENTS_MANAGER</parameter>
        <parameter>ROLE_TRAINERS_MANAGER</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>dev</parameter>
      <parameter>main</parameter>
      <parameter>login</parameter>
      <parameter>api</parameter>
    </parameter>
    <parameter key="lexik_jwt_authentication.authenticator_manager_enabled">true</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="fm_elfinder.loader">FM\ElfinderBundle\Loader\ElFinderLoader</parameter>
    <parameter key="fm_elfinder.configurator">FM\ElfinderBundle\Configuration\ElFinderConfigurationReader</parameter>
    <parameter key="elfinder.form.type.class">FM\ElfinderBundle\Form\Type\ElFinderType</parameter>
    <parameter key="fm_elfinder" type="collection">
      <parameter key="instances" type="collection">
        <parameter key="default" type="collection">
          <parameter key="locale">fr</parameter>
          <parameter key="editor">ckeditor</parameter>
          <parameter key="fullscreen">true</parameter>
          <parameter key="theme">smoothness</parameter>
          <parameter key="connector" type="collection">
            <parameter key="debug">false</parameter>
            <parameter key="roots" type="collection">
              <parameter key="uploads" type="collection">
                <parameter key="show_hidden">false</parameter>
                <parameter key="driver">LocalFileSystem</parameter>
                <parameter key="path">uploads/images</parameter>
                <parameter key="upload_allow" type="collection">
                  <parameter>image/png</parameter>
                  <parameter>image/jpg</parameter>
                  <parameter>image/jpeg</parameter>
                </parameter>
                <parameter key="upload_deny" type="collection">
                  <parameter>all</parameter>
                </parameter>
                <parameter key="upload_max_size">2M</parameter>
                <parameter key="volume_id">0</parameter>
                <parameter key="autoload">false</parameter>
                <parameter key="phash"></parameter>
                <parameter key="trash_hash"></parameter>
                <parameter key="locale"></parameter>
                <parameter key="i18n_folder_name">false</parameter>
                <parameter key="mime_detect">auto</parameter>
                <parameter key="mimefile"></parameter>
                <parameter key="security_voter"></parameter>
                <parameter key="start_path"></parameter>
                <parameter key="encoding">UTF-8</parameter>
                <parameter key="url"></parameter>
                <parameter key="alias"></parameter>
                <parameter key="img_lib">auto</parameter>
                <parameter key="tmb_path">.tmb</parameter>
                <parameter key="tmb_path_mode">511</parameter>
                <parameter key="tmb_url"></parameter>
                <parameter key="tmb_size">48</parameter>
                <parameter key="tmb_crop">true</parameter>
                <parameter key="tmb_bg_color">#ffffff</parameter>
                <parameter key="quarantine">null</parameter>
                <parameter key="copy_overwrite">true</parameter>
                <parameter key="copy_join">true</parameter>
                <parameter key="copy_from">true</parameter>
                <parameter key="copy_to">true</parameter>
                <parameter key="upload_overwrite">true</parameter>
                <parameter key="fileMode">420</parameter>
                <parameter key="upload_order" type="collection">
                  <parameter>deny</parameter>
                  <parameter>allow</parameter>
                </parameter>
                <parameter key="upload_max_conn">3</parameter>
                <parameter key="defaults" type="collection">
                  <parameter key="read">true</parameter>
                  <parameter key="write">true</parameter>
                </parameter>
                <parameter key="attributes" type="collection"/>
                <parameter key="accepted_name">/^\w[\w\s\.\%\-]*$/u</parameter>
                <parameter key="disabled_commands" type="collection"/>
                <parameter key="tree_deep">0</parameter>
                <parameter key="check_subfolders">1</parameter>
                <parameter key="separator">/</parameter>
                <parameter key="date_format">j M Y H:i</parameter>
                <parameter key="time_format">H:i</parameter>
                <parameter key="archive_mimes" type="collection"/>
                <parameter key="archivers" type="collection">
                  <parameter key="enabled">false</parameter>
                  <parameter key="create" type="collection"/>
                  <parameter key="extract" type="collection"/>
                </parameter>
                <parameter key="flysystem" type="collection">
                  <parameter key="enabled">false</parameter>
                  <parameter key="filesystem"></parameter>
                  <parameter key="type"></parameter>
                  <parameter key="adapter_service"></parameter>
                </parameter>
                <parameter key="glide_url"></parameter>
                <parameter key="glide_key"></parameter>
                <parameter key="plugins" type="collection"/>
                <parameter key="driver_options" type="collection"/>
                <parameter key="dropbox2_settings" type="collection">
                  <parameter key="enabled">false</parameter>
                  <parameter key="aliasFormat">%s@Dropbox</parameter>
                  <parameter key="path">/</parameter>
                  <parameter key="separator">/</parameter>
                  <parameter key="acceptedName">%s@Dropbox</parameter>
                  <parameter key="rootCssClass">elfinder-navbar-root-dropbox</parameter>
                  <parameter key="getThumbSize">medium</parameter>
                </parameter>
                <parameter key="box_settings" type="collection">
                  <parameter key="enabled">false</parameter>
                  <parameter key="root">Box.com</parameter>
                  <parameter key="path">/</parameter>
                  <parameter key="separator">/</parameter>
                  <parameter key="tmbPath"></parameter>
                  <parameter key="tmbURL"></parameter>
                  <parameter key="tmpPath"></parameter>
                  <parameter key="acceptedName">#^[^/\?*:|"&lt;&gt;]*[^./\?*:|"&lt;&gt;]$#</parameter>
                  <parameter key="rootCssClass">elfinder-navbar-root-box</parameter>
                </parameter>
                <parameter key="onedrive_settings" type="collection">
                  <parameter key="enabled">false</parameter>
                  <parameter key="root">OneDrive.com</parameter>
                  <parameter key="OneDriveApiClient"></parameter>
                  <parameter key="path">/</parameter>
                  <parameter key="separator">/</parameter>
                  <parameter key="tmbPath"></parameter>
                  <parameter key="tmbURL"></parameter>
                  <parameter key="tmpPath"></parameter>
                  <parameter key="acceptedName">#^[^/\?*:|"&lt;&gt;]*[^./\?*:|"&lt;&gt;]$#</parameter>
                  <parameter key="rootCssClass">elfinder-navbar-root-onedrive</parameter>
                  <parameter key="useApiThumbnail">true</parameter>
                </parameter>
                <parameter key="ftp_settings" type="collection">
                  <parameter key="enabled">false</parameter>
                </parameter>
                <parameter key="mysql_settings" type="collection">
                  <parameter key="enabled">false</parameter>
                  <parameter key="port">null</parameter>
                  <parameter key="socket">null</parameter>
                  <parameter key="files_table">elfinder_file</parameter>
                  <parameter key="tmbPath"></parameter>
                  <parameter key="tmpPath"></parameter>
                  <parameter key="rootCssClass">elfinder-navbar-root-sql</parameter>
                  <parameter key="noSessionCache">hasdirs</parameter>
                </parameter>
              </parameter>
            </parameter>
            <parameter key="binds" type="collection"/>
            <parameter key="plugins" type="collection"/>
          </parameter>
          <parameter key="cors_support">false</parameter>
          <parameter key="editor_template">null</parameter>
          <parameter key="multi_home_folder">false</parameter>
          <parameter key="folder_separator"></parameter>
          <parameter key="tinymce_popup_path"></parameter>
          <parameter key="relative_path">true</parameter>
          <parameter key="path_prefix">/</parameter>
          <parameter key="where_is_multi" type="collection"/>
          <parameter key="visible_mime_types" type="collection"/>
        </parameter>
      </parameter>
      <parameter key="configuration_provider">fm_elfinder.configurator.default</parameter>
      <parameter key="assets_path">assets</parameter>
      <parameter key="loader">fm_elfinder.loader.default</parameter>
    </parameter>
    <parameter key="knp_paginator.template.pagination">@KnpPaginator/Pagination/bootstrap_v5_pagination.html.twig</parameter>
    <parameter key="knp_paginator.template.filtration">@KnpPaginator/Pagination/filtration.html.twig</parameter>
    <parameter key="knp_paginator.template.sortable">@KnpPaginator/Pagination/sortable_link.html.twig</parameter>
    <parameter key="knp_paginator.page_range">5</parameter>
    <parameter key="knp_paginator.page_limit">null</parameter>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/" type="collection">
        <parameter key="skip_same_as_origin">true</parameter>
      </parameter>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection">
        <parameter>%env(CORS_ALLOW_ORIGIN)%</parameter>
      </parameter>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers" type="collection">
        <parameter>content-type</parameter>
        <parameter>authorization</parameter>
      </parameter>
      <parameter key="expose_headers" type="collection">
        <parameter>Link</parameter>
      </parameter>
      <parameter key="allow_methods" type="collection">
        <parameter>GET</parameter>
        <parameter>OPTIONS</parameter>
        <parameter>POST</parameter>
        <parameter>PUT</parameter>
        <parameter>PATCH</parameter>
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="max_age">3600</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">true</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
      <parameter key="skip_same_as_origin">true</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="api_platform.enable_entrypoint">true</parameter>
    <parameter key="api_platform.enable_docs">true</parameter>
    <parameter key="api_platform.title"></parameter>
    <parameter key="api_platform.description"></parameter>
    <parameter key="api_platform.version">0.0.0</parameter>
    <parameter key="api_platform.show_webby">false</parameter>
    <parameter key="api_platform.url_generation_strategy">1</parameter>
    <parameter key="api_platform.exception_to_status" type="collection">
      <parameter key="Symfony\Component\Serializer\Exception\ExceptionInterface">400</parameter>
      <parameter key="ApiPlatform\Exception\InvalidArgumentException">400</parameter>
      <parameter key="ApiPlatform\Exception\FilterValidationException">400</parameter>
      <parameter key="Doctrine\ORM\OptimisticLockException">409</parameter>
    </parameter>
    <parameter key="api_platform.formats" type="collection">
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
      <parameter key="json" type="collection">
        <parameter>application/json</parameter>
      </parameter>
      <parameter key="multipart" type="collection">
        <parameter>multipart/form-data</parameter>
      </parameter>
      <parameter key="html" type="collection">
        <parameter>text/html</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.patch_formats" type="collection">
      <parameter key="json" type="collection">
        <parameter>application/merge-patch+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.error_formats" type="collection">
      <parameter key="jsonproblem" type="collection">
        <parameter>application/problem+json</parameter>
      </parameter>
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.eager_loading.enabled">true</parameter>
    <parameter key="api_platform.eager_loading.max_joins">30</parameter>
    <parameter key="api_platform.eager_loading.fetch_partial">false</parameter>
    <parameter key="api_platform.eager_loading.force_eager">true</parameter>
    <parameter key="api_platform.collection.exists_parameter_name">exists</parameter>
    <parameter key="api_platform.collection.order">ASC</parameter>
    <parameter key="api_platform.collection.order_parameter_name">order</parameter>
    <parameter key="api_platform.collection.order_nulls_comparison">null</parameter>
    <parameter key="api_platform.collection.pagination.enabled">true</parameter>
    <parameter key="api_platform.collection.pagination.partial">false</parameter>
    <parameter key="api_platform.collection.pagination.client_enabled">false</parameter>
    <parameter key="api_platform.collection.pagination.client_items_per_page">false</parameter>
    <parameter key="api_platform.collection.pagination.client_partial">false</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page">30</parameter>
    <parameter key="api_platform.collection.pagination.maximum_items_per_page">null</parameter>
    <parameter key="api_platform.collection.pagination.page_parameter_name">page</parameter>
    <parameter key="api_platform.collection.pagination.enabled_parameter_name">pagination</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page_parameter_name">itemsPerPage</parameter>
    <parameter key="api_platform.collection.pagination.partial_parameter_name">partial</parameter>
    <parameter key="api_platform.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="page_parameter_name">page</parameter>
      <parameter key="enabled_parameter_name">pagination</parameter>
      <parameter key="items_per_page_parameter_name">itemsPerPage</parameter>
      <parameter key="partial_parameter_name">partial</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.etag">true</parameter>
    <parameter key="api_platform.http_cache.max_age">null</parameter>
    <parameter key="api_platform.http_cache.shared_max_age">null</parameter>
    <parameter key="api_platform.http_cache.vary" type="collection">
      <parameter>Accept</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.public">null</parameter>
    <parameter key="api_platform.http_cache.invalidation.max_header_length">7500</parameter>
    <parameter key="api_platform.http_cache.invalidation.xkey.glue"> </parameter>
    <parameter key="api_platform.asset_package">null</parameter>
    <parameter key="api_platform.defaults" type="collection">
      <parameter key="extra_properties" type="collection"/>
    </parameter>
    <parameter key="api_platform.resource_class_directories" type="collection">
      <parameter>/var/www/clients/client0/web1/web/vendor/gesdinet/jwt-refresh-token-bundle/Entity</parameter>
      <parameter>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/src/Entity</parameter>
      <parameter>/var/www/clients/client0/web1/web/src/Entity</parameter>
    </parameter>
    <parameter key="api_platform.oauth.enabled">false</parameter>
    <parameter key="api_platform.oauth.clientId"></parameter>
    <parameter key="api_platform.oauth.clientSecret"></parameter>
    <parameter key="api_platform.oauth.type">oauth2</parameter>
    <parameter key="api_platform.oauth.flow">application</parameter>
    <parameter key="api_platform.oauth.tokenUrl"></parameter>
    <parameter key="api_platform.oauth.authorizationUrl"></parameter>
    <parameter key="api_platform.oauth.refreshUrl"></parameter>
    <parameter key="api_platform.oauth.scopes" type="collection"/>
    <parameter key="api_platform.oauth.pkce">false</parameter>
    <parameter key="api_platform.openapi.termsOfService">null</parameter>
    <parameter key="api_platform.openapi.contact.name">null</parameter>
    <parameter key="api_platform.openapi.contact.url">null</parameter>
    <parameter key="api_platform.openapi.contact.email">null</parameter>
    <parameter key="api_platform.openapi.license.name">null</parameter>
    <parameter key="api_platform.openapi.license.url">null</parameter>
    <parameter key="api_platform.swagger.versions" type="collection">
      <parameter>3</parameter>
    </parameter>
    <parameter key="api_platform.enable_swagger_ui">true</parameter>
    <parameter key="api_platform.enable_re_doc">true</parameter>
    <parameter key="api_platform.swagger.api_keys" type="collection"/>
    <parameter key="api_platform.swagger_ui.extra_configuration" type="collection"/>
    <parameter key="api_platform.graphql.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphiql.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphql_playground.enabled">false</parameter>
    <parameter key="api_platform.graphql.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
    </parameter>
    <parameter key="api_platform.validator.serialize_payload_fields" type="collection"/>
    <parameter key="api_platform.validator.query_parameter_validation">true</parameter>
    <parameter key="api_platform.elasticsearch.enabled">false</parameter>
    <parameter key="lexik_jwt_authentication.pass_phrase">%env(JWT_PASSPHRASE)%</parameter>
    <parameter key="lexik_jwt_authentication.token_ttl">3600</parameter>
    <parameter key="lexik_jwt_authentication.clock_skew">0</parameter>
    <parameter key="lexik_jwt_authentication.user_identity_field">username</parameter>
    <parameter key="lexik_jwt_authentication.allow_no_expiration">false</parameter>
    <parameter key="lexik_jwt_authentication.user_id_claim">username</parameter>
    <parameter key="lexik_jwt_authentication.encoder.signature_algorithm">RS256</parameter>
    <parameter key="lexik_jwt_authentication.encoder.crypto_engine">openssl</parameter>
    <parameter key="gesdinet_jwt_refresh_token.ttl">2592000</parameter>
    <parameter key="gesdinet_jwt_refresh_token.ttl_update">false</parameter>
    <parameter key="gesdinet_jwt_refresh_token.security.firewall">api</parameter>
    <parameter key="gesdinet_jwt_refresh_token.user_provider">null</parameter>
    <parameter key="gesdinet_jwt_refresh_token.user_identity_field">id</parameter>
    <parameter key="gesdinet_jwt_refresh_token.single_use">false</parameter>
    <parameter key="gesdinet_jwt_refresh_token.token_parameter_name">refresh_token</parameter>
    <parameter key="gesdinet_jwt_refresh_token.doctrine_mappings">true</parameter>
    <parameter key="gesdinet_jwt_refresh_token.cookie" type="collection">
      <parameter key="enabled">false</parameter>
      <parameter key="same_site">lax</parameter>
      <parameter key="path">/</parameter>
      <parameter key="domain">null</parameter>
      <parameter key="http_only">true</parameter>
      <parameter key="secure">true</parameter>
      <parameter key="remove_token_from_body">true</parameter>
    </parameter>
    <parameter key="gesdinet_jwt_refresh_token.logout_firewall_context">security.firewall.map.context.api</parameter>
    <parameter key="gesdinet_jwt_refresh_token.return_expiration">false</parameter>
    <parameter key="gesdinet_jwt_refresh_token.return_expiration_parameter_name">refresh_token_expiration</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.refresh_token.class">App\Entity\RefreshToken</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.object_manager.id">doctrine.orm.entity_manager</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.user_checker.id">security.user_checker</parameter>
    <parameter key="vich_uploader.default_filename_attribute_suffix">_name</parameter>
    <parameter key="vich_uploader.mappings" type="collection">
      <parameter key="personne_avatar" type="collection">
        <parameter key="uri_prefix">/images/eleves</parameter>
        <parameter key="upload_destination">/var/www/clients/client0/web1/web/public/uploads/images/eleves</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">Vich\UploaderBundle\Naming\SmartUniqueNamer.personne_avatar</parameter>
          <parameter key="options" type="collection"/>
        </parameter>
        <parameter key="directory_namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="inject_on_load">false</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
      <parameter key="lesson_poster" type="collection">
        <parameter key="uri_prefix">/media/courses/lessons/posters</parameter>
        <parameter key="upload_destination">/var/www/clients/client0/web1/web/public/uploads/media/courses/lessons/posters</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">Vich\UploaderBundle\Naming\SmartUniqueNamer.lesson_poster</parameter>
          <parameter key="options" type="collection"/>
        </parameter>
        <parameter key="directory_namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="inject_on_load">false</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
      <parameter key="lesson_video" type="collection">
        <parameter key="uri_prefix">/media/courses/lessons/videos</parameter>
        <parameter key="upload_destination">/var/www/clients/client0/web1/web/public/uploads/media/courses/lessons/videos</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">Vich\UploaderBundle\Naming\SmartUniqueNamer.lesson_video</parameter>
          <parameter key="options" type="collection"/>
        </parameter>
        <parameter key="directory_namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="inject_on_load">false</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
      <parameter key="formations_path" type="collection">
        <parameter key="uri_prefix">/media/formations/images</parameter>
        <parameter key="upload_destination">/var/www/clients/client0/web1/web/public/uploads/media/formations/images</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">Vich\UploaderBundle\Naming\SmartUniqueNamer.formations_path</parameter>
          <parameter key="options" type="collection"/>
        </parameter>
        <parameter key="directory_namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="inject_on_load">false</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
    </parameter>
    <parameter key="vich_uploader.file_injector.class">Vich\UploaderBundle\Injector\FileInjector</parameter>
    <parameter key="fos_js_routing.extractor.class">FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor</parameter>
    <parameter key="fos_js_routing.controller.class">FOS\JsRoutingBundle\Controller\Controller</parameter>
    <parameter key="fos_js_routing.normalizer.route_collection.class">FOS\JsRoutingBundle\Serializer\Normalizer\RouteCollectionNormalizer</parameter>
    <parameter key="fos_js_routing.normalizer.routes_response.class">FOS\JsRoutingBundle\Serializer\Normalizer\RoutesResponseNormalizer</parameter>
    <parameter key="fos_js_routing.denormalizer.route_collection.class">FOS\JsRoutingBundle\Serializer\Denormalizer\RouteCollectionDenormalizer</parameter>
    <parameter key="fos_js_routing.request_context_base_url">null</parameter>
    <parameter key="fos_js_routing.cache_control" type="collection">
      <parameter key="enabled">false</parameter>
    </parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="api_platform.data_collector.request" type="collection">
        <parameter>api_platform.data_collector.request</parameter>
        <parameter>@ApiPlatform/DataCollector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.http_client" type="collection">
        <parameter>http_client</parameter>
        <parameter>@WebProfiler/Collector/http_client.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.messenger" type="collection">
        <parameter>messenger</parameter>
        <parameter>@WebProfiler/Collector/messenger.html.twig</parameter>
      </parameter>
      <parameter key="mailer.data_collector" type="collection">
        <parameter>mailer</parameter>
        <parameter>@WebProfiler/Collector/mailer.html.twig</parameter>
      </parameter>
      <parameter key="notifier.data_collector" type="collection">
        <parameter>notifier</parameter>
        <parameter>@WebProfiler/Collector/notifier.html.twig</parameter>
      </parameter>
      <parameter key="serializer.data_collector" type="collection">
        <parameter>serializer</parameter>
        <parameter>@WebProfiler/Collector/serializer.html.twig</parameter>
      </parameter>
      <parameter key="Vich\UploaderBundle\DataCollector\MappingCollector" type="collection">
        <parameter>vich_uploader.mapping_collector</parameter>
        <parameter>@VichUploader/Collector/mapping_collector.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="Twig\Extensions\ArrayExtension" class="Twig\Extensions\ArrayExtension" autowire="true" autoconfigure="true"/>
    <service id="Twig\Extensions\DateExtension" class="Twig\Extensions\DateExtension" autowire="true" autoconfigure="true"/>
    <service id="Twig\Extensions\IntlExtension" class="Twig\Extensions\IntlExtension" autowire="true" autoconfigure="true"/>
    <service id="Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" autowire="true" autoconfigure="true"/>
    <service id="App\Entity" class="App\Entity" abstract="true">
      <tag name="container.excluded" source="in &quot;config/services.yaml&quot;"/>
    </service>
    <service id="App\Controller\Admin\AbonnementController" class="App\Controller\Admin\AbonnementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\AbonnementController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\AbonnementItemController" class="App\Controller\Admin\AbonnementItemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\AbonnementItemController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\CategorieController" class="App\Controller\Admin\CategorieController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\CategorieController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\ChapitreController" class="App\Controller\Admin\ChapitreController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\ChapitreController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\ClasseController" class="App\Controller\Admin\ClasseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\ClasseController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\CoursController" class="App\Controller\Admin\CoursController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\CoursController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\DashboardController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\EleveController" class="App\Controller\Admin\EleveController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\EleveController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\EnseignantController" class="App\Controller\Admin\EnseignantController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\EnseignantController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\EtablissementController" class="App\Controller\Admin\EtablissementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\EtablissementController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\EvaluationController" class="App\Controller\Admin\EvaluationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\EvaluationController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\EvaluationQuestionController" class="App\Controller\Admin\EvaluationQuestionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\EvaluationQuestionController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\ExamController" class="App\Controller\Admin\ExamController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\ExamController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\FAQController" class="App\Controller\Admin\FAQController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\FAQController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\FiliereController" class="App\Controller\Admin\FiliereController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\FiliereController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\FormationController" class="App\Controller\Admin\FormationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\FormationController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\ForumController" class="App\Controller\Admin\ForumController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\ForumController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\ForumMessageController" class="App\Controller\Admin\ForumMessageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\ForumMessageController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\LessonController" class="App\Controller\Admin\LessonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\LessonController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\MediaController" class="App\Controller\Admin\MediaController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\MediaController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\NetworkConfigController" class="App\Controller\Admin\NetworkConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\NetworkConfigController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\NotificationTemplateController" class="App\Controller\Admin\NotificationTemplateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\NotificationTemplateController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\PaysController" class="App\Controller\Admin\PaysController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\PaysController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\PersonneController" class="App\Controller\Admin\PersonneController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\PersonneController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\PropositionController" class="App\Controller\Admin\PropositionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\PropositionController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\QuizController" class="App\Controller\Admin\QuizController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\QuizController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\RegistrationController" class="App\Controller\Admin\RegistrationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Security\EmailVerifier"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\RegistrationController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\SettingController" class="App\Controller\Admin\SettingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\SettingController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\SousSystemeController" class="App\Controller\Admin\SousSystemeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\SousSystemeController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\SpecialiteController" class="App\Controller\Admin\SpecialiteController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\SpecialiteController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\SujetController" class="App\Controller\Admin\SujetController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\SujetController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\TermController" class="App\Controller\Admin\TermController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\TermController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\TypeEnseignementController" class="App\Controller\Admin\TypeEnseignementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Admin\TypeEnseignementController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\QuizResultRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\DetailsController" class="App\Controller\Api\Controller\Course\DetailsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\CoursRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\DetailsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" class="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\MembreRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\AnswerForumMessage"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Forum\CourseForum" class="App\Controller\Api\Controller\Course\Forum\CourseForum" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\CourseForum"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Forum\ForumSubjects" class="App\Controller\Api\Controller\Course\Forum\ForumSubjects" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\ForumSubjects"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" class="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\MembreRepository"/>
      <argument type="service" id="App\Repository\LikeMessageForumRepository"/>
      <argument type="service" id="App\Repository\ForumMessageRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\LikeForumMessageController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Forum\NewForumMessage" class="App\Controller\Api\Controller\Course\Forum\NewForumMessage" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\MembreRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\NewForumMessage"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Forum\PostSubjectController" class="App\Controller\Api\Controller\Course\Forum\PostSubjectController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\MembreRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\PostSubjectController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Forum\SubjectMessages" class="App\Controller\Api\Controller\Course\Forum\SubjectMessages" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\ForumMessageRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\SubjectMessages"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Forum\SujetResoluController" class="App\Controller\Api\Controller\Course\Forum\SujetResoluController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\ForumMessageRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\MembreRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\SujetResoluController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Lesson\FinishedController" class="App\Controller\Api\Controller\Course\Lesson\FinishedController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\PaymentRepository"/>
      <argument type="service" id="App\Repository\MembreRepository"/>
      <argument type="service" id="App\Repository\ForumRepository"/>
      <argument type="service" id="App\Repository\LectureRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Repository\LessonRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Lesson\FinishedController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Lesson\FinishedLectures" class="App\Controller\Api\Controller\Course\Lesson\FinishedLectures" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\LectureRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Lesson\FinishedLectures"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Quiz\PostController" class="App\Controller\Api\Controller\Course\Quiz\PostController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\PaymentRepository"/>
      <argument type="service" id="App\Repository\ChapitreRepository"/>
      <argument type="service" id="App\Repository\QuizLostRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Repository\LectureRepository"/>
      <argument type="service" id="App\Repository\QuizResultRepository"/>
      <argument type="service" id="App\Repository\QuizRepository"/>
      <argument type="service" id="App\Repository\CoursRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Quiz\PostController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Review\CourseReviewController" class="App\Controller\Api\Controller\Course\Review\CourseReviewController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Review\CourseReviewController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\Review\PostReviewController" class="App\Controller\Api\Controller\Course\Review\PostReviewController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Review\PostReviewController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\ShowQuizzesController" class="App\Controller\Api\Controller\Course\ShowQuizzesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\ShowQuizzesController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\StartCourseController" class="App\Controller\Api\Controller\Course\StartCourseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\PaymentRepository"/>
      <argument type="service" id="App\Repository\MembreRepository"/>
      <argument type="service" id="App\Repository\ForumRepository"/>
      <argument type="service" id="App\Repository\LectureRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\StartCourseController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\StudentCourseController" class="App\Controller\Api\Controller\Course\StudentCourseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\StudentCourseController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Course\StudentLectureController" class="App\Controller\Api\Controller\Course\StudentLectureController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\StudentLectureController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Etablissement\AllController" class="App\Controller\Api\Controller\Etablissement\AllController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EtablissementRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Etablissement\AllController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Evaluation\EvaluationsEleve" class="App\Controller\Api\Controller\Evaluation\EvaluationsEleve" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\EvaluationsEleve"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Evaluation\InscriptionController" class="App\Controller\Api\Controller\Evaluation\InscriptionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\InscriptionController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Evaluation\ListController" class="App\Controller\Api\Controller\Evaluation\ListController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EvaluationRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\ListController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Evaluation\PostCorrectionController" class="App\Controller\Api\Controller\Evaluation\PostCorrectionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\QuizRepository"/>
      <argument type="service" id="App\Repository\EvaluationQuestionRepository"/>
      <argument type="service" id="App\Repository\EvaluationResultatRepository"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\PostCorrectionController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Evaluation\QuestionnaireController" class="App\Controller\Api\Controller\Evaluation\QuestionnaireController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\EvaluationResultatRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Repository\QuizRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\QuestionnaireController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Evaluation\ResultatController" class="App\Controller\Api\Controller\Evaluation\ResultatController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EvaluationResultatRepository"/>
      <argument type="service" id="App\Repository\QuizRepository"/>
      <argument type="service" id="App\Repository\EvaluationQuestionRepository"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\ResultatController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Faq\FaqCourseController" class="App\Controller\Api\Controller\Faq\FaqCourseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\FAQRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Faq\FaqCourseController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Payment\PayerAbonnementController" class="App\Controller\Api\Controller\Payment\PayerAbonnementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\PaymentMethodRepository"/>
      <argument type="service" id="App\Repository\PaymentRepository"/>
      <argument type="service" id="App\Repository\NetworkConfigRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Payment\PayerAbonnementController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Payment\PayerCoursController" class="App\Controller\Api\Controller\Payment\PayerCoursController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="App\Repository\PaymentMethodRepository"/>
      <argument type="service" id="App\Repository\PaymentRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Payment\PayerCoursController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\Payment\StudentPaymentController" class="App\Controller\Api\Controller\Payment\StudentPaymentController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\Payment\StudentPaymentController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\SecurityController" class="App\Controller\Api\Controller\SecurityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\SecurityController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\User\ChangeAvatarController" class="App\Controller\Api\Controller\User\ChangeAvatarController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Api\Controller\User\MeController" class="App\Controller\Api\Controller\User\MeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\User\MeController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\User\NetworkController" class="App\Controller\Api\Controller\User\NetworkController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="knp_paginator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\User\NetworkController"/>
      </call>
    </service>
    <service id="App\Controller\Api\Controller\User\NewController" class="App\Controller\Api\Controller\User\NewController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="App\Repository\PersonneRepository"/>
      <argument type="service" id="App\Security\EmailVerifier"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Api\Controller\User\NewController"/>
      </call>
    </service>
    <service id="App\Controller\Front\CourseForumController" class="App\Controller\Front\CourseForumController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Front\CourseForumController"/>
      </call>
    </service>
    <service id="App\Controller\Front\CoursesController" class="App\Controller\Front\CoursesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Front\CoursesController"/>
      </call>
    </service>
    <service id="App\Controller\Front\EvaluationController" class="App\Controller\Front\EvaluationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Front\EvaluationController"/>
      </call>
    </service>
    <service id="App\Controller\Front\ExamController" class="App\Controller\Front\ExamController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Front\ExamController"/>
      </call>
    </service>
    <service id="App\Controller\Front\FaqController" class="App\Controller\Front\FaqController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Front\FaqController"/>
      </call>
    </service>
    <service id="App\Controller\Front\ForumController" class="App\Controller\Front\ForumController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Front\ForumController"/>
      </call>
    </service>
    <service id="App\Controller\Front\PaymentController" class="App\Controller\Front\PaymentController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Front\PaymentController"/>
      </call>
    </service>
    <service id="App\Controller\Front\coursesCategoryController" class="App\Controller\Front\coursesCategoryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Front\coursesCategoryController"/>
      </call>
    </service>
    <service id="App\Controller\FrontController" class="App\Controller\FrontController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\FrontController"/>
      </call>
    </service>
    <service id="App\Controller\HomeController" class="App\Controller\HomeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\HomeController"/>
      </call>
    </service>
    <service id="App\Controller\IInstructor\OrdersController" class="App\Controller\IInstructor\OrdersController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\IInstructor\OrdersController"/>
      </call>
    </service>
    <service id="App\Controller\Instructor\CourseForumController" class="App\Controller\Instructor\CourseForumController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Instructor\CourseForumController"/>
      </call>
    </service>
    <service id="App\Controller\Instructor\CoursesController" class="App\Controller\Instructor\CoursesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Instructor\CoursesController"/>
      </call>
    </service>
    <service id="App\Controller\Instructor\ExamController" class="App\Controller\Instructor\ExamController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Instructor\ExamController"/>
      </call>
    </service>
    <service id="App\Controller\Instructor\HomeController" class="App\Controller\Instructor\HomeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Instructor\HomeController"/>
      </call>
    </service>
    <service id="App\Controller\Instructor\LessonController" class="App\Controller\Instructor\LessonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Instructor\LessonController"/>
      </call>
    </service>
    <service id="App\Controller\Instructor\NetworkController" class="App\Controller\Instructor\NetworkController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Utils\Keys"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Instructor\NetworkController"/>
      </call>
    </service>
    <service id="App\Controller\Instructor\OrdersController" class="App\Controller\Instructor\OrdersController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Instructor\OrdersController"/>
      </call>
    </service>
    <service id="App\Controller\Instructor\ReviewsController" class="App\Controller\Instructor\ReviewsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Instructor\ReviewsController"/>
      </call>
    </service>
    <service id="App\Controller\MaintenanceController" class="App\Controller\MaintenanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\MaintenanceController"/>
      </call>
    </service>
    <service id="App\Controller\PaymentControllers" class="App\Controller\PaymentControllers" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Utils\Keys"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\PaymentControllers"/>
      </call>
    </service>
    <service id="App\Controller\ProfileController" class="App\Controller\ProfileController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Security\EmailVerifier"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\ProfileController"/>
      </call>
    </service>
    <service id="App\Controller\RegistrationController" class="App\Controller\RegistrationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Security\EmailVerifier"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\RegistrationController"/>
      </call>
    </service>
    <service id="App\Controller\ResetPasswordController" class="App\Controller\ResetPasswordController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="symfonycasts.reset_password.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\ResetPasswordController"/>
      </call>
    </service>
    <service id="App\Controller\SecurityController" class="App\Controller\SecurityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\SecurityController"/>
      </call>
    </service>
    <service id="App\Controller\Student\CourseController" class="App\Controller\Student\CourseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Student\CourseController"/>
      </call>
    </service>
    <service id="App\Controller\Student\EvaluationController" class="App\Controller\Student\EvaluationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Student\EvaluationController"/>
      </call>
    </service>
    <service id="App\Controller\Student\HomeController" class="App\Controller\Student\HomeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Student\HomeController"/>
      </call>
    </service>
    <service id="App\Controller\Student\NetworkController" class="App\Controller\Student\NetworkController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Student\NetworkController"/>
      </call>
    </service>
    <service id="App\Controller\Student\PaymentController" class="App\Controller\Student\PaymentController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\Student\PaymentController"/>
      </call>
    </service>
    <service id="App\Controller\TermsController" class="App\Controller\TermsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.CshazM0.App\Controller\TermsController"/>
      </call>
    </service>
    <service id="App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="App\Repository\EnseignantRepository"/>
      <argument type="service" id="App\Repository\EleveRepository"/>
      <argument type="service" id="App\Repository\ClasseRepository"/>
      <argument type="service" id="App\Repository\CoursRepository"/>
    </service>
    <service id="App\EntityListener\UserListener" class="App\EntityListener\UserListener" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Repository\PersonneRepository"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="App\Security\EmailVerifier"/>
      <argument type="service" id="security.user_password_hasher"/>
    </service>
    <service id="App\EventSubscriber\ControllerSubscriber" class="App\EventSubscriber\ControllerSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="App\EventSubscriber\KernelSubscriber" class="App\EventSubscriber\KernelSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="App\Repository\PersonneRepository"/>
      <argument type="service" id="App\Repository\SiteSettingRepository"/>
      <argument type="service" id="App\Repository\SocialSettingRepository"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="App\Repository\EvaluationRepository"/>
      <argument type="service" id="App\Repository\EvaluationResultatRepository"/>
    </service>
    <service id="App\EventSubscriber\LoginSubscriber" class="App\EventSubscriber\LoginSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="App\Repository\PersonneRepository"/>
    </service>
    <service id="App\EventSubscriber\LogoutSubscriber" class="App\EventSubscriber\LogoutSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="App\EventSubscriber\PageLoadedSubscriber" class="App\EventSubscriber\PageLoadedSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="App\Repository\EvaluationRepository"/>
    </service>
    <service id="App\Form\AbonnementItemType" class="App\Form\AbonnementItemType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\AbonnementType" class="App\Form\AbonnementType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CategorieType" class="App\Form\CategorieType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ChangePasswordFormType" class="App\Form\ChangePasswordFormType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ChapitreType" class="App\Form\ChapitreType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ClasseType" class="App\Form\ClasseType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ContactType" class="App\Form\ContactType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CoursType" class="App\Form\CoursType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CourseQuizType" class="App\Form\CourseQuizType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CourseReviewType" class="App\Form\CourseReviewType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\EditSocialSettingType" class="App\Form\EditSocialSettingType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\EleveType" class="App\Form\EleveType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\EnseignantType" class="App\Form\EnseignantType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\EtablissementType" class="App\Form\EtablissementType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\EvaluationQuestionType" class="App\Form\EvaluationQuestionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\EvaluationType" class="App\Form\EvaluationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ExamFormType" class="App\Form\ExamFormType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FAQType" class="App\Form\FAQType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FiliereType" class="App\Form\FiliereType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FormationType" class="App\Form\FormationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ForumMessageType" class="App\Form\ForumMessageType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ForumType" class="App\Form\ForumType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\GeneralSettingsType" class="App\Form\GeneralSettingsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Lesson1Type" class="App\Form\Lesson1Type" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\LessonFormType" class="App\Form\LessonFormType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\LessonType" class="App\Form\LessonType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\MediaType" class="App\Form\MediaType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\NetworkConfigType" class="App\Form\NetworkConfigType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\NotificationTemplateType" class="App\Form\NotificationTemplateType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PaysType" class="App\Form\PaysType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PersonneFormType" class="App\Form\PersonneFormType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="App\Form\PersonneType" class="App\Form\PersonneType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PropositionType" class="App\Form\PropositionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\QuizType" class="App\Form\QuizType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\RegistrationFormType" class="App\Form\RegistrationFormType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\RegistrationStudentType" class="App\Form\RegistrationStudentType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\RegistrationTeacherType" class="App\Form\RegistrationTeacherType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ResetPasswordRequestFormType" class="App\Form\ResetPasswordRequestFormType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ResetPasswordType" class="App\Form\ResetPasswordType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\RetraitType" class="App\Form\RetraitType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\SocialSettingsType" class="App\Form\SocialSettingsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\SousSystemeType" class="App\Form\SousSystemeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\SpecialiteType" class="App\Form\SpecialiteType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\SujetType" class="App\Form\SujetType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TermType" class="App\Form\TermType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TypeEnseignementType" class="App\Form\TypeEnseignementType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\WebSiteSettingsType" class="App\Form\WebSiteSettingsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\OpenApi\OpenApiFactory" class="App\OpenApi\OpenApiFactory" autowire="true">
      <argument type="service" id="App\OpenApi\OpenApiFactory.inner"/>
    </service>
    <service id="App\Repository\AbonnementItemRepository" class="App\Repository\AbonnementItemRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AbonnementRepository" class="App\Repository\AbonnementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ChapitreRepository" class="App\Repository\ChapitreRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ClasseRepository" class="App\Repository\ClasseRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CoursRepository" class="App\Repository\CoursRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CourseTagRepository" class="App\Repository\CourseTagRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EleveRepository" class="App\Repository\EleveRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EmailSettingRepository" class="App\Repository\EmailSettingRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EnseignantRepository" class="App\Repository\EnseignantRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EtablissementRepository" class="App\Repository\EtablissementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EvaluationQuestionRepository" class="App\Repository\EvaluationQuestionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EvaluationRepository" class="App\Repository\EvaluationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EvaluationResultatRepository" class="App\Repository\EvaluationResultatRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ExamRepository" class="App\Repository\ExamRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FAQRepository" class="App\Repository\FAQRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FiliereRepository" class="App\Repository\FiliereRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FormationRepository" class="App\Repository\FormationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ForumMessageRepository" class="App\Repository\ForumMessageRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ForumRepository" class="App\Repository\ForumRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\JoinAtRepository" class="App\Repository\JoinAtRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LectureRepository" class="App\Repository\LectureRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LessonRepository" class="App\Repository\LessonRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LikeMessageForumRepository" class="App\Repository\LikeMessageForumRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LikeRepository" class="App\Repository\LikeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MediaRepository" class="App\Repository\MediaRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MembreRepository" class="App\Repository\MembreRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NetworkConfigRepository" class="App\Repository\NetworkConfigRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NotificationSettingRepository" class="App\Repository\NotificationSettingRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NotificationTemplateRepository" class="App\Repository\NotificationTemplateRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NotificationTypeRepository" class="App\Repository\NotificationTypeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PaymentMethodRepository" class="App\Repository\PaymentMethodRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PaymentRepository" class="App\Repository\PaymentRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PaysRepository" class="App\Repository\PaysRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PersonneRepository" class="App\Repository\PersonneRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PropositionRepository" class="App\Repository\PropositionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\QuizLostRepository" class="App\Repository\QuizLostRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\QuizRepository" class="App\Repository\QuizRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\QuizResultRepository" class="App\Repository\QuizResultRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\QuizzesTypeRepository" class="App\Repository\QuizzesTypeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ReponseRepository" class="App\Repository\ReponseRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ResetPasswordRequestRepository" class="App\Repository\ResetPasswordRequestRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\RetraitRepository" class="App\Repository\RetraitRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ReviewRepository" class="App\Repository\ReviewRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SiteSettingRepository" class="App\Repository\SiteSettingRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SkillLevelRepository" class="App\Repository\SkillLevelRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SocialSettingRepository" class="App\Repository\SocialSettingRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SousSystemeRepository" class="App\Repository\SousSystemeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SpecialiteRepository" class="App\Repository\SpecialiteRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SujetRepository" class="App\Repository\SujetRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TermRepository" class="App\Repository\TermRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TypeEnseignementRepository" class="App\Repository\TypeEnseignementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Security\AppAuthenticator" class="App\Security\AppAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Security\EmailVerifier" class="App\Security\EmailVerifier" autowire="true" autoconfigure="true">
      <argument type="service" id="symfonycasts.verify_email.helper"/>
      <argument type="service" id="mailer.mailer"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Service\FileUploader" class="App\Service\FileUploader" autowire="true" autoconfigure="true">
      <argument>/var/www/clients/client0/web1/web/public/uploads/</argument>
      <argument>/var/www/clients/client0/web1/web/public/</argument>
      <argument type="service" id="slugger"/>
    </service>
    <service id="App\Utils\Dto\EvaluationDto" class="App\Utils\Dto\EvaluationDto" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Keys" class="App\Utils\Keys" autowire="true" autoconfigure="true">
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="App\Utils\ManageNetwork" class="App\Utils\ManageNetwork" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\MobileApiService" class="App\Utils\MobileApiService" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\NotificationCodes" class="App\Utils\NotificationCodes" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\PayIn" class="App\Utils\PayIn" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\PayOut" class="App\Utils\PayOut" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\PaymentUtil" class="App\Utils\PaymentUtil" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Utils" class="App\Utils\Utils" autowire="true" autoconfigure="true"/>
    <service id="user_listener" class="App\EntityListener\UserListener" autowire="true" autoconfigure="true">
      <tag name="doctrine.orm.entity_listener"/>
      <argument type="service" id="App\Repository\PersonneRepository"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="App\Security\EmailVerifier"/>
      <argument type="service" id="security.user_password_hasher"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="controller.cache_attribute_listener" class="Symfony\Component\HttpKernel\EventListener\CacheAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
      <argument>true</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/App_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.debug_data_holder" type="service" id="doctrine.debug_data_holder" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_token_verifier" type="service" id="cache.security_token_verifier" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource_collection" type="service" id="api_platform.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
        <argument key=".debug.http_client" type="service" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.messenger.restart_workers_signal" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="mailer.message_logger_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="translation.locale_switcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="session_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="messenger.transport.in_memory.factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine.debug_data_holder" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="twig.form.engine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.security_is_granted_attribute_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.security_token_verifier" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.route_name_resolver" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.resource" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.property" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.resource_collection" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key=".debug.http_client" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
        <argument type="service" id="translation.locale_switcher"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.get_routing_condition_service" class="Closure" public="true">
      <tag name="routing.expression_language_function" function="service"/>
      <argument type="collection">
        <argument type="service" id=".service_locator.Xbsa8iG"/>
        <argument>get</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" abstract="true">
      <argument type="service" id="container.getenv"/>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Request" class="Symfony\Component\HttpFoundation\Request" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" class="Symfony\Component\HttpFoundation\Session\SessionInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.lLv4pWF"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_token_verifier</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource_collection</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_invalidate_tags" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.NBUFN6A"/>
      <call method="setName">
        <argument>cache:pool:invalidate-tags</argument>
      </call>
      <call method="setDescription">
        <argument>Invalidate cache tags for all or a specific pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_token_verifier</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource_collection</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_token_verifier</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource_collection</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>dev</argument>
      <argument>/var/www/clients/client0/web1/web</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>Lists all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.._yvSZB"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.messenger_consume_messages" class="Symfony\Component\Messenger\Command\ConsumeMessagesCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="null"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
        <argument>sync</argument>
      </argument>
      <argument type="service" id="messenger.listener.reset_services" on-invalid="null"/>
      <argument type="collection">
        <argument>messenger.bus.default</argument>
      </argument>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:consume</argument>
      </call>
      <call method="setDescription">
        <argument>Consume messages</argument>
      </call>
    </service>
    <service id="console.command.messenger_setup_transports" class="Symfony\Component\Messenger\Command\SetupTransportsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
        <argument>sync</argument>
      </argument>
      <call method="setName">
        <argument>messenger:setup-transports</argument>
      </call>
      <call method="setDescription">
        <argument>Prepare the required infrastructure for the transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_debug" class="Symfony\Component\Messenger\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="collection">
          <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="collection">
            <argument type="collection">
              <argument>mailer.messenger.message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="collection">
            <argument type="collection">
              <argument>chatter.messenger.chat_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="collection">
            <argument type="collection">
              <argument>texter.messenger.sms_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\PushMessage" type="collection">
            <argument type="collection">
              <argument>texter.messenger.push_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
        </argument>
      </argument>
      <call method="setName">
        <argument>debug:messenger</argument>
      </call>
      <call method="setDescription">
        <argument>List messages you can dispatch using the message buses</argument>
      </call>
    </service>
    <service id="console.command.messenger_stop_workers" class="Symfony\Component\Messenger\Command\StopWorkersCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <call method="setName">
        <argument>messenger:stop-workers</argument>
      </call>
      <call method="setDescription">
        <argument>Stop workers after their current message</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_retry" class="Symfony\Component\Messenger\Command\FailedMessagesRetryCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="null"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:retry</argument>
      </call>
      <call method="setDescription">
        <argument>Retry one or more messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_show" class="Symfony\Component\Messenger\Command\FailedMessagesShowCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:show</argument>
      </call>
      <call method="setDescription">
        <argument>Show one or more messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_remove" class="Symfony\Component\Messenger\Command\FailedMessagesRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove given messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_stats" class="Symfony\Component\Messenger\Command\StatsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
        <argument>sync</argument>
      </argument>
      <call method="setName">
        <argument>messenger:stats</argument>
      </call>
      <call method="setDescription">
        <argument>Show the message count for one or more transports</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/var/www/clients/client0/web1/web/translations</argument>
      <argument>/var/www/clients/client0/web1/web/templates</argument>
      <argument type="collection">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations</argument>
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations</argument>
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
      <call method="setDescription">
        <argument>Display translation messages information</argument>
      </call>
    </service>
    <service id="console.command.translation_extract" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/var/www/clients/client0/web1/web/translations</argument>
      <argument>/var/www/clients/client0/web1/web/templates</argument>
      <argument type="collection">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations</argument>
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations</argument>
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
      <call method="setDescription">
        <argument>Extract missing translations keys from code to translation files.</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_pull" class="Symfony\Component\Translation\Command\TranslationPullCommand">
      <tag name="console.command" command="translation:pull"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>en</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:pull</argument>
      </call>
      <call method="setDescription">
        <argument>Pull translations from a given provider.</argument>
      </call>
    </service>
    <service id="console.command.translation_push" class="Symfony\Component\Translation\Command\TranslationPushCommand">
      <tag name="console.command" command="translation:push"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:push</argument>
      </call>
      <call method="setDescription">
        <argument>Push translations to a given provider.</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Component\Translation\Command\XliffLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
      <call method="setDescription">
        <argument>Lint an XLIFF file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument></argument>
        <argument>Vich\UploaderBundle\Form\Type</argument>
        <argument>FOS\CKEditorBundle\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\AbonnementItemType</argument>
        <argument>App\Form\AbonnementType</argument>
        <argument>App\Form\CategorieType</argument>
        <argument>App\Form\ChangePasswordFormType</argument>
        <argument>App\Form\ChapitreType</argument>
        <argument>App\Form\ClasseType</argument>
        <argument>App\Form\ContactType</argument>
        <argument>App\Form\CoursType</argument>
        <argument>App\Form\CourseQuizType</argument>
        <argument>App\Form\CourseReviewType</argument>
        <argument>App\Form\EditSocialSettingType</argument>
        <argument>App\Form\EleveType</argument>
        <argument>App\Form\EnseignantType</argument>
        <argument>App\Form\EtablissementType</argument>
        <argument>App\Form\EvaluationQuestionType</argument>
        <argument>App\Form\EvaluationType</argument>
        <argument>App\Form\ExamFormType</argument>
        <argument>App\Form\FAQType</argument>
        <argument>App\Form\FiliereType</argument>
        <argument>App\Form\FormationType</argument>
        <argument>App\Form\ForumMessageType</argument>
        <argument>App\Form\ForumType</argument>
        <argument>App\Form\GeneralSettingsType</argument>
        <argument>App\Form\Lesson1Type</argument>
        <argument>App\Form\LessonFormType</argument>
        <argument>App\Form\LessonType</argument>
        <argument>App\Form\MediaType</argument>
        <argument>App\Form\NetworkConfigType</argument>
        <argument>App\Form\NotificationTemplateType</argument>
        <argument>App\Form\PaysType</argument>
        <argument>App\Form\PersonneFormType</argument>
        <argument>App\Form\PersonneType</argument>
        <argument>App\Form\PropositionType</argument>
        <argument>App\Form\QuizType</argument>
        <argument>App\Form\RegistrationFormType</argument>
        <argument>App\Form\RegistrationStudentType</argument>
        <argument>App\Form\RegistrationTeacherType</argument>
        <argument>App\Form\ResetPasswordRequestFormType</argument>
        <argument>App\Form\ResetPasswordType</argument>
        <argument>App\Form\RetraitType</argument>
        <argument>App\Form\SocialSettingsType</argument>
        <argument>App\Form\SousSystemeType</argument>
        <argument>App\Form\SpecialiteType</argument>
        <argument>App\Form\SujetType</argument>
        <argument>App\Form\TermType</argument>
        <argument>App\Form\TypeEnseignementType</argument>
        <argument>App\Form\WebSiteSettingsType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>FM\ElfinderBundle\Form\Type\ElFinderType</argument>
        <argument>Vich\UploaderBundle\Form\Type\VichFileType</argument>
        <argument>Vich\UploaderBundle\Form\Type\VichImageType</argument>
        <argument>FOS\CKEditorBundle\Form\Type\CKEditorType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
        <argument>Symfony\Component\Form\Extension\PasswordHasher\Type\FormTypePasswordHasherExtension</argument>
        <argument>Symfony\Component\Form\Extension\PasswordHasher\Type\PasswordTypePasswordHasherExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
      <call method="setDescription">
        <argument>Display form type information</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.app"/>
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.messenger.restart_workers_signal" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.messenger.restart_workers_signal.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_token_verifier" type="service" id="cache.security_token_verifier" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource_collection" type="service" id="api_platform.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_token_verifier" type="service" id="cache.security_token_verifier" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource_collection" type="service" id="api_platform.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator"/>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">%env(MAILER_DSN)%</argument>
      </argument>
      <factory service="mailer.transport_factory" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.default_transport" class="Symfony\Component\Mailer\Transport\TransportInterface">
      <argument>%env(MAILER_DSN)%</argument>
      <factory service="mailer.transport_factory" method="fromString"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="mailer.message_logger_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="mailer.messenger_transport_listener" class="Symfony\Component\Mailer\EventListener\MessengerTransportListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.mailer_test" class="Symfony\Component\Mailer\Command\MailerTestCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="mailer.transports"/>
      <call method="setName">
        <argument>mailer:test</argument>
      </call>
      <call method="setDescription">
        <argument>Test Mailer transports by sending an email</argument>
      </call>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <tag name="monolog.logger" channel="mailer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory" priority="-100"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.native" class="Symfony\Component\Mailer\Transport\NativeTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.yY.p4P7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/clients/client0/web1/web/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.af.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.ar.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ar.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.ar.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.ar.yaml</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.bg.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.bg.yaml</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.bs.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.bs.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.bs.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.ca.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ca.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.ca.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.ca.yaml</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.cs.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.cs.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.cs.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.cs.yaml</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.da.xliff</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.de.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.de.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.de.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.de.yaml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.en.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.en.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.en.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.en.yaml</argument>
            <argument>/var/www/clients/client0/web1/web/translations/messages.en.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.es.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.es.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.es.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.es.yaml</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.eu.xliff</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.fi.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.fi.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.fi.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.fi.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.fi.yaml</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.fr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.fr.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.fr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.fr.yaml</argument>
            <argument>/var/www/clients/client0/web1/web/translations/messages.fr.yml</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.hu.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.hu.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.hu.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.hu.yaml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.id.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.id.xliff</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.it.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.it.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.it.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.it.yaml</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.ja.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ja.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.lt.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.lt.yaml</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.mn.xlf</argument>
          </argument>
          <argument key="my" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.my.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.my.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.my.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle+intl-icu.nl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.nl.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle+intl-icu.nl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.nl.yaml</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.pl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.pl.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.pl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.pl.yaml</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.pt.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.pt.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.pt.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.pt.yaml</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.pt_BR.xliff</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.ro.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.ru.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ru.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.ru.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.ru.yaml</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.sk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.sl.yaml</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.sq.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.sv.xliff</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.tr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.tr.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.tr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.tr.yaml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.uk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.uk.xliff</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.uk.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.uk.yaml</argument>
          </argument>
          <argument key="ur" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.ur.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.ur.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.ur.xlf</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.uz.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.uz.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations/security.zh_TW.xlf</argument>
          </argument>
          <argument key="sr" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations/VerifyEmailBundle.sr.xlf</argument>
            <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations/ResetPasswordBundle.sr.xlf</argument>
          </argument>
          <argument key="ky" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ky.xliff</argument>
          </argument>
          <argument key="sw" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.sw.xliff</argument>
          </argument>
          <argument key="vn" type="collection">
            <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations/messages.vn.yaml</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/validator/Resources/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/verify-email-bundle/src/Resources/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfonycasts/reset-password-bundle/src/Resources/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/framework-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-migrations-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/debug-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/twig-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/web-profiler-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/twig/extra-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/maker-bundle/src/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/sensio/framework-extra-bundle/src/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/helios-ag/fm-elfinder-bundle/src/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/nelmio/cors-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/api-platform/core/src/Symfony/Bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/lexik/jwt-authentication-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/gesdinet/jwt-refresh-token-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/friendsofsymfony/jsrouting-bundle/translations</argument>
          <argument>/var/www/clients/client0/web1/web/vendor/friendsofsymfony/ckeditor-bundle/src/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/form/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>vendor/symfonycasts/verify-email-bundle/src/Resources/translations</argument>
            <argument>vendor/knplabs/knp-paginator-bundle/translations</argument>
            <argument>vendor/symfonycasts/reset-password-bundle/src/Resources/translations</argument>
            <argument>vendor/vich/uploader-bundle/translations</argument>
            <argument>translations</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-migrations-bundle/translations</argument>
            <argument>vendor/symfony/debug-bundle/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>vendor/symfony/web-profiler-bundle/translations</argument>
            <argument>vendor/twig/extra-bundle/translations</argument>
            <argument>vendor/symfony/security-bundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>vendor/symfony/maker-bundle/src/translations</argument>
            <argument>vendor/sensio/framework-extra-bundle/src/translations</argument>
            <argument>vendor/helios-ag/fm-elfinder-bundle/src/translations</argument>
            <argument>vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
            <argument>vendor/nelmio/cors-bundle/translations</argument>
            <argument>vendor/api-platform/core/src/Symfony/Bundle/translations</argument>
            <argument>vendor/lexik/jwt-authentication-bundle/translations</argument>
            <argument>vendor/gesdinet/jwt-refresh-token-bundle/translations</argument>
            <argument>vendor/friendsofsymfony/jsrouting-bundle/translations</argument>
            <argument>vendor/friendsofsymfony/ckeditor-bundle/src/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.xliff.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xliff"/>
      <argument>xliff</argument>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php_ast" class="Symfony\Component\Translation\Extractor\PhpAstExtractor">
      <tag name="translation.extractor" alias="php"/>
      <argument type="tagged_iterator" tag="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.trans_method" class="Symfony\Component\Translation\Extractor\Visitor\TransMethodVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.translatable_message" class="Symfony\Component\Translation\Extractor\Visitor\TranslatableMessageVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.constraint" class="Symfony\Component\Translation\Extractor\Visitor\ConstraintVisitor">
      <tag name="translation.extractor.visitor"/>
      <argument type="collection">
        <argument>All</argument>
        <argument>AtLeastOneOf</argument>
        <argument>Bic</argument>
        <argument>Blank</argument>
        <argument>Callback</argument>
        <argument>CardScheme</argument>
        <argument>Choice</argument>
        <argument>Cidr</argument>
        <argument>Collection</argument>
        <argument>Compound</argument>
        <argument>Count</argument>
        <argument>Country</argument>
        <argument>CssColor</argument>
        <argument>Currency</argument>
        <argument>DateTime</argument>
        <argument>Date</argument>
        <argument>DivisibleBy</argument>
        <argument>Email</argument>
        <argument>EqualTo</argument>
        <argument>ExpressionSyntax</argument>
        <argument>Expression</argument>
        <argument>File</argument>
        <argument>GreaterThanOrEqual</argument>
        <argument>GreaterThan</argument>
        <argument>Hostname</argument>
        <argument>Iban</argument>
        <argument>IdenticalTo</argument>
        <argument>Image</argument>
        <argument>Ip</argument>
        <argument>IsFalse</argument>
        <argument>IsNull</argument>
        <argument>IsTrue</argument>
        <argument>Isbn</argument>
        <argument>Isin</argument>
        <argument>Issn</argument>
        <argument>Json</argument>
        <argument>Language</argument>
        <argument>Length</argument>
        <argument>LessThanOrEqual</argument>
        <argument>LessThan</argument>
        <argument>Locale</argument>
        <argument>Luhn</argument>
        <argument>NotBlank</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>NotEqualTo</argument>
        <argument>NotIdenticalTo</argument>
        <argument>NotNull</argument>
        <argument>Range</argument>
        <argument>Regex</argument>
        <argument>Sequentially</argument>
        <argument>Time</argument>
        <argument>Timezone</argument>
        <argument>Type</argument>
        <argument>Ulid</argument>
        <argument>Unique</argument>
        <argument>Url</argument>
        <argument>Uuid</argument>
        <argument>Valid</argument>
        <argument>When</argument>
        <argument>Expression</argument>
        <argument>Email</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>When</argument>
        <argument>UniqueEntity</argument>
        <argument>UserPassword</argument>
      </argument>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php_ast"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>xliff</argument>
        <argument type="service" id="translation.dumper.xliff.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.fuYM_Z..translation.warmer"/>
    </service>
    <service id="translation.locale_switcher" class="Symfony\Component\Translation\LocaleSwitcher">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
      <argument type="tagged_iterator" tag="kernel.locale_aware" exclude="translation.locale_switcher"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="translation.provider_collection" class="Symfony\Component\Translation\Provider\TranslationProviderCollection">
      <argument type="collection"/>
      <factory service="translation.provider_collection_factory" method="fromConfig"/>
    </service>
    <service id="translation.provider_collection_factory" class="Symfony\Component\Translation\Provider\TranslationProviderCollectionFactory">
      <argument type="tagged_iterator" tag="translation.provider_factory"/>
      <argument type="collection"/>
    </service>
    <service id="translation.provider_factory.null" class="Symfony\Component\Translation\Provider\NullProviderFactory">
      <tag name="translation.provider_factory"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="service" id="monolog.logger.deprecation" on-invalid="null"/>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter">
      <argument>%env(default::SYMFONY_IDE)%</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <argument type="service_closure" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.context_listener.0"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.sliding_pagination"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cors_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cacheable_response_vary_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.request.add_format"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>28</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.request.read"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>4</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.write"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.request.deserialize"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.serialize"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.respond"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.exception.validation"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.exception"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-96</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.swagger.listener.ui"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.hydra.listener.response.add_link_header"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.http_cache.listener.response.configure"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.validate"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.validate_query_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurity</argument>
        </argument>
        <argument>3</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurityPostDenormalize</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurityPostValidation</argument>
        </argument>
        <argument>63</argument>
      </call>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_authentication_success</argument>
        <argument type="collection">
          <argument type="service_closure" id="gesdinet.jwtrefreshtoken.send_token"/>
          <argument>attachRefreshToken</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Gesdinet\JWTRefreshTokenBundle\EventListener\LogoutEventListener"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\ControllerSubscriber"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\KernelSubscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\LoginSubscriber"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\LogoutSubscriber"/>
          <argument>onLogoutEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\PageLoadedSubscriber"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.message_logger_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.messenger_transport_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.add_error_details_stamp_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.send_failed_message_to_failure_transport_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerStarted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Notifier\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="notifier.logger_notification_listener"/>
          <argument>onNotification</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageHandledEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageHandled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.template_attribute_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.is_granted_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>20</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.paginate"/>
          <argument>before</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.pagination</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.paginate"/>
          <argument>pagination</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.sortable"/>
          <argument>before</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.filtration"/>
          <argument>before</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.pagination</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.sliding_pagination"/>
          <argument>pagination</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="api_platform.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.psr4"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator..6hZeC_"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.psr4" class="Symfony\Component\Routing\Loader\Psr4DirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.otfny_1.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/clients/client0/web1/web/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\Routing\RequestContext" method="fromUri"/>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.Kl0E_Fe"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.cUcW89y.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\PsrCachedReader">
      <tag name="annotations.cached_reader"/>
      <tag name="container.do_not_inline"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service">
        <service class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
      </argument>
      <argument>true</argument>
      <argument type="service_closure" id="annotations.cache_adapter"/>
    </service>
    <service id="annotations.filesystem_cache_adapter" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument></argument>
      <argument>0</argument>
      <argument type="abstract">Cache-Directory</argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache_adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <tag name="container.hot_path"/>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/var/www/clients/client0/web1/web/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/var/www/clients/client0/web1/web/.env.dev.local</argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="debug.serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.phpstan_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.phpstan_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor">
      <tag name="property_info.type_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.native"/>
      <argument type="collection">
        <argument type="service" id="session_listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.handler.native" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="SessionHandler"/>
      </argument>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>null</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument type="abstract">A string or a connection object</argument>
      <argument type="collection"/>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.cXsfP3P"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator.wt9P91Q"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
          <argument type="service" id="form.type_extension.form.password_hasher"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\PasswordType" type="iterator">
          <argument type="service" id="form.type_extension.password.password_hasher"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
      <argument>false</argument>
      <argument type="service" id="twig.form.renderer" on-invalid="ignore"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/clients/client0/web1/web/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument>true</argument>
      </call>
      <call method="setDoctrineAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.kzegaci"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" abstract="true">
      <tag name="container.excluded" source="in &quot;config/validator.php&quot;"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AllValidator" class="Symfony\Component\Validator\Constraints\AllValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" class="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BicValidator" class="Symfony\Component\Validator\Constraints\BicValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BlankValidator" class="Symfony\Component\Validator\Constraints\BlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CallbackValidator" class="Symfony\Component\Validator\Constraints\CallbackValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CardSchemeValidator" class="Symfony\Component\Validator\Constraints\CardSchemeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ChoiceValidator" class="Symfony\Component\Validator\Constraints\ChoiceValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CidrValidator" class="Symfony\Component\Validator\Constraints\CidrValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CollectionValidator" class="Symfony\Component\Validator\Constraints\CollectionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CompoundValidator" class="Symfony\Component\Validator\Constraints\CompoundValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountValidator" class="Symfony\Component\Validator\Constraints\CountValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountryValidator" class="Symfony\Component\Validator\Constraints\CountryValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CssColorValidator" class="Symfony\Component\Validator\Constraints\CssColorValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CurrencyValidator" class="Symfony\Component\Validator\Constraints\CurrencyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateTimeValidator" class="Symfony\Component\Validator\Constraints\DateTimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateValidator" class="Symfony\Component\Validator\Constraints\DateValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DivisibleByValidator" class="Symfony\Component\Validator\Constraints\DivisibleByValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EmailValidator" class="Symfony\Component\Validator\Constraints\EmailValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EqualToValidator" class="Symfony\Component\Validator\Constraints\EqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionValidator" class="Symfony\Component\Validator\Constraints\ExpressionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\FileValidator" class="Symfony\Component\Validator\Constraints\FileValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanValidator" class="Symfony\Component\Validator\Constraints\GreaterThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\HostnameValidator" class="Symfony\Component\Validator\Constraints\HostnameValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IbanValidator" class="Symfony\Component\Validator\Constraints\IbanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IdenticalToValidator" class="Symfony\Component\Validator\Constraints\IdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ImageValidator" class="Symfony\Component\Validator\Constraints\ImageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IpValidator" class="Symfony\Component\Validator\Constraints\IpValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsFalseValidator" class="Symfony\Component\Validator\Constraints\IsFalseValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsNullValidator" class="Symfony\Component\Validator\Constraints\IsNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsTrueValidator" class="Symfony\Component\Validator\Constraints\IsTrueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsbnValidator" class="Symfony\Component\Validator\Constraints\IsbnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsinValidator" class="Symfony\Component\Validator\Constraints\IsinValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IssnValidator" class="Symfony\Component\Validator\Constraints\IssnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\JsonValidator" class="Symfony\Component\Validator\Constraints\JsonValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LanguageValidator" class="Symfony\Component\Validator\Constraints\LanguageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LengthValidator" class="Symfony\Component\Validator\Constraints\LengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanValidator" class="Symfony\Component\Validator\Constraints\LessThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LocaleValidator" class="Symfony\Component\Validator\Constraints\LocaleValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LuhnValidator" class="Symfony\Component\Validator\Constraints\LuhnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotBlankValidator" class="Symfony\Component\Validator\Constraints\NotBlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotEqualToValidator" class="Symfony\Component\Validator\Constraints\NotEqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" class="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotNullValidator" class="Symfony\Component\Validator\Constraints\NotNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RangeValidator" class="Symfony\Component\Validator\Constraints\RangeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RegexValidator" class="Symfony\Component\Validator\Constraints\RegexValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\SequentiallyValidator" class="Symfony\Component\Validator\Constraints\SequentiallyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimeValidator" class="Symfony\Component\Validator\Constraints\TimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimezoneValidator" class="Symfony\Component\Validator\Constraints\TimezoneValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TypeValidator" class="Symfony\Component\Validator\Constraints\TypeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UlidValidator" class="Symfony\Component\Validator\Constraints\UlidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UniqueValidator" class="Symfony\Component\Validator\Constraints\UniqueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UrlValidator" class="Symfony\Component\Validator\Constraints\UrlValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UuidValidator" class="Symfony\Component\Validator\Constraints\UuidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ValidValidator" class="Symfony\Component\Validator\Constraints\ValidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WhenValidator" class="Symfony\Component\Validator\Constraints\WhenValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator_expression_language.recorder_inner"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.when" class="Symfony\Component\Validator\Constraints\WhenValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="messenger.senders_locator" class="Symfony\Component\Messenger\Transport\Sender\SendersLocator">
      <argument type="collection">
        <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="collection">
          <argument>async</argument>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="collection">
          <argument>async</argument>
        </argument>
      </argument>
      <argument type="service" id=".service_locator.NZdAz3P"/>
    </service>
    <service id="messenger.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.transport.symfony_serializer" class="Symfony\Component\Messenger\Transport\Serialization\Serializer">
      <argument type="service" id="debug.serializer"/>
      <argument>json</argument>
      <argument type="collection"/>
    </service>
    <service id="messenger.transport.native_php_serializer" class="Symfony\Component\Messenger\Transport\Serialization\PhpSerializer"/>
    <service id="messenger.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="abstract">bus handler resolver</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware" abstract="true"/>
    <service id="messenger.middleware.dispatch_after_current_bus" class="Symfony\Component\Messenger\Middleware\DispatchAfterCurrentBusMiddleware"/>
    <service id="messenger.middleware.validation" class="Symfony\Component\Messenger\Middleware\ValidationMiddleware">
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="messenger.middleware.reject_redelivered_message_middleware" class="Symfony\Component\Messenger\Middleware\RejectRedeliveredMessageMiddleware"/>
    <service id="messenger.middleware.failed_message_processing_middleware" class="Symfony\Component\Messenger\Middleware\FailedMessageProcessingMiddleware"/>
    <service id="messenger.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware" abstract="true">
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="messenger.middleware.router_context" class="Symfony\Component\Messenger\Middleware\RouterContextMiddleware">
      <argument type="service" id="router.default"/>
    </service>
    <service id="messenger.receiver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.async"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.sync" type="service_closure" id="messenger.transport.sync"/>
        <argument key="sync" type="service_closure" id="messenger.transport.sync"/>
      </argument>
    </service>
    <service id="messenger.transport_factory" class="Symfony\Component\Messenger\Transport\TransportFactory">
      <argument type="tagged_iterator" tag="messenger.transport_factory"/>
    </service>
    <service id="messenger.transport.amqp.factory" class="Symfony\Component\Messenger\Bridge\Amqp\Transport\AmqpTransportFactory"/>
    <service id="messenger.transport.redis.factory" class="Symfony\Component\Messenger\Bridge\Redis\Transport\RedisTransportFactory"/>
    <service id="messenger.transport.sync.factory" class="Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="messenger.routable_message_bus"/>
    </service>
    <service id="messenger.transport.in_memory.factory" class="Symfony\Component\Messenger\Transport\InMemoryTransportFactory">
      <tag name="messenger.transport_factory"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="messenger.transport.sqs.factory" class="Symfony\Component\Messenger\Bridge\AmazonSqs\Transport\AmazonSqsTransportFactory">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.transport.beanstalkd.factory" class="Symfony\Component\Messenger\Bridge\Beanstalkd\Transport\BeanstalkdTransportFactory"/>
    <service id="messenger.retry_strategy_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.retry.multiplier_retry_strategy.async"/>
        <argument key="failed" type="service_closure" id="messenger.retry.multiplier_retry_strategy.failed"/>
        <argument key="sync" type="service_closure" id="messenger.retry.multiplier_retry_strategy.sync"/>
      </argument>
    </service>
    <service id="messenger.retry.abstract_multiplier_retry_strategy" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy" abstract="true">
      <argument type="abstract">max retries</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
    </service>
    <service id="messenger.retry.send_failed_message_for_retry_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id=".service_locator.NZdAz3P"/>
      <argument type="service" id="messenger.retry_strategy_locator"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="messenger.failure.add_error_details_stamp_listener" class="Symfony\Component\Messenger\EventListener\AddErrorDetailsStampListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.failure.send_failed_message_to_failure_transport_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageToFailureTransportListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id=".service_locator.v4buNEb"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.dispatch_pcntl_signal_listener" class="Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.stop_worker_on_restart_signal_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_on_sigterm_signal_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnSigtermSignalListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_on_stop_exception_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnCustomStopExceptionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.reset_services" class="Symfony\Component\Messenger\EventListener\ResetServicesListener">
      <argument type="service" id="services_resetter"/>
    </service>
    <service id="messenger.routable_message_bus" class="Symfony\Component\Messenger\RoutableMessageBus">
      <argument type="service" id=".service_locator.5cAhUFF"/>
      <argument type="service" id="debug.traced.messenger.bus.default"/>
    </service>
    <service id="messenger.transport.async" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="async" is_failure_transport=""/>
      <argument>%env(MESSENGER_TRANSPORT_DSN)%</argument>
      <argument type="collection">
        <argument key="use_notify">true</argument>
        <argument key="check_delayed_interval">60000</argument>
        <argument key="transport_name">async</argument>
      </argument>
      <argument type="service" id="messenger.transport.native_php_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.async" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id="messenger.transport.failed" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="failed" is_failure_transport="1"/>
      <argument>doctrine://default?queue_name=failed</argument>
      <argument type="collection">
        <argument key="transport_name">failed</argument>
      </argument>
      <argument type="service" id="messenger.transport.native_php_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.failed" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id="messenger.transport.sync" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="sync" is_failure_transport=""/>
      <argument>sync://</argument>
      <argument type="collection">
        <argument key="transport_name">sync</argument>
      </argument>
      <argument type="service" id="messenger.transport.native_php_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.sync" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id=".service_locator.NZdAz3P" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.async"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.sync" type="service_closure" id="messenger.transport.sync"/>
        <argument key="sync" type="service_closure" id="messenger.transport.sync"/>
      </argument>
    </service>
    <service id=".service_locator.v4buNEb" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.failed"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="sync" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id="notifier" class="Symfony\Component\Notifier\Notifier">
      <argument type="service" id=".service_locator.0TACwl3"/>
      <argument type="service" id="notifier.channel_policy" on-invalid="ignore"/>
      <call method="addAdminRecipient">
        <argument type="service" id="notifier.admin_recipient.0"/>
      </call>
    </service>
    <service id="notifier.channel_policy" class="Symfony\Component\Notifier\Channel\ChannelPolicy">
      <argument type="collection">
        <argument key="urgent" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="high" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="medium" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="low" type="collection">
          <argument>email</argument>
        </argument>
      </argument>
    </service>
    <service id="notifier.flash_message_importance_mapper" class="Symfony\Component\Notifier\FlashMessage\DefaultFlashMessageImportanceMapper">
      <argument type="collection"/>
    </service>
    <service id="notifier.channel.browser" class="Symfony\Component\Notifier\Channel\BrowserChannel">
      <tag name="notifier.channel" channel="browser"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="notifier.flash_message_importance_mapper"/>
    </service>
    <service id="notifier.channel.chat" class="Symfony\Component\Notifier\Channel\ChatChannel">
      <tag name="notifier.channel" channel="chat"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="ignore"/>
    </service>
    <service id="notifier.channel.sms" class="Symfony\Component\Notifier\Channel\SmsChannel">
      <tag name="notifier.channel" channel="sms"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="ignore"/>
    </service>
    <service id="notifier.channel.email" class="Symfony\Component\Notifier\Channel\EmailChannel">
      <tag name="notifier.channel" channel="email"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.push" class="Symfony\Component\Notifier\Channel\PushChannel">
      <tag name="notifier.channel" channel="push"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="ignore"/>
    </service>
    <service id="notifier.monolog_handler" class="Symfony\Bridge\Monolog\Handler\NotifierHandler">
      <argument type="service" id="notifier"/>
    </service>
    <service id="notifier.failed_message_listener" class="Symfony\Component\Notifier\EventListener\SendFailedMessageToNotifierListener">
      <argument type="service" id="notifier"/>
    </service>
    <service id="chatter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="chatter.transport_factory" method="fromStrings"/>
    </service>
    <service id="chatter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="chatter.transport_factory"/>
    </service>
    <service id="chatter.messenger.chat_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\ChatMessage"/>
      <argument type="service" id="chatter.transports"/>
    </service>
    <service id="texter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="texter.transport_factory" method="fromStrings"/>
    </service>
    <service id="texter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="texter.transport_factory"/>
    </service>
    <service id="texter.messenger.sms_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\SmsMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="texter.messenger.push_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\PushMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="notifier.logger_notification_listener" class="Symfony\Component\Notifier\EventListener\NotificationLoggerListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="notifier.transport_factory.abstract" class="Symfony\Component\Notifier\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.transport_factory.null" class="Symfony\Component\Notifier\Transport\NullTransportFactory">
      <tag name="chatter.transport_factory"/>
      <tag name="texter.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.admin_recipient.0" class="Symfony\Component\Notifier\Recipient\Recipient">
      <argument>admin@example.com</argument>
      <argument></argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="container.private" package="symfony/framework-bundle" version="5.4"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="api_platform.data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.http_client"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.messenger"/>
      </call>
      <call method="add">
        <argument type="service" id="mailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="notifier.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="serializer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="Vich\UploaderBundle\DataCollector\MappingCollector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage">
      <argument>file:/var/www/clients/client0/web1/web/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.request.session_collector" class="Closure">
      <argument type="collection">
        <argument type="service" id="data_collector.request"/>
        <argument>collectSessionUsage</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/App_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument type="service" id="cache.messenger.restart_workers_signal"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator_expression_language</argument>
        <argument type="service" id="cache.validator_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument type="service" id="cache.security_is_granted_attribute_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_token_verifier</argument>
        <argument type="service" id="cache.security_token_verifier"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument type="service" id="api_platform.cache.route_name_resolver"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.resource</argument>
        <argument type="service" id="api_platform.cache.metadata.resource"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.property</argument>
        <argument type="service" id="api_platform.cache.metadata.property"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.resource_collection</argument>
        <argument type="service" id="api_platform.cache.metadata.resource_collection"/>
      </call>
    </service>
    <service id="cache_pool_clearer.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\CachePoolClearerCacheWarmer">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
      </argument>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="data_collector.messenger" class="Symfony\Component\Messenger\DataCollector\MessengerDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/messenger.html.twig" id="messenger" priority="100"/>
      <call method="registerBus">
        <argument>messenger.bus.default</argument>
        <argument type="service" id="debug.traced.messenger.bus.default"/>
      </call>
    </service>
    <service id="mailer.data_collector" class="Symfony\Component\Mailer\DataCollector\MessageDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/mailer.html.twig" id="mailer"/>
      <argument type="service" id="mailer.message_logger_listener"/>
    </service>
    <service id="data_collector.http_client" class="Symfony\Component\HttpClient\DataCollector\HttpClientDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/http_client.html.twig" id="http_client" priority="250"/>
      <call method="registerClient">
        <argument>http_client</argument>
        <argument type="service" id=".debug.http_client"/>
      </call>
    </service>
    <service id="notifier.data_collector" class="Symfony\Component\Notifier\DataCollector\NotificationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/notifier.html.twig" id="notifier"/>
      <argument type="service" id="notifier.logger_notification_listener"/>
    </service>
    <service id="debug.serializer" class="Symfony\Component\Serializer\Debug\TraceableSerializer">
      <argument type="service" id="debug.serializer.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="serializer.data_collector" class="Symfony\Component\Serializer\DataCollector\SerializerDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/serializer.html.twig" id="serializer"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <argument type="service" id="doctrine.debug_data_holder" on-invalid="null"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
      <argument type="service" id="doctrine.dbal.connection_factory.dsn_parser"/>
    </service>
    <service id="doctrine.dbal.connection_factory.dsn_parser" class="Doctrine\DBAL\Tools\DsnParser">
      <argument type="collection">
        <argument key="db2">ibm_db2</argument>
        <argument key="mssql">pdo_sqlsrv</argument>
        <argument key="mysql">pdo_mysql</argument>
        <argument key="mysql2">pdo_mysql</argument>
        <argument key="postgres">pdo_pgsql</argument>
        <argument key="postgresql">pdo_pgsql</argument>
        <argument key="pgsql">pdo_pgsql</argument>
        <argument key="sqlite">pdo_sqlite</argument>
        <argument key="sqlite3">pdo_sqlite</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" class="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="profiler"/>
    </service>
    <service id="doctrine.dbal.default_schema_manager_factory" class="Doctrine\DBAL\Schema\DefaultSchemaManagerFactory"/>
    <service id="doctrine.dbal.legacy_schema_manager_factory" class="Doctrine\DBAL\Schema\LegacySchemaManagerFactory"/>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration">
      <call method="setSchemaManagerFactory">
        <argument type="service" id="doctrine.dbal.legacy_schema_manager_factory"/>
      </call>
      <call method="setMiddlewares">
        <argument type="collection">
          <argument type="service">
            <service class="Doctrine\DBAL\Logging\Middleware">
              <argument type="service" id="monolog.logger.doctrine"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
              <argument type="service" id="doctrine.debug_data_holder"/>
              <argument type="service" id="debug.stopwatch" on-invalid="null"/>
              <call method="setConnectionName">
                <argument>default</argument>
              </call>
            </service>
          </argument>
        </argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager">
      <argument type="service" id=".service_locator.s23S4Lt"/>
      <argument type="collection">
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>vich_uploader.listener.clean.personne_avatar</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>vich_uploader.listener.clean.lesson_poster</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>vich_uploader.listener.clean.lesson_video</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>vich_uploader.listener.clean.formations_path</argument>
        </argument>
        <argument>doctrine.orm.messenger.doctrine_schema_subscriber</argument>
        <argument>doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber</argument>
        <argument>doctrine.orm.listeners.doctrine_token_provider_schema_subscriber</argument>
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preRemove</argument>
          </argument>
          <argument>vich_uploader.listener.remove.personne_avatar</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postFlush</argument>
          </argument>
          <argument>vich_uploader.listener.remove.personne_avatar</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>prePersist</argument>
          </argument>
          <argument>vich_uploader.listener.upload.personne_avatar</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>vich_uploader.listener.upload.personne_avatar</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preRemove</argument>
          </argument>
          <argument>vich_uploader.listener.remove.lesson_poster</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postFlush</argument>
          </argument>
          <argument>vich_uploader.listener.remove.lesson_poster</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>prePersist</argument>
          </argument>
          <argument>vich_uploader.listener.upload.lesson_poster</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>vich_uploader.listener.upload.lesson_poster</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preRemove</argument>
          </argument>
          <argument>vich_uploader.listener.remove.lesson_video</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postFlush</argument>
          </argument>
          <argument>vich_uploader.listener.remove.lesson_video</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>prePersist</argument>
          </argument>
          <argument>vich_uploader.listener.upload.lesson_video</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>vich_uploader.listener.upload.lesson_video</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preRemove</argument>
          </argument>
          <argument>vich_uploader.listener.remove.formations_path</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postFlush</argument>
          </argument>
          <argument>vich_uploader.listener.remove.formations_path</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>prePersist</argument>
          </argument>
          <argument>vich_uploader.listener.upload.formations_path</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>vich_uploader.listener.upload.formations_path</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id="doctrine.dbal.logging_middleware" class="Doctrine\DBAL\Logging\Middleware" abstract="true">
      <tag name="monolog.logger" channel="doctrine"/>
      <tag name="doctrine.middleware" connection="default"/>
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.debug_data_holder" class="Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder">
      <tag name="kernel.reset" method="reset"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.debug_middleware" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware" abstract="true">
      <tag name="doctrine.middleware" connection="default"/>
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="messenger.middleware.doctrine_transaction" class="Symfony\Bridge\Doctrine\Messenger\DoctrineTransactionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_ping_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrinePingConnectionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_close_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrineCloseConnectionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_open_transaction_logger" class="Symfony\Bridge\Doctrine\Messenger\DoctrineOpenTransactionLoggerMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="messenger.transport.doctrine.factory" class="Symfony\Component\Messenger\Bridge\Doctrine\Transport\DoctrineTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" class="Symfony\Bridge\Doctrine\Messenger\DoctrineClearEntityManagerWorkerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.messenger.doctrine_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\MessengerTransportDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="tagged_iterator" tag="messenger.receiver"/>
    </service>
    <service id=".1_ServiceLocator~p21.p.X" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true"/>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory">
      <argument type="service" id=".service_locator.6Ole5TH"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener"/>
    <service id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\DoctrineDbalCacheAdapterSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\RememberMeTokenProviderDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="tagged_iterator" tag="security.remember_me_handler"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy"/>
    <service id="doctrine.ulid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UlidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.uuid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UuidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.orm.command.entity_manager_provider" class="Doctrine\Bundle\DoctrineBundle\Orm\ManagerRegistryAwareEntityManagerProvider">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\CollectionRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\ORM\Tools\Console\Command\ConvertMappingCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\ORM\Tools\Console\Command\EnsureProductionSettingsCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\EntityRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\ORM\Tools\Console\Command\InfoCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\ORM\Tools\Console\Command\RunDqlCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
          <argument key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
          <argument key="VichUploaderBundle">Vich\UploaderBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCache">
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCache">
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCache">
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id=".doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/var/www/clients/client0/web1/web/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setSchemaIgnoreClasses">
        <argument type="collection"/>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\Bundle\DoctrineBundle\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setLazyGhostObjectEnabled">
        <argument>true</argument>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomNumericFunction">
        <argument>rand</argument>
        <argument>DoctrineExtensions\Query\Mysql\Rand</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_attribute_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AttributeDriver">
      <argument type="collection">
        <argument>/var/www/clients/client0/web1/web/src/Entity</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="doctrine.orm.default_xml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver">
      <argument type="collection">
        <argument key="/var/www/clients/client0/web1/web/vendor/gesdinet/jwt-refresh-token-bundle/Resources/config/doctrine">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
        <argument key="/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/config/doctrine">Vich\UploaderBundle\Entity</argument>
      </argument>
      <argument>.orm.xml</argument>
      <argument>false</argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver" public="true">
      <argument type="service" id=".service_locator._xkKlkR"/>
      <call method="registerService">
        <argument>App\EntityListener\UserListener</argument>
        <argument>user_listener</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.migrations.dependency_factory" class="Doctrine\Migrations\DependencyFactory">
      <argument type="service" id="doctrine.migrations.configuration_loader"/>
      <argument type="service" id="doctrine.migrations.entity_manager_registry_loader"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setDefinition">
        <argument>Doctrine\Migrations\Version\MigrationFactory</argument>
        <argument type="service_closure" id="doctrine.migrations.container_aware_migrations_factory"/>
      </call>
      <factory class="Doctrine\Migrations\DependencyFactory" method="fromEntityManager"/>
    </service>
    <service id="doctrine.migrations.configuration_loader" class="Doctrine\Migrations\Configuration\Migration\ExistingConfiguration">
      <argument type="service" id="doctrine.migrations.configuration"/>
    </service>
    <service id="doctrine.migrations.connection_loader" class="Doctrine\Migrations\Configuration\Connection\ExistingConnection"/>
    <service id="doctrine.migrations.em_loader" class="Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager"/>
    <service id="doctrine.migrations.entity_manager_registry_loader" class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager">
      <argument type="service" id="doctrine"/>
      <factory class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager" method="withSimpleDefault"/>
    </service>
    <service id="doctrine.migrations.connection_registry_loader" class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection">
      <argument type="service" id="doctrine"/>
      <factory class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection" method="withSimpleDefault"/>
    </service>
    <service id="doctrine.migrations.configuration" class="Doctrine\Migrations\Configuration\Configuration">
      <call method="addMigrationsDirectory">
        <argument>DoctrineMigrations</argument>
        <argument>/var/www/clients/client0/web1/web/migrations</argument>
      </call>
      <call method="setAllOrNothing">
        <argument>false</argument>
      </call>
      <call method="setCheckDatabasePlatform">
        <argument>true</argument>
      </call>
      <call method="setTransactional">
        <argument>true</argument>
      </call>
      <call method="setMetadataStorageConfiguration">
        <argument type="service" id="doctrine.migrations.storage.table_storage"/>
      </call>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory" class="Doctrine\Bundle\MigrationsBundle\MigrationsFactory\ContainerAwareMigrationFactory">
      <argument type="service" id="doctrine.migrations.container_aware_migrations_factory.inner"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Migrations\Tools\Console\Command\DiffCommand">
      <tag name="console.command" command="doctrine:migrations:diff"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:diff</argument>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.sync_metadata_command" class="Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand">
      <tag name="console.command" command="doctrine:migrations:sync-metadata-storage"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <call method="setName">
        <argument>doctrine:migrations:sync-metadata-storage</argument>
      </call>
    </service>
    <service id="doctrine_migrations.versions_command" class="Doctrine\Migrations\Tools\Console\Command\ListCommand">
      <tag name="console.command" command="doctrine:migrations:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:versions</argument>
      <call method="setName">
        <argument>doctrine:migrations:list</argument>
      </call>
    </service>
    <service id="doctrine_migrations.current_command" class="Doctrine\Migrations\Tools\Console\Command\CurrentCommand">
      <tag name="console.command" command="doctrine:migrations:current"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:current</argument>
      <call method="setName">
        <argument>doctrine:migrations:current</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand">
      <tag name="console.command" command="doctrine:migrations:dump-schema"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:dump-schema</argument>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Migrations\Tools\Console\Command\ExecuteCommand">
      <tag name="console.command" command="doctrine:migrations:execute"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:execute</argument>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Migrations\Tools\Console\Command\GenerateCommand">
      <tag name="console.command" command="doctrine:migrations:generate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:generate</argument>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Migrations\Tools\Console\Command\LatestCommand">
      <tag name="console.command" command="doctrine:migrations:latest"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:latest</argument>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Migrations\Tools\Console\Command\MigrateCommand">
      <tag name="console.command" command="doctrine:migrations:migrate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:migrate</argument>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Migrations\Tools\Console\Command\RollupCommand">
      <tag name="console.command" command="doctrine:migrations:rollup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:rollup</argument>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Migrations\Tools\Console\Command\StatusCommand">
      <tag name="console.command" command="doctrine:migrations:status"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:status</argument>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Migrations\Tools\Console\Command\UpToDateCommand">
      <tag name="console.command" command="doctrine:migrations:up-to-date"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:up-to-date</argument>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Migrations\Tools\Console\Command\VersionCommand">
      <tag name="console.command" command="doctrine:migrations:version"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:version</argument>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="doctrine.migrations.storage.table_storage" class="Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration"/>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
      <call method="addCasters">
        <argument type="collection">
          <argument key="Closure">Symfony\Component\VarDumper\Caster\ReflectionCaster::unsetClosureFileInfo</argument>
        </argument>
      </call>
    </service>
    <service id="var_dumper.contextualized_cli_dumper" class="Symfony\Component\VarDumper\Dumper\ContextualizedDumper">
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>/var/www/clients/client0/web1/web</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection">
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>/var/www/clients/client0/web1/web</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
        <argument key="request" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider">
            <argument type="service" id="request_stack"/>
          </service>
        </argument>
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider"/>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer">
      <tag name="monolog.logger" channel="debug"/>
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Component\VarDumper\Command\ServerDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor">
            <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
          </service>
        </argument>
        <argument key="html" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor">
            <argument type="service" id="var_dumper.html_dumper"/>
          </service>
        </argument>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Start a dump server that collects and displays dumps in a single place</argument>
      </call>
    </service>
    <service id="monolog.command.server_log" class="Symfony\Bridge\Monolog\Command\ServerLogCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
      <call method="setDescription">
        <argument>Start a log server that displays logs in real time</argument>
      </call>
    </service>
    <service id="twig" class="Twig\Environment">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="autoescape">name</argument>
        <argument key="cache">/var/www/clients/client0/web1/web/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.string"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.fm_elfinder_init"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_paginator.twig.extension.pagination"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Vich\UploaderBundle\Twig\Extension\UploaderExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="fos_ck_editor.twig_extension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <call method="registerUndefinedTokenParserCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestTag</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
        <argument key="/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/var/www/clients/client0/web1/web/templates</argument>
      <argument type="collection"/>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.etVElvN.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-migrations-bundle/Resources/views</argument>
        <argument>DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/doctrine/doctrine-migrations-bundle/Resources/views</argument>
        <argument>!DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/templates/bundles/TwigBundle</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/templates/bundles/TwigBundle</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/helios-ag/fm-elfinder-bundle/src/Resources/views</argument>
        <argument>FMElfinder</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/helios-ag/fm-elfinder-bundle/src/Resources/views</argument>
        <argument>!FMElfinder</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/templates</argument>
        <argument>KnpPaginator</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/knplabs/knp-paginator-bundle/templates</argument>
        <argument>!KnpPaginator</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/api-platform/core/src/Symfony/Bundle/Resources/views</argument>
        <argument>ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/api-platform/core/src/Symfony/Bundle/Resources/views</argument>
        <argument>!ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/templates</argument>
        <argument>VichUploader</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/vich/uploader-bundle/templates</argument>
        <argument>!VichUploader</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/friendsofsymfony/ckeditor-bundle/src/Resources/views</argument>
        <argument>FOSCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/friendsofsymfony/ckeditor-bundle/src/Resources/views</argument>
        <argument>!FOSCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/templates</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/clients/client0/web1/web/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.htmlsanitizer" class="Symfony\Bridge\Twig\Extension\HtmlSanitizerExtension">
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.fvqxOHC"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="debug.serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="controller.template_attribute_listener" class="Symfony\Bridge\Twig\EventListener\TemplateAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine">
      <tag name="kernel.reset" method="reset"/>
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/var/www/clients/client0/web1/web/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument>*.twig</argument>
      </argument>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/var/www/clients/client0/web1/web</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler">
      <argument type="service">
        <service class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator"/>
      </argument>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service">
        <service class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
          <argument>null</argument>
          <argument>UTF-8</argument>
          <argument>1</argument>
          <call method="setDisplayOptions">
            <argument type="collection">
              <argument key="maxStringLength">4096</argument>
              <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument type="service" id="data_collector.dump" on-invalid="ignore"/>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor"/>
    <service id="twig.extension.string" class="Twig\Extra\String\StringExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.LcVn9Hr"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.helper" class="Symfony\Bundle\SecurityBundle\Security">
      <argument type="service" id=".service_locator.LrCXAmX"/>
      <argument type="collection">
        <argument key="dev">null</argument>
        <argument key="main" type="service" id=".service_locator.sFCV0Um"/>
        <argument key="login" type="service" id=".service_locator.df1HHDL"/>
        <argument key="api" type="service" id=".service_locator.x._0eBR"/>
      </argument>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>migrate</argument>
      <argument type="service" id="security.csrf.token_storage" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>none</argument>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\InMemoryUserChecker"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.impersonate_url_generator" class="Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap">
      <argument type="service" id=".service_locator.EqDN9r1"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.kLbKLHa"/>
        <argument key="security.firewall.map.context.main">null</argument>
        <argument key="security.firewall.map.context.login" type="service" id=".security.request_matcher.0QxrXJt"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.vhy2oy3"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" abstract="true">
      <argument type="abstract">name</argument>
      <argument type="abstract">user_checker</argument>
      <argument type="abstract">request_matcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>app_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" abstract="true">
      <argument type="abstract">firewall</argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" abstract="true">
      <argument type="abstract">security.ldap.ldap</argument>
      <argument type="abstract">base dn</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <argument type="abstract">default_roles</argument>
      <argument type="abstract">uid key</argument>
      <argument type="abstract">filter</argument>
      <argument type="abstract">password_attribute</argument>
      <argument type="abstract">extra_fields (email etc)</argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="controller.is_granted_attribute_listener" class="Symfony\Component\Security\Http\EventListener\IsGrantedAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="security.is_granted_attribute_expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.security_is_granted_attribute_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_is_granted_attribute_expression_language.recorder_inner"/>
    </service>
    <service id="security.password_hasher_factory" class="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory">
      <argument type="collection">
        <argument key="Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
          <argument key="cost">null</argument>
          <argument key="memory_cost">null</argument>
          <argument key="time_cost">null</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_hasher" class="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher">
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="form.listener.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\EventListener\PasswordHasherListener">
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="form.type_extension.form.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\Type\FormTypePasswordHasherExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.listener.password_hasher"/>
    </service>
    <service id="form.type_extension.password.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\Type\PasswordTypePasswordHasherExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\PasswordType"/>
      <argument type="service" id="form.listener.password_hasher"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap">
      <call method="add">
        <argument type="service" id=".security.request_matcher.28NqKnb"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Blt4X66"/>
        <argument type="collection">
          <argument>ROLE_INSTRUCTOR</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.XWBhKBg"/>
        <argument type="collection">
          <argument>ROLE_STUDENT</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.71rlDtt"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.RTnigTu"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.OipCI0K"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.ojtz6F5"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
        <argument type="service" id="security.user.provider.concrete.app_user_phone_provider"/>
        <argument type="service" id="security.user.provider.concrete.jwt"/>
      </argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">event dispatcher</argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">target url</argument>
    </service>
    <service id="security.authentication.listener.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" abstract="true">
      <argument type="abstract">The custom success handler service</argument>
      <argument type="collection"/>
      <argument type="abstract">Provider-shared Key</argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" abstract="true">
      <argument type="abstract">The custom failure handler service</argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="abstract">Target Route</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.event_dispatcher_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.event_dispatcher.main"/>
        <argument key="login" type="service_closure" id="security.event_dispatcher.login"/>
        <argument key="api" type="service_closure" id="security.event_dispatcher.api"/>
      </argument>
    </service>
    <service id="security.authenticator.manager" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">authenticators</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="abstract">provider key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="abstract">required badges</argument>
    </service>
    <service id="security.authenticator.managers_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.authenticator.manager.main"/>
        <argument key="login" type="service_closure" id="security.authenticator.manager.login"/>
        <argument key="api" type="service_closure" id="security.authenticator.manager.api"/>
      </argument>
    </service>
    <service id="security.user_authenticator" class="Symfony\Bundle\SecurityBundle\Security\UserAuthenticator">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.authenticator.managers_locator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.firewall.authenticator" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener" abstract="true">
      <argument type="abstract">authenticator manager</argument>
    </service>
    <service id="security.listener.check_authenticator_credentials" class="Symfony\Component\Security\Http\EventListener\CheckCredentialsListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="1024" method="checkPassport"/>
      <argument type="service" id="security.user_providers"/>
    </service>
    <service id="security.listener.user_provider.abstract" class="Symfony\Component\Security\Http\EventListener\UserProviderListener" abstract="true">
      <argument type="abstract">user provider</argument>
    </service>
    <service id="security.listener.password_migrating" class="Symfony\Component\Security\Http\EventListener\PasswordMigratingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_checker" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener" abstract="true">
      <argument type="abstract">user checker</argument>
    </service>
    <service id="security.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener" abstract="true">
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.listener.login_throttling" class="Symfony\Component\Security\Http\EventListener\LoginThrottlingListener" abstract="true">
      <argument type="service" id="request_stack"/>
      <argument type="abstract">request rate limiter</argument>
    </service>
    <service id="security.authenticator.http_basic" class="Symfony\Component\Security\Http\Authenticator\HttpBasicAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">realm name</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.form_login" class="Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
    </service>
    <service id="security.authenticator.json_login" class="Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
    </service>
    <service id="security.authenticator.x509" class="Symfony\Component\Security\Http\Authenticator\X509Authenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="abstract">credentials key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.remote_user" class="Symfony\Component\Security\Http\Authenticator\RemoteUserAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_token_extractor.header" class="Symfony\Component\Security\Http\AccessToken\HeaderAccessTokenExtractor"/>
    <service id="security.access_token_extractor.query_string" class="Symfony\Component\Security\Http\AccessToken\QueryAccessTokenExtractor"/>
    <service id="security.access_token_extractor.request_body" class="Symfony\Component\Security\Http\AccessToken\FormEncodedBodyExtractor"/>
    <service id="security.authenticator.access_token" class="Symfony\Component\Security\Http\Authenticator\AccessTokenAuthenticator" abstract="true">
      <argument type="abstract">access token handler</argument>
      <argument type="abstract">access token extractor</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authenticator.access_token.chain_extractor" class="Symfony\Component\Security\Http\AccessToken\ChainAccessTokenExtractor" abstract="true">
      <argument type="abstract">access token extractors</argument>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
      <argument type="service" id="security.impersonate_url_generator" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.command.debug_firewall" class="Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand">
      <tag name="console.command" command="debug:firewall"/>
      <tag name="container.no_preload"/>
      <argument>%security.firewalls%</argument>
      <argument type="service" id=".service_locator.EqDN9r1"/>
      <argument type="service" id=".service_locator.._yvSZB"/>
      <argument type="collection">
        <argument key="main" type="collection">
          <argument type="service" id="App\Security\AppAuthenticator"/>
          <argument type="service" id="security.authenticator.remember_me.main"/>
        </argument>
        <argument key="login" type="collection">
          <argument type="service" id="security.authenticator.json_login.login"/>
        </argument>
        <argument key="api" type="collection">
          <argument type="service" id="security.authenticator.jwt.api"/>
          <argument type="service" id="security.authenticator.refresh_jwt.api"/>
        </argument>
      </argument>
      <argument>false</argument>
      <call method="setName">
        <argument>debug:firewall</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about your security firewall(s)</argument>
      </call>
    </service>
    <service id="security.user.provider.concrete.app_user_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User</argument>
      <argument>email</argument>
      <argument>null</argument>
    </service>
    <service id="security.user.provider.concrete.app_user_phone_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User</argument>
      <argument>telephone</argument>
      <argument>null</argument>
    </service>
    <service id="security.user.provider.concrete.jwt" class="Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUserProvider">
      <argument>Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUser</argument>
    </service>
    <service id="security.user_providers" class="Symfony\Component\Security\Core\User\ChainUserProvider">
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
        <argument type="service" id="security.user.provider.concrete.app_user_phone_provider"/>
        <argument type="service" id="security.user.provider.concrete.jwt"/>
      </argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.kLbKLHa</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.q1UFWmc" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id=".security.request_matcher.kLbKLHa" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.q1UFWmc"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>main</argument>
      <argument>App\Security\AppAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>remember_me</argument>
        <argument>App\Security\AppAuthenticator</argument>
      </argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="path">app_logout</argument>
        <argument key="enable_csrf">null</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="target">/</argument>
        <argument key="invalidate_session">true</argument>
        <argument key="delete_cookies" type="collection"/>
      </argument>
    </service>
    <service id="security.listener.main.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="security.event_dispatcher.main" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
    </service>
    <service id="security.event_dispatcher.main" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.main">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.main.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.session.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.default.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.session.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_remember_me_conditions.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-32</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.remember_me.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginFailureEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.remember_me.main"/>
          <argument>clearCookie</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.remember_me.main"/>
          <argument>clearCookie</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\TokenDeauthenticatedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.remember_me.main"/>
          <argument>clearCookie</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Gesdinet\JWTRefreshTokenBundle\EventListener\LogoutEventListener"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\LoginSubscriber"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\LogoutSubscriber"/>
          <argument>onLogoutEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.user_checker.chain.main" class="Symfony\Component\Security\Core\User\ChainUserChecker">
      <argument type="tagged_iterator" tag="security.user_checker.main"/>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
        <argument type="service" id="security.user.provider.concrete.app_user_phone_provider"/>
        <argument type="service" id="security.user.provider.concrete.jwt"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">app_logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.main" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.logout.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.authenticator.remember_me_signature_hasher" class="Symfony\Component\Security\Core\Signature\SignatureHasher">
      <argument type="service" id="property_accessor"/>
      <argument type="abstract">signature properties</argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authenticator.signature_remember_me_handler" class="Symfony\Component\Security\Http\RememberMe\SignatureRememberMeHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">signature hasher</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="request_stack"/>
      <argument type="abstract">options</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.persistent_remember_me_handler" class="Symfony\Component\Security\Http\RememberMe\PersistentRememberMeHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">token provider</argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="request_stack"/>
      <argument type="abstract">options</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="abstract">token verifier</argument>
    </service>
    <service id="security.authenticator.firewall_aware_remember_me_handler" class="Symfony\Bundle\SecurityBundle\RememberMe\FirewallAwareRememberMeHandler">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id=".service_locator.Ar70cHn"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.listener.check_remember_me_conditions" class="Symfony\Component\Security\Http\EventListener\CheckRememberMeConditionsListener" abstract="true">
      <argument type="abstract">options</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.listener.remember_me" class="Symfony\Component\Security\Http\EventListener\RememberMeListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">remember me handler</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.remember_me" class="Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">remember me handler</argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">options</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="cache.security_token_verifier" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_token_verifier.recorder_inner"/>
    </service>
    <service id="security.authenticator.remember_me_signature_hasher.main" class="Symfony\Component\Security\Core\Signature\SignatureHasher">
      <argument type="service" id="property_accessor"/>
      <argument type="collection">
        <argument>password</argument>
      </argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authenticator.remember_me_handler.main" class="Symfony\Component\Security\Http\RememberMe\SignatureRememberMeHandler">
      <tag name="security.remember_me_handler" firewall="main"/>
      <argument type="service" id="security.authenticator.remember_me_signature_hasher.main"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="secret">%env(APP_SECRET)%</argument>
        <argument key="lifetime">31536000</argument>
        <argument key="user_providers" type="collection"/>
        <argument key="catch_exceptions">true</argument>
        <argument key="signature_properties" type="collection">
          <argument>password</argument>
        </argument>
        <argument key="name">REMEMBERME</argument>
        <argument key="path">/</argument>
        <argument key="domain">null</argument>
        <argument key="secure">null</argument>
        <argument key="httponly">true</argument>
        <argument key="samesite">lax</argument>
        <argument key="always_remember_me">false</argument>
        <argument key="remember_me_parameter">_remember_me</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.listener.check_remember_me_conditions.main" class="Symfony\Component\Security\Http\EventListener\CheckRememberMeConditionsListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="collection">
        <argument key="always_remember_me">false</argument>
        <argument key="remember_me_parameter">_remember_me</argument>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.listener.remember_me.main" class="Symfony\Component\Security\Http\EventListener\RememberMeListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.authenticator.remember_me_handler.main"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.remember_me.main" class="Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator">
      <argument type="service" id="security.authenticator.remember_me_handler.main"/>
      <argument>%env(APP_SECRET)%</argument>
      <argument type="service" id="security.token_storage"/>
      <argument>REMEMBERME</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.manager.main" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection">
        <argument type="service" id="App\Security\AppAuthenticator"/>
        <argument type="service" id="security.authenticator.remember_me.main"/>
      </argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.main" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <argument type="service" id="debug.security.firewall.authenticator.main.inner"/>
    </service>
    <service id="security.listener.user_checker.main" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="App\Security\AppAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id=".service_locator.sFCV0Um" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Security\AppAuthenticator" type="service_closure" id="App\Security\AppAuthenticator"/>
        <argument key="security.authenticator.remember_me.main" type="service_closure" id="security.authenticator.remember_me.main"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="debug.security.firewall.authenticator.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.map.config.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>login</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.0QxrXJt</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>json_login</argument>
      </argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.lyVOED." class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/login</argument>
    </service>
    <service id=".security.request_matcher.0QxrXJt" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.lyVOED."/>
      </argument>
    </service>
    <service id="security.listener.login.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="security.event_dispatcher.login" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
    </service>
    <service id="security.event_dispatcher.login" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.login">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.login.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.login"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.login"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Gesdinet\JWTRefreshTokenBundle\EventListener\LogoutEventListener"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\LoginSubscriber"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\LogoutSubscriber"/>
          <argument>onLogoutEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.user_checker.chain.login" class="Symfony\Component\Security\Core\User\ChainUserChecker">
      <argument type="tagged_iterator" tag="security.user_checker.login"/>
    </service>
    <service id="security.authenticator.json_login.login" class="Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator">
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.authentication.success_handler.login.json_login"/>
      <argument type="service" id="security.authentication.failure_handler.login.json_login"/>
      <argument type="collection">
        <argument key="check_path">api_login</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="login_path">/login</argument>
        <argument key="username_path">username</argument>
        <argument key="password_path">password</argument>
      </argument>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
    </service>
    <service id="security.authentication.success_handler.login.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler">
      <argument type="service">
        <service class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
          <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
          <argument type="service" id="debug.event_dispatcher"/>
          <argument type="collection"/>
          <argument>true</argument>
        </service>
      </argument>
      <argument type="collection"/>
      <argument>login</argument>
    </service>
    <service id="security.authentication.failure_handler.login.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler">
      <argument type="service">
        <service class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler">
          <argument type="service" id="debug.event_dispatcher"/>
          <argument type="service" id="translator.data_collector" on-invalid="null"/>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="security.authenticator.manager.login" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection">
        <argument type="service" id="security.authenticator.json_login.login"/>
      </argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.event_dispatcher.login"/>
      <argument>login</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.login" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <argument type="service" id="debug.security.firewall.authenticator.login.inner"/>
    </service>
    <service id="security.listener.user_checker.login" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.login"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.exception_listener.login" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>login</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id=".service_locator.df1HHDL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authenticator.json_login.login" type="service_closure" id="security.authenticator.json_login.login"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="debug.security.firewall.authenticator.login"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.login"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.login"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.vhy2oy3</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>null</argument>
      <argument>security.authenticator.jwt.api</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>jwt</argument>
        <argument>refresh_jwt</argument>
      </argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.AMZT15Y" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api</argument>
    </service>
    <service id=".security.request_matcher.vhy2oy3" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.AMZT15Y"/>
      </argument>
    </service>
    <service id="security.listener.api.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="security.event_dispatcher.api" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
    </service>
    <service id="security.event_dispatcher.api" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.api">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.api.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.api"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.api"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Gesdinet\JWTRefreshTokenBundle\EventListener\LogoutEventListener"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\LoginSubscriber"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventSubscriber\LogoutSubscriber"/>
          <argument>onLogoutEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.user_checker.chain.api" class="Symfony\Component\Security\Core\User\ChainUserChecker">
      <argument type="tagged_iterator" tag="security.user_checker.api"/>
    </service>
    <service id="security.authenticator.jwt.api" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="security.authenticator.refresh_jwt.api" class="Gesdinet\JWTRefreshTokenBundle\Security\Http\Authenticator\RefreshTokenAuthenticator">
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.request.extractor.chain"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.authentication.success_handler.api.refresh_jwt"/>
      <argument type="service" id="security.authentication.failure_handler.api.refresh_jwt"/>
      <argument type="collection">
        <argument key="check_path">/api/token/refresh</argument>
        <argument key="ttl">%gesdinet_jwt_refresh_token.ttl%</argument>
        <argument key="ttl_update">%gesdinet_jwt_refresh_token.ttl_update%</argument>
        <argument key="token_parameter_name">%gesdinet_jwt_refresh_token.token_parameter_name%</argument>
      </argument>
      <argument type="service" id="security.http_utils"/>
    </service>
    <service id="security.authentication.success_handler.api.refresh_jwt" class="Gesdinet\JWTRefreshTokenBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFirewallName">
        <argument>api</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.api.refresh_jwt" class="Gesdinet\JWTRefreshTokenBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.authenticator.manager.api" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection">
        <argument type="service" id="security.authenticator.jwt.api"/>
        <argument type="service" id="security.authenticator.refresh_jwt.api"/>
      </argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.event_dispatcher.api"/>
      <argument>api</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.api" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <argument type="service" id="debug.security.firewall.authenticator.api.inner"/>
    </service>
    <service id="security.listener.user_checker.api" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.api"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="security.authenticator.jwt.api"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id=".service_locator.x._0eBR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authenticator.jwt.api" type="service_closure" id="security.authenticator.jwt.api"/>
        <argument key="security.authenticator.refresh_jwt.api" type="service_closure" id="security.authenticator.refresh_jwt.api"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="debug.security.firewall.authenticator.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id=".service_locator.EqDN9r1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service_closure" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.login" type="service_closure" id="security.firewall.map.context.login"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id=".security.request_matcher.obhk0jm" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/admin</argument>
    </service>
    <service id=".security.request_matcher.28NqKnb" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.obhk0jm"/>
      </argument>
    </service>
    <service id=".security.request_matcher.N4deBI_" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/instructor</argument>
    </service>
    <service id=".security.request_matcher.Blt4X66" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.N4deBI_"/>
      </argument>
    </service>
    <service id=".security.request_matcher..QVbgy8" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/student</argument>
    </service>
    <service id=".security.request_matcher.XWBhKBg" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher..QVbgy8"/>
      </argument>
    </service>
    <service id=".security.request_matcher.f6LIDcr" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/course/</argument>
    </service>
    <service id=".security.request_matcher.71rlDtt" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.f6LIDcr"/>
      </argument>
    </service>
    <service id=".security.request_matcher.pVY8Xoq" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/payment/</argument>
    </service>
    <service id=".security.request_matcher.RTnigTu" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.pVY8Xoq"/>
      </argument>
    </service>
    <service id=".security.request_matcher.wGO_5CG" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/(login|token/refresh)</argument>
    </service>
    <service id=".security.request_matcher.OipCI0K" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.wGO_5CG"/>
      </argument>
    </service>
    <service id=".security.request_matcher.6sAih9h" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/pay</argument>
    </service>
    <service id=".security.request_matcher.ojtz6F5" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.6sAih9h"/>
      </argument>
    </service>
    <service id="security.command.user_password_hash" class="Symfony\Component\PasswordHasher\Command\UserPasswordHashCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument type="collection">
        <argument>Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface</argument>
      </argument>
      <call method="setName">
        <argument>security:hash-password</argument>
      </call>
      <call method="setDescription">
        <argument>Hash a user password</argument>
      </call>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter">
      <argument>app</argument>
    </service>
    <service id="monolog.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/var/www/clients/client0/web1/web/var/log/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument type="service" id="maker.file_link_formatter"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <argument>/var/www/clients/client0/web1/web/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.file_link_formatter" class="Symfony\Bundle\MakerBundle\Util\MakerFileLinkFormatter">
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="default" type="collection">
          <argument type="collection">
            <argument>App\Entity</argument>
            <argument type="service" id="doctrine.orm.default_attribute_metadata_driver"/>
          </argument>
          <argument type="collection">
            <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
            <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
          </argument>
          <argument type="collection">
            <argument>Vich\UploaderBundle\Entity</argument>
            <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="maker.template_linter" class="Symfony\Bundle\MakerBundle\Util\TemplateLinter">
      <argument>%env(default::string:MAKER_PHP_CS_FIXER_BINARY_PATH)%</argument>
      <argument>%env(default::string:MAKER_PHP_CS_FIXER_CONFIG_PATH)%</argument>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
      <argument>null</argument>
      <argument type="service" id="maker.template_component_generator"/>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator">
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.security_controller_builder" class="Symfony\Bundle\MakerBundle\Security\SecurityControllerBuilder"/>
    <service id="maker.php_compat_util" class="Symfony\Bundle\MakerBundle\Util\PhpCompatUtil">
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.template_component_generator" class="Symfony\Bundle\MakerBundle\Util\TemplateComponentGenerator"/>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.security_controller_builder"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand">
      <tag name="maker.command"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_twig_component" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigComponent">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController">
      <tag name="maker.command"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_docker_database" class="Symfony\Bundle\MakerBundle\Maker\MakeDockerDatabase">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>null</argument>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.entity_class_generator"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest">
      <tag name="maker.command"/>
      <deprecated package="symfony/maker-bundle" version="1.29">The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_message" class="Symfony\Bundle\MakerBundle\Maker\MakeMessage">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Maker\MakeMessengerMiddleware">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="maker.maker.make_reset_password" class="Symfony\Bundle\MakerBundle\Maker\MakeResetPassword">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_test" class="Symfony\Bundle\MakerBundle\Maker\MakeTest">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest">
      <tag name="maker.command"/>
      <deprecated package="symfony/maker-bundle" version="1.29">The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.entity_class_generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration">
      <tag name="maker.command"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <argument type="service" id="maker.file_link_formatter"/>
    </service>
    <service id="maker.maker.make_stimulus_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeStimulusController">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form_login" class="Symfony\Bundle\MakerBundle\Maker\Security\MakeFormLogin">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.security_controller_builder"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.xRhNObu.sensio_framework_extra.view.listener"/>
      </call>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage">
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="symfonycasts.verify_email.token_generator" class="SymfonyCasts\Bundle\VerifyEmail\Generator\VerifyEmailTokenGenerator">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="symfonycasts.verify_email.query_utility" class="SymfonyCasts\Bundle\VerifyEmail\Util\VerifyEmailQueryUtility"/>
    <service id="symfonycasts.verify_email.uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
      <argument>signature</argument>
    </service>
    <service id="symfonycasts.verify_email.helper" class="SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelper">
      <argument type="service" id="router.default"/>
      <argument type="service" id="symfonycasts.verify_email.uri_signer"/>
      <argument type="service" id="symfonycasts.verify_email.query_utility"/>
      <argument type="service" id="symfonycasts.verify_email.token_generator"/>
      <argument>3600</argument>
    </service>
    <service id="fm_elfinder.configurator.default" class="FM\ElfinderBundle\Configuration\ElFinderConfigurationReader">
      <argument>%fm_elfinder%</argument>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fm_elfinder.loader.default" class="FM\ElfinderBundle\Loader\ElFinderLoader" autowire="true">
      <argument type="service" id="fm_elfinder.configurator.default"/>
    </service>
    <service id="twig.extension.fm_elfinder_init" class="FM\ElfinderBundle\Twig\Extension\FMElfinderExtension">
      <tag name="twig.extension" alias="fm_elfinder_init"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="FM\ElfinderBundle\Controller\ElFinderController" class="FM\ElfinderBundle\Controller\ElFinderController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="instances" type="collection">
          <argument key="default" type="collection">
            <argument key="locale">fr</argument>
            <argument key="editor">ckeditor</argument>
            <argument key="fullscreen">true</argument>
            <argument key="theme">smoothness</argument>
            <argument key="connector" type="collection">
              <argument key="debug">false</argument>
              <argument key="roots" type="collection">
                <argument key="uploads" type="collection">
                  <argument key="show_hidden">false</argument>
                  <argument key="driver">LocalFileSystem</argument>
                  <argument key="path">uploads/images</argument>
                  <argument key="upload_allow" type="collection">
                    <argument>image/png</argument>
                    <argument>image/jpg</argument>
                    <argument>image/jpeg</argument>
                  </argument>
                  <argument key="upload_deny" type="collection">
                    <argument>all</argument>
                  </argument>
                  <argument key="upload_max_size">2M</argument>
                  <argument key="volume_id">0</argument>
                  <argument key="autoload">false</argument>
                  <argument key="phash"></argument>
                  <argument key="trash_hash"></argument>
                  <argument key="locale"></argument>
                  <argument key="i18n_folder_name">false</argument>
                  <argument key="mime_detect">auto</argument>
                  <argument key="mimefile"></argument>
                  <argument key="security_voter"></argument>
                  <argument key="start_path"></argument>
                  <argument key="encoding">UTF-8</argument>
                  <argument key="url"></argument>
                  <argument key="alias"></argument>
                  <argument key="img_lib">auto</argument>
                  <argument key="tmb_path">.tmb</argument>
                  <argument key="tmb_path_mode">511</argument>
                  <argument key="tmb_url"></argument>
                  <argument key="tmb_size">48</argument>
                  <argument key="tmb_crop">true</argument>
                  <argument key="tmb_bg_color">#ffffff</argument>
                  <argument key="quarantine">null</argument>
                  <argument key="copy_overwrite">true</argument>
                  <argument key="copy_join">true</argument>
                  <argument key="copy_from">true</argument>
                  <argument key="copy_to">true</argument>
                  <argument key="upload_overwrite">true</argument>
                  <argument key="fileMode">420</argument>
                  <argument key="upload_order" type="collection">
                    <argument>deny</argument>
                    <argument>allow</argument>
                  </argument>
                  <argument key="upload_max_conn">3</argument>
                  <argument key="defaults" type="collection">
                    <argument key="read">true</argument>
                    <argument key="write">true</argument>
                  </argument>
                  <argument key="attributes" type="collection"/>
                  <argument key="accepted_name">/^\w[\w\s\.\%\-]*$/u</argument>
                  <argument key="disabled_commands" type="collection"/>
                  <argument key="tree_deep">0</argument>
                  <argument key="check_subfolders">1</argument>
                  <argument key="separator">/</argument>
                  <argument key="date_format">j M Y H:i</argument>
                  <argument key="time_format">H:i</argument>
                  <argument key="archive_mimes" type="collection"/>
                  <argument key="archivers" type="collection">
                    <argument key="enabled">false</argument>
                    <argument key="create" type="collection"/>
                    <argument key="extract" type="collection"/>
                  </argument>
                  <argument key="flysystem" type="collection">
                    <argument key="enabled">false</argument>
                    <argument key="filesystem"></argument>
                    <argument key="type"></argument>
                    <argument key="adapter_service"></argument>
                  </argument>
                  <argument key="glide_url"></argument>
                  <argument key="glide_key"></argument>
                  <argument key="plugins" type="collection"/>
                  <argument key="driver_options" type="collection"/>
                  <argument key="dropbox2_settings" type="collection">
                    <argument key="enabled">false</argument>
                    <argument key="aliasFormat">%s@Dropbox</argument>
                    <argument key="path">/</argument>
                    <argument key="separator">/</argument>
                    <argument key="acceptedName">%s@Dropbox</argument>
                    <argument key="rootCssClass">elfinder-navbar-root-dropbox</argument>
                    <argument key="getThumbSize">medium</argument>
                  </argument>
                  <argument key="box_settings" type="collection">
                    <argument key="enabled">false</argument>
                    <argument key="root">Box.com</argument>
                    <argument key="path">/</argument>
                    <argument key="separator">/</argument>
                    <argument key="tmbPath"></argument>
                    <argument key="tmbURL"></argument>
                    <argument key="tmpPath"></argument>
                    <argument key="acceptedName">#^[^/\?*:|"&lt;&gt;]*[^./\?*:|"&lt;&gt;]$#</argument>
                    <argument key="rootCssClass">elfinder-navbar-root-box</argument>
                  </argument>
                  <argument key="onedrive_settings" type="collection">
                    <argument key="enabled">false</argument>
                    <argument key="root">OneDrive.com</argument>
                    <argument key="OneDriveApiClient"></argument>
                    <argument key="path">/</argument>
                    <argument key="separator">/</argument>
                    <argument key="tmbPath"></argument>
                    <argument key="tmbURL"></argument>
                    <argument key="tmpPath"></argument>
                    <argument key="acceptedName">#^[^/\?*:|"&lt;&gt;]*[^./\?*:|"&lt;&gt;]$#</argument>
                    <argument key="rootCssClass">elfinder-navbar-root-onedrive</argument>
                    <argument key="useApiThumbnail">true</argument>
                  </argument>
                  <argument key="ftp_settings" type="collection">
                    <argument key="enabled">false</argument>
                  </argument>
                  <argument key="mysql_settings" type="collection">
                    <argument key="enabled">false</argument>
                    <argument key="port">null</argument>
                    <argument key="socket">null</argument>
                    <argument key="files_table">elfinder_file</argument>
                    <argument key="tmbPath"></argument>
                    <argument key="tmpPath"></argument>
                    <argument key="rootCssClass">elfinder-navbar-root-sql</argument>
                    <argument key="noSessionCache">hasdirs</argument>
                  </argument>
                </argument>
              </argument>
              <argument key="binds" type="collection"/>
              <argument key="plugins" type="collection"/>
            </argument>
            <argument key="cors_support">false</argument>
            <argument key="editor_template">null</argument>
            <argument key="multi_home_folder">false</argument>
            <argument key="folder_separator"></argument>
            <argument key="tinymce_popup_path"></argument>
            <argument key="relative_path">true</argument>
            <argument key="path_prefix">/</argument>
            <argument key="where_is_multi" type="collection"/>
            <argument key="visible_mime_types" type="collection"/>
          </argument>
        </argument>
        <argument key="configuration_provider">fm_elfinder.configurator.default</argument>
        <argument key="assets_path">assets</argument>
        <argument key="loader">fm_elfinder.loader.default</argument>
      </argument>
      <argument type="service" id="fm_elfinder.loader.default"/>
    </service>
    <service id="fm_elfinder.form.type" class="FM\ElfinderBundle\Form\Type\ElFinderType">
      <tag name="form.type"/>
    </service>
    <service id="fm_elfinder.command.installer" class="FM\ElfinderBundle\Command\ElFinderInstallerCommand">
      <tag name="console.command" command="elfinder:install"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="parameter_bag"/>
      <call method="setName">
        <argument>elfinder:install</argument>
      </call>
    </service>
    <service id="knp_paginator" class="Knp\Component\Pager\Paginator" public="true" lazy="true">
      <tag name="proxy" interface="Knp\Component\Pager\PaginatorInterface"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Knp\Component\Pager\ArgumentAccess\RequestArgumentAccess"/>
      <call method="setDefaultPaginatorOptions">
        <argument type="collection">
          <argument key="pageParameterName">page</argument>
          <argument key="sortFieldParameterName">sort</argument>
          <argument key="sortDirectionParameterName">direction</argument>
          <argument key="filterFieldParameterName">filterField</argument>
          <argument key="filterValueParameterName">filterValue</argument>
          <argument key="distinct">true</argument>
          <argument key="pageOutOfRange">ignore</argument>
          <argument key="defaultLimit">10</argument>
        </argument>
      </call>
    </service>
    <service id="Knp\Component\Pager\ArgumentAccess\RequestArgumentAccess" class="Knp\Component\Pager\ArgumentAccess\RequestArgumentAccess">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="knp_paginator.subscriber.paginate" class="Knp\Component\Pager\Event\Subscriber\Paginate\PaginationSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.sortable" class="Knp\Component\Pager\Event\Subscriber\Sortable\SortableSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.filtration" class="Knp\Component\Pager\Event\Subscriber\Filtration\FiltrationSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.sliding_pagination" class="Knp\Bundle\PaginatorBundle\Subscriber\SlidingPaginationSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
      <argument type="collection">
        <argument key="defaultPaginationTemplate">@KnpPaginator/Pagination/bootstrap_v5_pagination.html.twig</argument>
        <argument key="defaultSortableTemplate">@KnpPaginator/Pagination/sortable_link.html.twig</argument>
        <argument key="defaultFiltrationTemplate">@KnpPaginator/Pagination/filtration.html.twig</argument>
        <argument key="defaultPageRange">5</argument>
        <argument key="defaultPageLimit">null</argument>
      </argument>
    </service>
    <service id="knp_paginator.helper.processor" class="Knp\Bundle\PaginatorBundle\Helper\Processor">
      <argument type="service" id="router.default"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="knp_paginator.twig.extension.pagination" class="Knp\Bundle\PaginatorBundle\Twig\Extension\PaginationExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Knp\Bundle\PaginatorBundle\Twig\Extension\PaginationRuntime" class="Knp\Bundle\PaginatorBundle\Twig\Extension\PaginationRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="knp_paginator.helper.processor"/>
    </service>
    <service id="symfonycasts.reset_password.fake_request_repository" class="SymfonyCasts\Bundle\ResetPassword\Persistence\Fake\FakeResetPasswordInternalRepository"/>
    <service id="symfonycasts.reset_password.cleaner" class="SymfonyCasts\Bundle\ResetPassword\Util\ResetPasswordCleaner">
      <argument type="service" id="App\Repository\ResetPasswordRequestRepository"/>
      <argument>true</argument>
    </service>
    <service id="SymfonyCasts\Bundle\ResetPassword\Command\ResetPasswordRemoveExpiredCommand" class="SymfonyCasts\Bundle\ResetPassword\Command\ResetPasswordRemoveExpiredCommand">
      <tag name="console.command" command="reset-password:remove-expired"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="symfonycasts.reset_password.cleaner"/>
      <call method="setName">
        <argument>reset-password:remove-expired</argument>
      </call>
    </service>
    <service id="symfonycasts.reset_password.random_generator" class="SymfonyCasts\Bundle\ResetPassword\Generator\ResetPasswordRandomGenerator"/>
    <service id="symfonycasts.reset_password.token_generator" class="SymfonyCasts\Bundle\ResetPassword\Generator\ResetPasswordTokenGenerator">
      <argument>%env(APP_SECRET)%</argument>
      <argument type="service" id="symfonycasts.reset_password.random_generator"/>
    </service>
    <service id="symfonycasts.reset_password.helper" class="SymfonyCasts\Bundle\ResetPassword\ResetPasswordHelper">
      <argument type="service" id="symfonycasts.reset_password.token_generator"/>
      <argument type="service" id="symfonycasts.reset_password.cleaner"/>
      <argument type="service" id="App\Repository\ResetPasswordRequestRepository"/>
      <argument>3600</argument>
      <argument>3600</argument>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection">
        <argument key="default" type="service" id="doctrine.fixtures.purger.orm_purger_factory"/>
      </argument>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\AppFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
        </argument>
      </call>
    </service>
    <service id="doctrine.fixtures.purger.orm_purger_factory" class="Doctrine\Bundle\FixturesBundle\Purger\ORMPurgerFactory">
      <tag name="doctrine.fixtures.purger_factory" alias="default"/>
    </service>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="0"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument>%nelmio_cors.map%</argument>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="nelmio_cors.cacheable_response_vary_listener" class="Nelmio\CorsBundle\EventListener\CacheableResponseVaryListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onResponse" priority="-10"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.listener.request.add_format" class="ApiPlatform\Symfony\EventListener\AddFormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="28"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.negotiator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument>%api_platform.formats%</argument>
    </service>
    <service id="api_platform.listener.request.read" class="ApiPlatform\Symfony\EventListener\ReadListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="4"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.state_provider.locator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.uri_variables.converter"/>
    </service>
    <service id="api_platform.listener.view.write" class="ApiPlatform\Symfony\EventListener\WriteListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="32"/>
      <argument type="service" id="api_platform.state_processor.locator"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.uri_variables.converter"/>
    </service>
    <service id="api_platform.listener.request.deserialize" class="ApiPlatform\Symfony\EventListener\DeserializeListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="2"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="api_platform.listener.view.serialize" class="ApiPlatform\Symfony\EventListener\SerializeListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="16"/>
      <argument type="service" id="debug.serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.respond" class="ApiPlatform\Symfony\EventListener\RespondListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="8"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.symfony.iri_converter" on-invalid="null"/>
    </service>
    <service id="api_platform.listener.exception.validation" class="ApiPlatform\Symfony\Validator\EventListener\ValidationExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException"/>
      <argument type="service" id="debug.serializer"/>
      <argument>%api_platform.error_formats%</argument>
      <argument>%api_platform.exception_to_status%</argument>
    </service>
    <service id="api_platform.listener.exception" class="ApiPlatform\Symfony\EventListener\ExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-96"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="api_platform.error_listener" on-invalid="null"/>
    </service>
    <service id="api_platform.cache_warmer.cache_pool_clearer" class="ApiPlatform\Symfony\Bundle\CacheWarmer\CachePoolClearerCacheWarmer">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.resource_collection</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.elasticsearch.cache.metadata.document</argument>
      </argument>
    </service>
    <service id="api_platform.negotiator" class="Negotiation\Negotiator"/>
    <service id="api_platform.resource_class_resolver" class="ApiPlatform\Api\ResourceClassResolver">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.router" class="ApiPlatform\Symfony\Routing\Router">
      <argument type="service" id="router.default"/>
      <argument>1</argument>
    </service>
    <service id="api_platform.serializer.context_builder.filter" class="ApiPlatform\Serializer\SerializerFilterContextBuilder">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter.inner"/>
    </service>
    <service id="api_platform.serializer.property_filter" class="ApiPlatform\Serializer\Filter\PropertyFilter" abstract="true">
      <argument>properties</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.serializer.group_filter" class="ApiPlatform\Serializer\Filter\GroupFilter" abstract="true"/>
    <service id="api_platform.serializer.mapping.class_metadata_factory" class="ApiPlatform\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory.inner"/>
    </service>
    <service id="api_platform.path_segment_name_generator.underscore" class="ApiPlatform\Operation\UnderscorePathSegmentNameGenerator"/>
    <service id="api_platform.path_segment_name_generator.dash" class="ApiPlatform\Operation\DashPathSegmentNameGenerator"/>
    <service id="api_platform.metadata.path_segment_name_generator.underscore" class="ApiPlatform\Metadata\Operation\UnderscorePathSegmentNameGenerator"/>
    <service id="api_platform.metadata.path_segment_name_generator.dash" class="ApiPlatform\Metadata\Operation\DashPathSegmentNameGenerator"/>
    <service id="api_platform.action.placeholder" class="ApiPlatform\Action\PlaceholderAction" public="true"/>
    <service id="api_platform.action.not_found" class="ApiPlatform\Action\NotFoundAction" public="true"/>
    <service id="api_platform.action.not_exposed" class="ApiPlatform\Action\NotExposedAction" public="true"/>
    <service id="api_platform.action.entrypoint" class="ApiPlatform\Action\EntrypointAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.action.documentation" class="ApiPlatform\Documentation\Action\DocumentationAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument type="service" id="lexik_jwt_authentication.api_platform.openapi.factory" on-invalid="null"/>
    </service>
    <service id="api_platform.action.exception" class="ApiPlatform\Action\ExceptionAction" public="true">
      <argument type="service" id="debug.serializer"/>
      <argument>%api_platform.error_formats%</argument>
      <argument>%api_platform.exception_to_status%</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.cache.route_name_resolver" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.route_name_resolver.recorder_inner"/>
    </service>
    <service id="api_platform.route_loader" class="ApiPlatform\Symfony\Routing\ApiLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="service_container"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument>false</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="api_platform.symfony.iri_converter.skolem" class="ApiPlatform\Symfony\Routing\SkolemIriConverter">
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.api.identifiers_extractor" class="ApiPlatform\Api\IdentifiersExtractor">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="api_platform.uri_variables.converter" class="ApiPlatform\Api\UriVariablesConverter">
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.uri_variables.transformer"/>
    </service>
    <service id="api_platform.uri_variables.transformer.integer" class="ApiPlatform\Api\UriVariableTransformer\IntegerUriVariableTransformer">
      <tag name="api_platform.uri_variables.transformer" priority="-100"/>
    </service>
    <service id="api_platform.uri_variables.transformer.date_time" class="ApiPlatform\Api\UriVariableTransformer\DateTimeUriVariableTransformer">
      <tag name="api_platform.uri_variables.transformer" priority="-100"/>
    </service>
    <service id="api_platform.symfony.iri_converter" class="ApiPlatform\Symfony\Routing\IriConverter">
      <argument type="service" id="api_platform.state_provider.locator"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.api.identifiers_extractor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.uri_variables.converter"/>
      <argument type="service" id="api_platform.symfony.iri_converter.skolem"/>
      <argument type="service" id="api_platform.metadata.operation.metadata_factory"/>
    </service>
    <service id="api_platform.error_listener" class="ApiPlatform\Symfony\EventListener\ErrorListener">
      <argument>api_platform.action.exception</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.state_provider.locator" class="ApiPlatform\State\CallableProvider">
      <argument type="service" id=".service_locator.PCWEfhq"/>
    </service>
    <service id="api_platform.pagination" class="ApiPlatform\State\Pagination\Pagination">
      <argument>%api_platform.collection.pagination%</argument>
      <argument>%api_platform.graphql.collection.pagination%</argument>
    </service>
    <service id="api_platform.state_processor.locator" class="ApiPlatform\State\CallableProcessor">
      <argument type="service" id=".service_locator..rWkGwp"/>
    </service>
    <service id="api_platform.serializer_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="serializer" type="service_closure" id="debug.serializer"/>
      </argument>
    </service>
    <service id="api_platform.pagination_options" class="ApiPlatform\State\Pagination\PaginationOptions">
      <argument>true</argument>
      <argument>page</argument>
      <argument>false</argument>
      <argument>itemsPerPage</argument>
      <argument>false</argument>
      <argument>pagination</argument>
      <argument>30</argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>partial</argument>
    </service>
    <service id="api_platform.state_provider.create" class="ApiPlatform\State\CreateProvider">
      <tag name="api_platform.state_provider" key="ApiPlatform\State\CreateProvider"/>
      <tag name="api_platform.state_provider" key="api_platform.state_provider.create"/>
      <argument type="service" id="api_platform.doctrine.orm.state.item_provider"/>
    </service>
    <service id="api_platform.state_provider.object" class="ApiPlatform\State\ObjectProvider">
      <tag name="api_platform.state_provider" key="ApiPlatform\State\ObjectProvider"/>
      <tag name="api_platform.state_provider" key="api_platform.state_provider.object"/>
    </service>
    <service id="api_platform.filter_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="annotated_app_entity_classe_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_classe_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_cours_api_platform_doctrine_orm_filter_boolean_filter" type="service_closure" id="annotated_app_entity_cours_api_platform_doctrine_orm_filter_boolean_filter"/>
        <argument key="annotated_app_entity_cours_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_cours_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_cours_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_cours_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_cours_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_cours_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_exam_api_platform_doctrine_orm_filter_boolean_filter" type="service_closure" id="annotated_app_entity_exam_api_platform_doctrine_orm_filter_boolean_filter"/>
        <argument key="annotated_app_entity_exam_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_exam_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_exam_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_exam_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_exam_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_exam_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_forum_message_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_forum_message_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_forum_message_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_forum_message_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_quiz_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_quiz_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_quiz_result_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_quiz_result_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_boolean_filter" type="service_closure" id="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_boolean_filter"/>
        <argument key="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_search_filter"/>
      </argument>
    </service>
    <service id="api_platform.cache.metadata.resource" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.resource.recorder_inner"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.cached" class="ApiPlatform\Metadata\Resource\Factory\CachedResourceNameCollectionFactory">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.xml" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource_extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.attributes" class="ApiPlatform\Metadata\Resource\Factory\AttributesResourceNameCollectionFactory">
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.property_info" class="ApiPlatform\Metadata\Property\Factory\PropertyInfoPropertyNameCollectionFactory">
      <argument type="service" id="property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.cached" class="ApiPlatform\Metadata\Property\Factory\CachedPropertyNameCollectionFactory">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.xml" class="ApiPlatform\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory">
      <argument type="service" id="api_platform.metadata.property_extractor.xml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.resource_extractor.xml" class="ApiPlatform\Metadata\Extractor\XmlResourceExtractor">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property_extractor.xml" class="ApiPlatform\Metadata\Extractor\XmlPropertyExtractor">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.property_info" class="ApiPlatform\Metadata\Property\Factory\PropertyInfoPropertyMetadataFactory">
      <argument type="service" id="property_info"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.attribute" class="ApiPlatform\Metadata\Property\Factory\AttributePropertyMetadataFactory">
      <argument type="service" id="api_platform.metadata.property.metadata_factory.identifier"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.serializer" class="ApiPlatform\Metadata\Property\Factory\SerializerPropertyMetadataFactory">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.cached" class="ApiPlatform\Metadata\Property\Factory\CachedPropertyMetadataFactory">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.validator"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.default_property" class="ApiPlatform\Metadata\Property\Factory\DefaultPropertyMetadataFactory">
      <argument type="service" id="api_platform.metadata.property.metadata_factory.serializer"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.identifier" class="ApiPlatform\Metadata\Property\Factory\IdentifierPropertyMetadataFactory">
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.default_property"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.xml" class="ApiPlatform\Metadata\Property\Factory\ExtractorPropertyMetadataFactory">
      <argument type="service" id="api_platform.metadata.property_extractor.xml"/>
    </service>
    <service id="api_platform.cache.metadata.property" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.property.recorder_inner"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.attributes" class="ApiPlatform\Metadata\Resource\Factory\AttributesResourceMetadataCollectionFactory">
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>%api_platform.defaults%</argument>
      <argument>false</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.xml" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource_extractor.xml"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.deprecations"/>
      <argument>%api_platform.defaults%</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation" class="ApiPlatform\Metadata\Resource\Factory\NotExposedOperationResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.link_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.uri_template" class="ApiPlatform\Metadata\Resource\Factory\UriTemplateResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.link_factory"/>
      <argument type="service" id="api_platform.metadata.path_segment_name_generator.underscore"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.link" class="ApiPlatform\Metadata\Resource\Factory\LinkResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.link_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.uri_template"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.operation_name" class="ApiPlatform\Metadata\Resource\Factory\OperationNameResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.link"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.input_output" class="ApiPlatform\Metadata\Resource\Factory\InputOutputResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.operation_name"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.formats" class="ApiPlatform\Metadata\Resource\Factory\FormatsResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.input_output"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.patch_formats%</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.filters" class="ApiPlatform\Metadata\Resource\Factory\FiltersResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.formats"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.alternate_uri" class="ApiPlatform\Metadata\Resource\Factory\AlternateUriResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.filters"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.deprecations" class="ApiPlatform\Metadata\Resource\Factory\DeprecationResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.attributes"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.cached" class="ApiPlatform\Metadata\Resource\Factory\CachedResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.cache.metadata.resource_collection"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory"/>
    </service>
    <service id="api_platform.cache.metadata.resource_collection" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.resource_collection.recorder_inner"/>
    </service>
    <service id="api_platform.metadata.operation.metadata_factory" class="ApiPlatform\Metadata\Operation\Factory\OperationMetadataFactory">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.php_doc" class="ApiPlatform\Metadata\Resource\Factory\PhpDocResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.alternate_uri"/>
    </service>
    <service id="api_platform.metadata.resource_extractor.yaml" class="ApiPlatform\Metadata\Extractor\YamlResourceExtractor">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property_extractor.yaml" class="ApiPlatform\Metadata\Extractor\YamlPropertyExtractor">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource_extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.attributes"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.yaml" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource_extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.xml"/>
      <argument>%api_platform.defaults%</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.yaml" class="ApiPlatform\Metadata\Property\Factory\ExtractorPropertyMetadataFactory">
      <argument type="service" id="api_platform.metadata.property_extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.attribute"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.yaml" class="ApiPlatform\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory">
      <argument type="service" id="api_platform.metadata.property_extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.json_schema.type_factory" class="ApiPlatform\JsonSchema\TypeFactory">
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <call method="setSchemaFactory">
        <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      </call>
    </service>
    <service id="api_platform.json_schema.json_schema_generate_command" class="ApiPlatform\JsonSchema\Command\JsonSchemaGenerateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument>%api_platform.formats%</argument>
      <call method="setName">
        <argument>api:json-schema:generate</argument>
      </call>
    </service>
    <service id=".2_ObjectNormalizer~Lmia8AW" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info"/>
    </service>
    <service id=".1_Serializer~Lmia8AW" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id=".2_ObjectNormalizer~Lmia8AW"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="debug.serializer.encoder.json"/>
      </argument>
    </service>
    <service id="api_platform.openapi.options" class="ApiPlatform\OpenApi\Options">
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>false</argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="api_platform.openapi.command" class="ApiPlatform\Symfony\Bundle\Command\OpenApiCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="lexik_jwt_authentication.api_platform.openapi.factory"/>
      <argument type="service" id="debug.serializer"/>
      <call method="setName">
        <argument>api:openapi:export</argument>
      </call>
    </service>
    <service id="api_platform.swagger.listener.ui" class="ApiPlatform\Symfony\Bundle\EventListener\SwaggerUiListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.swagger_ui.context" class="ApiPlatform\Symfony\Bundle\SwaggerUi\SwaggerUiContext">
      <argument>true</argument>
      <argument>false</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="api_platform.swagger_ui.action" class="ApiPlatform\Symfony\Bundle\SwaggerUi\SwaggerUiAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="twig" on-invalid="null"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.serializer"/>
      <argument type="service" id="lexik_jwt_authentication.api_platform.openapi.factory"/>
      <argument type="service" id="api_platform.openapi.options"/>
      <argument type="service" id="api_platform.swagger_ui.context"/>
      <argument>%api_platform.formats%</argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="api_platform.jsonld.context_builder" class="ApiPlatform\JsonLd\ContextBuilder">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.symfony.iri_converter.skolem"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="api_platform.jsonld.action.context" class="ApiPlatform\JsonLd\Action\ContextAction" public="true">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory" class="ApiPlatform\Hydra\JsonSchema\SchemaFactory">
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory.inner"/>
    </service>
    <service id="api_platform.hydra.listener.response.add_link_header" class="ApiPlatform\Hydra\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view" class="ApiPlatform\Hydra\Serializer\PartialCollectionViewNormalizer">
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view.inner"/>
      <argument>page</argument>
      <argument>pagination</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="api_platform.hydra.normalizer.collection_filters" class="ApiPlatform\Hydra\Serializer\CollectionFiltersNormalizer">
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.doctrine.metadata_factory" class="Doctrine\Persistence\Mapping\ClassMetadataFactory">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="api_platform.doctrine.orm.state.remove_processor" class="ApiPlatform\Doctrine\Common\State\RemoveProcessor">
      <tag name="api_platform.state_processor" priority="-100" key="api_platform.doctrine.orm.state.remove_processor"/>
      <tag name="api_platform.state_processor" priority="-100" key="ApiPlatform\Doctrine\Common\State\RemoveProcessor"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.doctrine.orm.state.persist_processor" class="ApiPlatform\Doctrine\Common\State\PersistProcessor">
      <tag name="api_platform.state_processor" priority="-100" key="api_platform.doctrine.orm.state.persist_processor"/>
      <tag name="api_platform.state_processor" priority="-100" key="ApiPlatform\Doctrine\Common\State\PersistProcessor"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.doctrine.orm.order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">order</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument key="orderNullsComparison">null</argument>
    </service>
    <service id="api_platform.doctrine.orm.range_filter" class="ApiPlatform\Doctrine\Orm\Filter\RangeFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.boolean_filter" class="ApiPlatform\Doctrine\Orm\Filter\BooleanFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.numeric_filter" class="ApiPlatform\Doctrine\Orm\Filter\NumericFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.exists_filter" class="ApiPlatform\Doctrine\Orm\Filter\ExistsFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="existsParameterName">exists</argument>
      <argument key="nameConverter" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.eager_loading" class="ApiPlatform\Doctrine\Orm\Extension\EagerLoadingExtension">
      <tag name="api_platform.doctrine.orm.query_extension.item" priority="-8"/>
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-18"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument>30</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter" class="ApiPlatform\Doctrine\Orm\Extension\FilterExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-16"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter_eager_loading" class="ApiPlatform\Doctrine\Orm\Extension\FilterEagerLoadingExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-17"/>
      <argument>true</argument>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.pagination" class="ApiPlatform\Doctrine\Orm\Extension\PaginationExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-64"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.pagination"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.order" class="ApiPlatform\Doctrine\Orm\Extension\OrderExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-32"/>
      <argument>ASC</argument>
    </service>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory" class="ApiPlatform\Doctrine\Orm\Metadata\Property\DoctrineOrmPropertyMetadataFactory">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.property_info"/>
    </service>
    <service id="api_platform.doctrine.orm.state.collection_provider" class="ApiPlatform\Doctrine\Orm\State\CollectionProvider">
      <tag name="api_platform.state_provider" priority="-100" key="ApiPlatform\Doctrine\Orm\State\CollectionProvider"/>
      <tag name="api_platform.state_provider" priority="-100" key="api_platform.doctrine.orm.state.collection_provider"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.state.item_provider" class="ApiPlatform\Doctrine\Orm\State\ItemProvider">
      <tag name="api_platform.state_provider" priority="-100" key="ApiPlatform\Doctrine\Orm\State\ItemProvider"/>
      <tag name="api_platform.state_provider" priority="-100" key="api_platform.doctrine.orm.state.item_provider"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="api_platform.symfony.iri_converter"/>
      <argument key="2" type="service" id="property_accessor"/>
      <argument key="3" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="identifiersExtractor" type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory" class="ApiPlatform\Doctrine\Orm\Metadata\Resource\DoctrineOrmResourceCollectionMetadataFactory">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.messenger.metadata.resource.metadata_collection_factory"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.resource.link_factory" class="ApiPlatform\Doctrine\Orm\Metadata\Resource\DoctrineOrmLinkFactory">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.link_factory.inner"/>
    </service>
    <service id="api_platform.http_cache.listener.response.configure" class="ApiPlatform\HttpCache\EventListener\AddHeadersListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-1"/>
      <tag name="container.hot_path"/>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>%api_platform.http_cache.vary%</argument>
      <argument>null</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.validator" class="ApiPlatform\Symfony\Validator\Metadata\Property\ValidatorPropertyMetadataFactory">
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.yaml"/>
      <argument type="tagged_iterator" tag="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.choice_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaChoiceRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.collection_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaCollectionRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
      <argument type="tagged_iterator" tag="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.count_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaCountRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.greater_than_or_equal_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaGreaterThanOrEqualRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.greater_than_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaGreaterThanRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.length_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLengthRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.less_than_or_equal_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLessThanOrEqualRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.less_than_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLessThanRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.one_of_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaOneOfRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
      <argument type="tagged_iterator" tag="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.range_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaRangeRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.regex_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaRegexRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.format_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaFormat">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.unique_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaUniqueRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.validator" class="ApiPlatform\Symfony\Validator\Validator">
      <argument type="service" id="debug.validator"/>
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="api_platform.listener.view.validate" class="ApiPlatform\Symfony\EventListener\ValidateListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="64"/>
      <argument type="service" id="api_platform.validator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.validator.query_parameter_validator" class="ApiPlatform\Api\QueryParameterValidator\QueryParameterValidator">
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.listener.view.validate_query_parameters" class="ApiPlatform\Symfony\EventListener\QueryParameterValidateListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="16"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.validator.query_parameter_validator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.data_collector.request" class="ApiPlatform\Symfony\Bundle\DataCollector\RequestDataCollector">
      <tag name="data_collector" template="@ApiPlatform/DataCollector/request.html.twig" id="api_platform.data_collector.request" priority="334"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="debug.var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner"/>
    <service id="debug.var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper"/>
    <service id="debug.api_platform.debug_resource.command" class="ApiPlatform\Symfony\Bundle\Command\DebugResourceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="debug.var_dumper.cloner"/>
      <argument type="service" id="debug.var_dumper.cli_dumper"/>
      <call method="setName">
        <argument>debug:api-resource</argument>
      </call>
    </service>
    <service id="api_platform.messenger.metadata.resource.metadata_collection_factory" class="ApiPlatform\Symfony\Messenger\Metadata\MessengerResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.php_doc"/>
    </service>
    <service id="ApiPlatform\Symfony\Messenger\Processor" class="ApiPlatform\Symfony\Messenger\Processor">
      <tag name="api_platform.state_processor" priority="-900"/>
      <argument type="service" id="debug.traced.messenger.bus.default"/>
    </service>
    <service id="api_platform.security.resource_access_checker" class="ApiPlatform\Symfony\Security\ResourceAccessChecker">
      <argument type="service" id="security.expression_language" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.security.listener.request.deny_access" class="ApiPlatform\Symfony\EventListener\DenyAccessListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurity" priority="3"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurityPostDenormalize" priority="1"/>
      <tag name="kernel.event_listener" event="kernel.view" method="onSecurityPostValidation" priority="63"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
    </service>
    <service id="api_platform.security.expression_language_provider" class="ApiPlatform\Symfony\Security\Core\Authorization\ExpressionLanguageProvider">
      <tag name="security.expression_language_provider"/>
    </service>
    <service id="api_platform.maker.command.state_processor" class="ApiPlatform\Symfony\Maker\MakeStateProcessor">
      <tag name="maker.command"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.maker.command.state_provider" class="ApiPlatform\Symfony\Maker\MakeStateProvider">
      <tag name="maker.command"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authentication\Provider\JWTProvider">
      <argument></argument>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
      <deprecated package="lexik/jwt-authentication-bundle" version="2.0">The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.listener" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Firewall\JWTListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <deprecated package="lexik/jwt-authentication-bundle" version="2.0">The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.entry_point" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\EntryPoint\JWTEntryPoint">
      <deprecated package="lexik/jwt-authentication-bundle" version="2.0">The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.key_loader.openssl" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\OpenSSLKeyLoader">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument type="collection"/>
      <deprecated package="lexik/jwt-authentication-bundle" version="2.5">The "%service_id%" service is deprecated since version 2.5 and will be removed in 3.0. Use lexik_jwt_authentication.key_loader.raw instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.default" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\DefaultJWSProvider">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>3600</argument>
      <argument>0</argument>
      <deprecated package="lexik/jwt-authentication-bundle" version="2.5">The "%service_id%" is deprecated since version 2.5 and will be removed in 5.0, use "lexik_jwt_authentication.jws_provider.lcobucci" instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.jwt_manager" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager" public="true">
      <argument type="service" id="lexik_jwt_authentication.encoder.lcobucci"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
        <argument>false</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.key_loader.abstract" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument type="collection"/>
    </service>
    <service id="lexik_jwt_authentication.key_loader.raw" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\RawKeyLoader">
      <argument>%env(resolve:JWT_SECRET_KEY)%</argument>
      <argument>%env(resolve:JWT_PUBLIC_KEY)%</argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument type="collection"/>
    </service>
    <service id="lexik_jwt_authentication.encoder.default" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\DefaultEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.default"/>
    </service>
    <service id="lexik_jwt_authentication.encoder.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\LcobucciJWTEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.lcobucci"/>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\LcobucciJWSProvider">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>3600</argument>
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_success" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
      <argument>true</argument>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_failure" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="lexik_jwt_authentication.security.jwt_authenticator" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" abstract="true">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
      <argument></argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="lexik_jwt_authentication.extractor.chain_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\ChainTokenExtractor">
      <argument type="collection">
        <argument type="service" id="lexik_jwt_authentication.extractor.authorization_header_extractor"/>
      </argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.authorization_header_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor">
      <argument>Bearer</argument>
      <argument>Authorization</argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.query_parameter_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\QueryParameterTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\CookieTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.split_cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\SplitCookieExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.security.jwt_user_provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUserProvider">
      <argument></argument>
    </service>
    <service id=".1_TokenStorage~up8J46V" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="lexik_jwt_authentication.security.guard.jwt_token_authenticator" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
      <argument type="service" id=".1_TokenStorage~up8J46V"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <deprecated package="lexik/jwt-authentication-bundle" version="2.7">The "%service_id%" service is deprecated and will be removed in 3.0, use the new "jwt" authenticator instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.check_config_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\CheckConfigCommand">
      <tag name="console.command" command="lexik:jwt:check-config"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:check-config</argument>
      </call>
      <call method="setDescription">
        <argument>Checks that the bundle is properly configured.</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.generate_token_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\GenerateTokenCommand" public="true">
      <tag name="console.command" command="lexik:jwt:generate-token"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
        <argument type="service" id="security.user.provider.concrete.app_user_phone_provider"/>
        <argument type="service" id="security.user.provider.concrete.jwt"/>
      </argument>
      <call method="setName">
        <argument>lexik:jwt:generate-token</argument>
      </call>
      <call method="setDescription">
        <argument>Generates a JWT token for a given user.</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.generate_keypair_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\GenerateKeyPairCommand">
      <tag name="console.command" command="lexik:jwt:generate-keypair"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>%env(resolve:JWT_SECRET_KEY)%</argument>
      <argument>%env(resolve:JWT_PUBLIC_KEY)%</argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:generate-keypair</argument>
      </call>
      <call method="setDescription">
        <argument>Generate public/private keys for use in your application.</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.api_platform.openapi.factory" class="Lexik\Bundle\JWTAuthenticationBundle\OpenApi\OpenApiFactory">
      <argument type="service" id="App\OpenApi\OpenApiFactory"/>
      <argument>api_login</argument>
      <argument>username</argument>
      <argument>password</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken.send_token" class="Gesdinet\JWTRefreshTokenBundle\EventListener\AttachRefreshTokenOnSuccessListener">
      <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_success" method="attachRefreshToken"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument>%gesdinet_jwt_refresh_token.ttl%</argument>
      <argument type="service" id="request_stack"/>
      <argument>%gesdinet_jwt_refresh_token.token_parameter_name%</argument>
      <argument>%gesdinet_jwt_refresh_token.single_use%</argument>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_generator"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.request.extractor.chain"/>
      <argument>%gesdinet_jwt_refresh_token.cookie%</argument>
      <argument>%gesdinet_jwt_refresh_token.return_expiration%</argument>
      <argument>%gesdinet_jwt_refresh_token.return_expiration_parameter_name%</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken.refresh_token_generator" class="Gesdinet\JWTRefreshTokenBundle\Generator\RefreshTokenGenerator" public="true">
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.refresh_token_manager" class="Gesdinet\JWTRefreshTokenBundle\Doctrine\RefreshTokenManager" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>%gesdinet.jwtrefreshtoken.refresh_token.class%</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken.request.extractor.chain" class="Gesdinet\JWTRefreshTokenBundle\Request\Extractor\ChainExtractor" public="true">
      <call method="addExtractor">
        <argument type="service" id="gesdinet.jwtrefreshtoken.request.extractor.request_body"/>
      </call>
      <call method="addExtractor">
        <argument type="service" id="gesdinet.jwtrefreshtoken.request.extractor.request_parameter"/>
      </call>
      <call method="addExtractor">
        <argument type="service" id="gesdinet.jwtrefreshtoken.request.extractor.request_cookie"/>
      </call>
    </service>
    <service id="gesdinet.jwtrefreshtoken.request.extractor.request_body" class="Gesdinet\JWTRefreshTokenBundle\Request\Extractor\RequestBodyExtractor">
      <tag name="gesdinet_jwt_refresh_token.request_extractor"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.request.extractor.request_parameter" class="Gesdinet\JWTRefreshTokenBundle\Request\Extractor\RequestParameterExtractor">
      <tag name="gesdinet_jwt_refresh_token.request_extractor"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.request.extractor.request_cookie" class="Gesdinet\JWTRefreshTokenBundle\Request\Extractor\RequestCookieExtractor">
      <tag name="gesdinet_jwt_refresh_token.request_extractor"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken" class="Gesdinet\JWTRefreshTokenBundle\Service\RefreshToken" public="true">
      <argument type="service" id="gesdinet.jwtrefreshtoken.authenticator"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.user_provider"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument>%gesdinet_jwt_refresh_token.ttl%</argument>
      <argument>%gesdinet_jwt_refresh_token.security.firewall%</argument>
      <argument>%gesdinet_jwt_refresh_token.ttl_update%</argument>
      <argument type="service" id="debug.event_dispatcher"/>
      <deprecated package="gesdinet/jwt-refresh-token-bundle" version="1.0">The "%service_id%" service is deprecated.</deprecated>
    </service>
    <service id="gesdinet.jwtrefreshtoken.user_provider" class="Gesdinet\JWTRefreshTokenBundle\Security\Provider\RefreshTokenProvider">
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <deprecated package="gesdinet/jwt-refresh-token-bundle" version="1.0">The "%service_id%" service is deprecated.</deprecated>
    </service>
    <service id="gesdinet.jwtrefreshtoken.authenticator" class="Gesdinet\JWTRefreshTokenBundle\Security\Authenticator\RefreshTokenAuthenticator">
      <argument type="service" id="security.user_checker"/>
      <argument>%gesdinet_jwt_refresh_token.token_parameter_name%</argument>
      <argument type="service" id="gesdinet.jwtrefreshtoken.request.extractor.chain"/>
      <deprecated package="gesdinet/jwt-refresh-token-bundle" version="1.0">The "%service_id%" service is deprecated.</deprecated>
    </service>
    <service id="gesdinet.jwtrefreshtoken.security.authentication.failure_handler" class="Gesdinet\JWTRefreshTokenBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.security.authentication.success_handler" class="Gesdinet\JWTRefreshTokenBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.security.refresh_token_authenticator" class="Gesdinet\JWTRefreshTokenBundle\Security\Http\Authenticator\RefreshTokenAuthenticator" abstract="true">
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.request.extractor.chain"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
      <argument type="service" id="security.http_utils"/>
    </service>
    <service id="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand" class="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <call method="setName">
        <argument>gesdinet:jwt:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear invalid refresh tokens.</argument>
      </call>
    </service>
    <service id="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand" class="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <call method="setName">
        <argument>gesdinet:jwt:revoke</argument>
      </call>
      <call method="setDescription">
        <argument>Revoke a refresh token</argument>
      </call>
    </service>
    <service id="Gesdinet\JWTRefreshTokenBundle\EventListener\LogoutEventListener" class="Gesdinet\JWTRefreshTokenBundle\EventListener\LogoutEventListener">
      <tag name="kernel.event_listener" event="Symfony\Component\Security\Http\Event\LogoutEvent" method="onLogout"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.request.extractor.chain"/>
      <argument>%gesdinet_jwt_refresh_token.token_parameter_name%</argument>
      <argument>%gesdinet_jwt_refresh_token.cookie%</argument>
      <argument>%gesdinet_jwt_refresh_token.logout_firewall_context%</argument>
    </service>
    <service id="Vich\UploaderBundle\Naming\SmartUniqueNamer.personne_avatar" class="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\SmartUniqueNamer.lesson_poster" class="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\SmartUniqueNamer.lesson_video" class="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\SmartUniqueNamer.formations_path" class="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="vich_uploader.adapter.mongodb" class="Vich\UploaderBundle\Adapter\ODM\MongoDB\MongoDBAdapter"/>
    <service id="vich_uploader.adapter.orm" class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter"/>
    <service id="vich_uploader.adapter.phpcr" class="Vich\UploaderBundle\Adapter\PHPCR\PHPCRAdapter"/>
    <service id="vich_uploader.listener.doctrine.base" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.orm" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.orm" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.orm" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.orm" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.storage.file_system" class="Vich\UploaderBundle\Storage\FileSystemStorage">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
    </service>
    <service id="vich_uploader.file_injector" class="Vich\UploaderBundle\Injector\FileInjector">
      <argument type="service" id="vich_uploader.storage.file_system"/>
    </service>
    <service id="vich_uploader.metadata.file_locator" class="Metadata\Driver\FileLocator">
      <argument type="collection"/>
    </service>
    <service id="vich_uploader.metadata.attribute_reader" class="Vich\UploaderBundle\Metadata\Driver\AttributeReader"/>
    <service id="vich_uploader.metadata_driver.annotation" class="Vich\UploaderBundle\Metadata\Driver\AnnotationDriver">
      <argument type="service" id="vich_uploader.metadata.reader"/>
      <argument type="collection">
        <argument type="service" id="doctrine"/>
      </argument>
    </service>
    <service id="vich_uploader.metadata_driver.xml" class="Vich\UploaderBundle\Metadata\Driver\XmlDriver">
      <argument type="service" id="vich_uploader.metadata.file_locator"/>
    </service>
    <service id="vich_uploader.metadata_driver.yml" class="Vich\UploaderBundle\Metadata\Driver\YmlDriver">
      <argument type="service" id="vich_uploader.metadata.file_locator"/>
    </service>
    <service id="vich_uploader.metadata_driver.yaml" class="Vich\UploaderBundle\Metadata\Driver\YamlDriver">
      <argument type="service" id="vich_uploader.metadata.file_locator"/>
    </service>
    <service id="vich_uploader.metadata_driver.chain" class="Metadata\Driver\DriverChain">
      <argument type="collection">
        <argument type="service" id="vich_uploader.metadata_driver.xml"/>
        <argument type="service">
          <service class="Vich\UploaderBundle\Metadata\Driver\AnnotationDriver">
            <argument type="service" id="vich_uploader.metadata.reader"/>
            <argument type="collection">
              <argument type="service" id="doctrine"/>
            </argument>
          </service>
        </argument>
        <argument type="service" id="vich_uploader.metadata_driver.yaml"/>
        <argument type="service" id="vich_uploader.metadata_driver.yml"/>
      </argument>
    </service>
    <service id="vich_uploader.metadata.cache.file_cache" class="Metadata\Cache\FileCache">
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/vich_uploader</argument>
    </service>
    <service id="vich_uploader.metadata_factory" class="Metadata\MetadataFactory">
      <argument type="service" id="vich_uploader.metadata_driver.chain"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="vich_uploader.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="vich_uploader.metadata_reader" class="Vich\UploaderBundle\Metadata\MetadataReader">
      <argument type="service" id="vich_uploader.metadata_factory"/>
    </service>
    <service id="Vich\UploaderBundle\Metadata\CacheWarmer" class="Vich\UploaderBundle\Metadata\CacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/vich_uploader</argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
    </service>
    <service id="vich_uploader.property_mapping_resolver" class="Vich\UploaderBundle\Mapping\PropertyMappingResolver">
      <argument type="service" id="service_container"/>
      <argument>%vich_uploader.mappings%</argument>
      <argument>_name</argument>
    </service>
    <service id="vich_uploader.property_mapping_factory" class="Vich\UploaderBundle\Mapping\PropertyMappingFactory">
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.property_mapping_resolver"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\UniqidNamer" class="Vich\UploaderBundle\Naming\UniqidNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\PropertyNamer" class="Vich\UploaderBundle\Naming\PropertyNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\OrignameNamer" class="Vich\UploaderBundle\Naming\OrignameNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\HashNamer" class="Vich\UploaderBundle\Naming\HashNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\Base64Namer" class="Vich\UploaderBundle\Naming\Base64Namer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" class="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" class="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" public="true">
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" class="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" public="true">
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\SmartUniqueNamer" class="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Util\Transliterator" class="Vich\UploaderBundle\Util\Transliterator">
      <argument type="service" id="slugger"/>
    </service>
    <service id="vich_uploader.download_handler" class="Vich\UploaderBundle\Handler\DownloadHandler" public="true">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
    </service>
    <service id="vich_uploader.upload_handler" class="Vich\UploaderBundle\Handler\UploadHandler" public="true">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
      <argument type="service" id="vich_uploader.file_injector"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="vich_uploader.command.mapping_debug_class" class="Vich\UploaderBundle\Command\MappingDebugClassCommand">
      <tag name="console.command" command="vich:mapping:debug-class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <call method="setName">
        <argument>vich:mapping:debug-class</argument>
      </call>
    </service>
    <service id="vich_uploader.command.mapping_debug" class="Vich\UploaderBundle\Command\MappingDebugCommand">
      <tag name="console.command" command="vich:mapping:debug"/>
      <tag name="container.no_preload"/>
      <argument>%vich_uploader.mappings%</argument>
      <call method="setName">
        <argument>vich:mapping:debug</argument>
      </call>
    </service>
    <service id="vich_uploader.command.mapping_list_classes" class="Vich\UploaderBundle\Command\MappingListClassesCommand">
      <tag name="console.command" command="vich:mapping:list-classes"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <call method="setName">
        <argument>vich:mapping:list-classes</argument>
      </call>
    </service>
    <service id="Vich\UploaderBundle\DataCollector\MappingCollector" class="Vich\UploaderBundle\DataCollector\MappingCollector">
      <tag name="data_collector" template="@VichUploader/Collector/mapping_collector.html.twig" id="vich_uploader.mapping_collector"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
    </service>
    <service id="vich_uploader.form.type.file" class="Vich\UploaderBundle\Form\Type\VichFileType" public="true">
      <tag name="form.type" alias="vich_file"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="vich_uploader.form.type.image" class="Vich\UploaderBundle\Form\Type\VichImageType" public="true">
      <tag name="form.type" alias="vich_image"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="property_accessor"/>
      <argument>null</argument>
    </service>
    <service id="Vich\UploaderBundle\Templating\Helper\UploaderHelper" class="Vich\UploaderBundle\Templating\Helper\UploaderHelper">
      <tag name="templating.helper" alias="vich_uploader"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
    </service>
    <service id="Vich\UploaderBundle\Twig\Extension\UploaderExtension" class="Vich\UploaderBundle\Twig\Extension\UploaderExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Vich\UploaderBundle\Twig\Extension\UploaderExtensionRuntime" class="Vich\UploaderBundle\Twig\Extension\UploaderExtensionRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="Vich\UploaderBundle\Templating\Helper\UploaderHelper"/>
    </service>
    <service id="vich_uploader.metadata.reader" class="Vich\UploaderBundle\Metadata\Driver\AttributeReader"/>
    <service id="vich_uploader.listener.clean.personne_avatar" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener">
      <tag name="doctrine.event_listener" event="preUpdate" priority="50"/>
      <argument>personne_avatar</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.personne_avatar" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener">
      <tag name="doctrine.event_listener" event="preRemove" priority="0"/>
      <tag name="doctrine.event_listener" event="postFlush" priority="0"/>
      <argument>personne_avatar</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.personne_avatar" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener">
      <tag name="doctrine.event_listener" event="prePersist" priority="0"/>
      <tag name="doctrine.event_listener" event="preUpdate" priority="0"/>
      <argument>personne_avatar</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.lesson_poster" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener">
      <tag name="doctrine.event_listener" event="preUpdate" priority="50"/>
      <argument>lesson_poster</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.lesson_poster" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener">
      <tag name="doctrine.event_listener" event="preRemove" priority="0"/>
      <tag name="doctrine.event_listener" event="postFlush" priority="0"/>
      <argument>lesson_poster</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.lesson_poster" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener">
      <tag name="doctrine.event_listener" event="prePersist" priority="0"/>
      <tag name="doctrine.event_listener" event="preUpdate" priority="0"/>
      <argument>lesson_poster</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.lesson_video" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener">
      <tag name="doctrine.event_listener" event="preUpdate" priority="50"/>
      <argument>lesson_video</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.lesson_video" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener">
      <tag name="doctrine.event_listener" event="preRemove" priority="0"/>
      <tag name="doctrine.event_listener" event="postFlush" priority="0"/>
      <argument>lesson_video</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.lesson_video" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener">
      <tag name="doctrine.event_listener" event="prePersist" priority="0"/>
      <tag name="doctrine.event_listener" event="preUpdate" priority="0"/>
      <argument>lesson_video</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.formations_path" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener">
      <tag name="doctrine.event_listener" event="preUpdate" priority="50"/>
      <argument>formations_path</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.formations_path" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener">
      <tag name="doctrine.event_listener" event="preRemove" priority="0"/>
      <tag name="doctrine.event_listener" event="postFlush" priority="0"/>
      <argument>formations_path</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.formations_path" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener">
      <tag name="doctrine.event_listener" event="prePersist" priority="0"/>
      <tag name="doctrine.event_listener" event="preUpdate" priority="0"/>
      <argument>formations_path</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="fos_js_routing.extractor" class="FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor" public="true">
      <argument type="service" id="router.default"/>
      <argument type="collection"/>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev</argument>
      <argument>%kernel.bundles%</argument>
    </service>
    <service id="fos_js_routing.dump_command" class="FOS\JsRoutingBundle\Command\DumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument>/var/www/clients/client0/web1/web</argument>
      <argument>null</argument>
      <call method="setName">
        <argument>fos:js-routing:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Dumps exposed routes to the filesystem</argument>
      </call>
    </service>
    <service id="fos_js_routing.router_debug_exposed_command" class="FOS\JsRoutingBundle\Command\RouterDebugExposedCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>fos:js-routing:debug</argument>
      </call>
      <call method="setDescription">
        <argument>Displays currently exposed routes for an application</argument>
      </call>
    </service>
    <service id="fos_js_routing.controller" class="FOS\JsRoutingBundle\Controller\Controller" public="true">
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument>%fos_js_routing.cache_control%</argument>
      <argument>true</argument>
    </service>
    <service id="fos_js_routing.serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="fos_js_routing.normalizer.route_collection"/>
        <argument type="service" id="fos_js_routing.normalizer.routes_response"/>
        <argument type="service" id="fos_js_routing.denormalizer.route_collection"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="fos_js_routing.encoder"/>
      </argument>
    </service>
    <service id="fos_js_routing.normalizer.route_collection" class="FOS\JsRoutingBundle\Serializer\Normalizer\RouteCollectionNormalizer"/>
    <service id="fos_js_routing.normalizer.routes_response" class="FOS\JsRoutingBundle\Serializer\Normalizer\RoutesResponseNormalizer"/>
    <service id="fos_js_routing.denormalizer.route_collection" class="FOS\JsRoutingBundle\Serializer\Denormalizer\RouteCollectionDenormalizer"/>
    <service id="fos_js_routing.encoder" class="Symfony\Component\Serializer\Encoder\JsonEncoder"/>
    <service id="fos_ck_editor.builder.json_builder" class="FOS\CKEditorBundle\Builder\JsonBuilder">
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="fos_ck_editor.command.installer" class="FOS\CKEditorBundle\Command\CKEditorInstallerCommand">
      <tag name="console.command" command="ckeditor:install"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="fos_ck_editor.installer"/>
      <call method="setName">
        <argument>ckeditor:install</argument>
      </call>
    </service>
    <service id="fos_ck_editor.configuration" class="FOS\CKEditorBundle\Config\CKEditorConfiguration">
      <argument type="collection">
        <argument key="configs" type="collection">
          <argument key="main_config" type="collection">
            <argument key="toolbar">full</argument>
            <argument key="filebrowserBrowseRoute">elfinder</argument>
            <argument key="filebrowserBrowseRouteParameters" type="collection"/>
          </argument>
        </argument>
        <argument key="toolbars" type="collection">
          <argument key="configs" type="collection">
            <argument key="my_toolbar_1" type="collection">
              <argument type="collection">
                <argument>Source</argument>
                <argument>-</argument>
                <argument>Save</argument>
                <argument>NewPage</argument>
                <argument>Preview</argument>
                <argument>Print</argument>
                <argument>-</argument>
                <argument>Templates</argument>
              </argument>
              <argument type="collection">
                <argument>Cut</argument>
                <argument>Copy</argument>
                <argument>Paste</argument>
                <argument>PasteText</argument>
                <argument>PasteFromWord</argument>
                <argument>-</argument>
                <argument>Undo</argument>
                <argument>Redo</argument>
              </argument>
              <argument type="collection">
                <argument>Find</argument>
                <argument>Replace</argument>
                <argument>-</argument>
                <argument>SelectAll</argument>
                <argument>-</argument>
                <argument>Scayt</argument>
              </argument>
              <argument type="collection">
                <argument>Form</argument>
                <argument>Checkbox</argument>
                <argument>Radio</argument>
                <argument>TextField</argument>
                <argument>Textarea</argument>
                <argument>Select</argument>
                <argument>Button</argument>
                <argument>ImageButton</argument>
                <argument>HiddenField</argument>
              </argument>
              <argument type="collection">
                <argument>Bold</argument>
                <argument>Italic</argument>
                <argument>Underline</argument>
                <argument>Strike</argument>
                <argument>Subscript</argument>
                <argument>Superscript</argument>
                <argument>-</argument>
                <argument>CopyFormatting</argument>
                <argument>RemoveFormat</argument>
              </argument>
              <argument type="collection">
                <argument>NumberedList</argument>
                <argument>BulletedList</argument>
                <argument>-</argument>
                <argument>Outdent</argument>
                <argument>Indent</argument>
                <argument>-</argument>
                <argument>Blockquote</argument>
                <argument>CreateDiv</argument>
                <argument>-</argument>
                <argument>JustifyLeft</argument>
                <argument>JustifyCenter</argument>
                <argument>JustifyRight</argument>
                <argument>JustifyBlock</argument>
                <argument>-</argument>
                <argument>BidiLtr</argument>
                <argument>BidiRtl</argument>
                <argument>Language</argument>
              </argument>
              <argument type="collection">
                <argument>Link</argument>
                <argument>Unlink</argument>
                <argument>Anchor</argument>
              </argument>
              <argument type="collection">
                <argument>Image</argument>
                <argument>Flash</argument>
                <argument>Table</argument>
                <argument>HorizontalRule</argument>
                <argument>Smiley</argument>
                <argument>SpecialChar</argument>
                <argument>PageBreak</argument>
                <argument>Iframe</argument>
              </argument>
              <argument type="collection">
                <argument>Styles</argument>
                <argument>Format</argument>
                <argument>Font</argument>
                <argument>FontSize</argument>
              </argument>
              <argument type="collection">
                <argument>TextColor</argument>
                <argument>BGColor</argument>
              </argument>
              <argument type="collection">
                <argument>Maximize</argument>
                <argument>ShowBlocks</argument>
              </argument>
              <argument type="collection">
                <argument>ckeditor_wiris_formulaEditor</argument>
                <argument>ckeditor_wiris_formulaEditorChemistry</argument>
              </argument>
            </argument>
            <argument key="my_toolbar_2" type="collection">
              <argument type="collection">
                <argument>Source</argument>
              </argument>
              <argument>/</argument>
              <argument type="collection">
                <argument>Anchor</argument>
              </argument>
              <argument>/</argument>
              <argument type="collection">
                <argument>Maximize</argument>
              </argument>
            </argument>
          </argument>
          <argument key="items" type="collection"/>
        </argument>
        <argument key="enable">true</argument>
        <argument key="async">false</argument>
        <argument key="auto_inline">true</argument>
        <argument key="inline">false</argument>
        <argument key="autoload">true</argument>
        <argument key="jquery">false</argument>
        <argument key="require_js">false</argument>
        <argument key="input_sync">false</argument>
        <argument key="base_path">bundles/fosckeditor/</argument>
        <argument key="js_path">bundles/fosckeditor/ckeditor.js</argument>
        <argument key="jquery_path">bundles/fosckeditor/adapters/jquery.js</argument>
        <argument key="default_config">null</argument>
        <argument key="plugins" type="collection"/>
        <argument key="styles" type="collection"/>
        <argument key="templates" type="collection"/>
        <argument key="filebrowsers" type="collection"/>
      </argument>
    </service>
    <service id="fos_ck_editor.form.type" class="FOS\CKEditorBundle\Form\Type\CKEditorType">
      <tag name="form.type"/>
      <argument type="service" id="fos_ck_editor.configuration"/>
    </service>
    <service id="fos_ck_editor.installer" class="FOS\CKEditorBundle\Installer\CKEditorInstaller"/>
    <service id="fos_ck_editor.renderer" class="FOS\CKEditorBundle\Renderer\CKEditorRenderer">
      <argument type="service" id="fos_ck_editor.builder.json_builder"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="assets.packages"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="twig"/>
      <argument type="expression">container.hasParameter('locale') ? parameter('locale') : null</argument>
    </service>
    <service id="fos_ck_editor.twig_extension" class="FOS\CKEditorBundle\Twig\CKEditorExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="fos_ck_editor.renderer"/>
    </service>
    <service id="annotated_app_entity_classe_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="specialite">exact</argument>
        <argument key="specialite.filiere">exact</argument>
        <argument key="sousSysteme">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_cours_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="categorie">exact</argument>
        <argument key="intitule">partial</argument>
        <argument key="language">exact</argument>
        <argument key="classe">exact</argument>
        <argument key="classe.specialite">exact</argument>
        <argument key="classe.specialite.filiere">exact</argument>
        <argument key="classe.skillLevel">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_cours_api_platform_doctrine_orm_filter_boolean_filter" class="ApiPlatform\Doctrine\Orm\Filter\BooleanFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="isFree">null</argument>
        <argument key="isValidated">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_cours_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="intitule">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_cours_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="publishedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_exam_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="title">partial</argument>
        <argument key="language">exact</argument>
        <argument key="category">exact</argument>
        <argument key="classe">exact</argument>
        <argument key="classe.specialite">exact</argument>
        <argument key="classe.specialite.filiere">exact</argument>
        <argument key="classe.skillLevel">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_exam_api_platform_doctrine_orm_filter_boolean_filter" class="ApiPlatform\Doctrine\Orm\Filter\BooleanFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="isValidated">null</argument>
        <argument key="isIsPublished">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_exam_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="publishedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_exam_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="publishedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_forum_message_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="sujet">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_forum_message_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="$createdAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_quiz_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="cours">exact</argument>
        <argument key="chapitre">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_quiz_result_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="eleve">exact</argument>
        <argument key="quiz.cours">exact</argument>
        <argument key="quiz.chapitre">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="forum">exact</argument>
        <argument key="forum.cours">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_sujet_api_platform_doctrine_orm_filter_boolean_filter" class="ApiPlatform\Doctrine\Orm\Filter\BooleanFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="isSolved">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\AbonnementController" class="App\Controller\Admin\AbonnementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\AbonnementController" class="App\Controller\Admin\AbonnementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\AbonnementController" class="App\Controller\Admin\AbonnementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\AbonnementItemController" class="App\Controller\Admin\AbonnementItemController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\AbonnementItemController" class="App\Controller\Admin\AbonnementItemController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\AbonnementItemController" class="App\Controller\Admin\AbonnementItemController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\CategorieController" class="App\Controller\Admin\CategorieController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\CategorieController" class="App\Controller\Admin\CategorieController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\CategorieController" class="App\Controller\Admin\CategorieController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\ChapitreController" class="App\Controller\Admin\ChapitreController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\ChapitreController" class="App\Controller\Admin\ChapitreController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\ChapitreController" class="App\Controller\Admin\ChapitreController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\ClasseController" class="App\Controller\Admin\ClasseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\ClasseController" class="App\Controller\Admin\ClasseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\ClasseController" class="App\Controller\Admin\ClasseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\CoursController" class="App\Controller\Admin\CoursController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\CoursController" class="App\Controller\Admin\CoursController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\CoursController" class="App\Controller\Admin\CoursController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\EleveController" class="App\Controller\Admin\EleveController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\EleveController" class="App\Controller\Admin\EleveController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\EleveController" class="App\Controller\Admin\EleveController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\EnseignantController" class="App\Controller\Admin\EnseignantController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\EnseignantController" class="App\Controller\Admin\EnseignantController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\EnseignantController" class="App\Controller\Admin\EnseignantController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\EtablissementController" class="App\Controller\Admin\EtablissementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\EtablissementController" class="App\Controller\Admin\EtablissementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\EtablissementController" class="App\Controller\Admin\EtablissementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\EvaluationController" class="App\Controller\Admin\EvaluationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\EvaluationController" class="App\Controller\Admin\EvaluationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\EvaluationController" class="App\Controller\Admin\EvaluationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\EvaluationQuestionController" class="App\Controller\Admin\EvaluationQuestionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\EvaluationQuestionController" class="App\Controller\Admin\EvaluationQuestionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\EvaluationQuestionController" class="App\Controller\Admin\EvaluationQuestionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\ExamController" class="App\Controller\Admin\ExamController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\ExamController" class="App\Controller\Admin\ExamController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\ExamController" class="App\Controller\Admin\ExamController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\FAQController" class="App\Controller\Admin\FAQController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\FAQController" class="App\Controller\Admin\FAQController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\FAQController" class="App\Controller\Admin\FAQController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\FiliereController" class="App\Controller\Admin\FiliereController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\FiliereController" class="App\Controller\Admin\FiliereController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\FiliereController" class="App\Controller\Admin\FiliereController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\FormationController" class="App\Controller\Admin\FormationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\FormationController" class="App\Controller\Admin\FormationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\FormationController" class="App\Controller\Admin\FormationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\ForumController" class="App\Controller\Admin\ForumController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\ForumController" class="App\Controller\Admin\ForumController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\ForumController" class="App\Controller\Admin\ForumController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\ForumMessageController" class="App\Controller\Admin\ForumMessageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\ForumMessageController" class="App\Controller\Admin\ForumMessageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\ForumMessageController" class="App\Controller\Admin\ForumMessageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\LessonController" class="App\Controller\Admin\LessonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\LessonController" class="App\Controller\Admin\LessonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\LessonController" class="App\Controller\Admin\LessonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\MediaController" class="App\Controller\Admin\MediaController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\MediaController" class="App\Controller\Admin\MediaController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\MediaController" class="App\Controller\Admin\MediaController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\NetworkConfigController" class="App\Controller\Admin\NetworkConfigController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\NetworkConfigController" class="App\Controller\Admin\NetworkConfigController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\NetworkConfigController" class="App\Controller\Admin\NetworkConfigController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\NotificationTemplateController" class="App\Controller\Admin\NotificationTemplateController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\NotificationTemplateController" class="App\Controller\Admin\NotificationTemplateController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\NotificationTemplateController" class="App\Controller\Admin\NotificationTemplateController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\PaysController" class="App\Controller\Admin\PaysController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\PaysController" class="App\Controller\Admin\PaysController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\PaysController" class="App\Controller\Admin\PaysController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\PersonneController" class="App\Controller\Admin\PersonneController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\PersonneController" class="App\Controller\Admin\PersonneController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\PersonneController" class="App\Controller\Admin\PersonneController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\PropositionController" class="App\Controller\Admin\PropositionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\PropositionController" class="App\Controller\Admin\PropositionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\PropositionController" class="App\Controller\Admin\PropositionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\QuizController" class="App\Controller\Admin\QuizController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\QuizController" class="App\Controller\Admin\QuizController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\QuizController" class="App\Controller\Admin\QuizController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\RegistrationController" class="App\Controller\Admin\RegistrationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\RegistrationController" class="App\Controller\Admin\RegistrationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\RegistrationController" class="App\Controller\Admin\RegistrationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\SettingController" class="App\Controller\Admin\SettingController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\SettingController" class="App\Controller\Admin\SettingController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\SettingController" class="App\Controller\Admin\SettingController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\SousSystemeController" class="App\Controller\Admin\SousSystemeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\SousSystemeController" class="App\Controller\Admin\SousSystemeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\SousSystemeController" class="App\Controller\Admin\SousSystemeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\SpecialiteController" class="App\Controller\Admin\SpecialiteController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\SpecialiteController" class="App\Controller\Admin\SpecialiteController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\SpecialiteController" class="App\Controller\Admin\SpecialiteController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\SujetController" class="App\Controller\Admin\SujetController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\SujetController" class="App\Controller\Admin\SujetController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\SujetController" class="App\Controller\Admin\SujetController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\TermController" class="App\Controller\Admin\TermController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\TermController" class="App\Controller\Admin\TermController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\TermController" class="App\Controller\Admin\TermController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\TypeEnseignementController" class="App\Controller\Admin\TypeEnseignementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\TypeEnseignementController" class="App\Controller\Admin\TypeEnseignementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\TypeEnseignementController" class="App\Controller\Admin\TypeEnseignementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController.0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList.0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" class="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\DetailsController" class="App\Controller\Api\Controller\Course\DetailsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\DetailsController" class="App\Controller\Api\Controller\Course\DetailsController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\DetailsController.0.App\Controller\Api\Controller\Course\DetailsController" class="App\Controller\Api\Controller\Course\DetailsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\DetailsController" class="App\Controller\Api\Controller\Course\DetailsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" class="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" class="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" class="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Forum\CourseForum" class="App\Controller\Api\Controller\Course\Forum\CourseForum" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Forum\CourseForum" class="App\Controller\Api\Controller\Course\Forum\CourseForum" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Forum\CourseForum" class="App\Controller\Api\Controller\Course\Forum\CourseForum" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Forum\ForumSubjects" class="App\Controller\Api\Controller\Course\Forum\ForumSubjects" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Forum\ForumSubjects" class="App\Controller\Api\Controller\Course\Forum\ForumSubjects" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Forum\ForumSubjects" class="App\Controller\Api\Controller\Course\Forum\ForumSubjects" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" class="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" class="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" class="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Forum\NewForumMessage" class="App\Controller\Api\Controller\Course\Forum\NewForumMessage" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Forum\NewForumMessage" class="App\Controller\Api\Controller\Course\Forum\NewForumMessage" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Forum\NewForumMessage" class="App\Controller\Api\Controller\Course\Forum\NewForumMessage" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Forum\PostSubjectController" class="App\Controller\Api\Controller\Course\Forum\PostSubjectController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Forum\PostSubjectController" class="App\Controller\Api\Controller\Course\Forum\PostSubjectController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Forum\PostSubjectController" class="App\Controller\Api\Controller\Course\Forum\PostSubjectController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Forum\SubjectMessages" class="App\Controller\Api\Controller\Course\Forum\SubjectMessages" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Forum\SubjectMessages" class="App\Controller\Api\Controller\Course\Forum\SubjectMessages" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\Forum\SubjectMessages.0.App\Controller\Api\Controller\Course\Forum\SubjectMessages" class="App\Controller\Api\Controller\Course\Forum\SubjectMessages" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Forum\SubjectMessages" class="App\Controller\Api\Controller\Course\Forum\SubjectMessages" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Forum\SujetResoluController" class="App\Controller\Api\Controller\Course\Forum\SujetResoluController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Forum\SujetResoluController" class="App\Controller\Api\Controller\Course\Forum\SujetResoluController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Forum\SujetResoluController" class="App\Controller\Api\Controller\Course\Forum\SujetResoluController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Lesson\FinishedController" class="App\Controller\Api\Controller\Course\Lesson\FinishedController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Lesson\FinishedController" class="App\Controller\Api\Controller\Course\Lesson\FinishedController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\Lesson\FinishedController.0.App\Controller\Api\Controller\Course\Lesson\FinishedController" class="App\Controller\Api\Controller\Course\Lesson\FinishedController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Lesson\FinishedController" class="App\Controller\Api\Controller\Course\Lesson\FinishedController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Lesson\FinishedLectures" class="App\Controller\Api\Controller\Course\Lesson\FinishedLectures" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Lesson\FinishedLectures" class="App\Controller\Api\Controller\Course\Lesson\FinishedLectures" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\Lesson\FinishedLectures.0.App\Controller\Api\Controller\Course\Lesson\FinishedLectures" class="App\Controller\Api\Controller\Course\Lesson\FinishedLectures" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Lesson\FinishedLectures" class="App\Controller\Api\Controller\Course\Lesson\FinishedLectures" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Quiz\PostController" class="App\Controller\Api\Controller\Course\Quiz\PostController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Quiz\PostController" class="App\Controller\Api\Controller\Course\Quiz\PostController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\Quiz\PostController.0.App\Controller\Api\Controller\Course\Quiz\PostController" class="App\Controller\Api\Controller\Course\Quiz\PostController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Quiz\PostController" class="App\Controller\Api\Controller\Course\Quiz\PostController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Review\CourseReviewController" class="App\Controller\Api\Controller\Course\Review\CourseReviewController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Review\CourseReviewController" class="App\Controller\Api\Controller\Course\Review\CourseReviewController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Review\CourseReviewController" class="App\Controller\Api\Controller\Course\Review\CourseReviewController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\Review\PostReviewController" class="App\Controller\Api\Controller\Course\Review\PostReviewController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\Review\PostReviewController" class="App\Controller\Api\Controller\Course\Review\PostReviewController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\Review\PostReviewController" class="App\Controller\Api\Controller\Course\Review\PostReviewController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\ShowQuizzesController" class="App\Controller\Api\Controller\Course\ShowQuizzesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\ShowQuizzesController" class="App\Controller\Api\Controller\Course\ShowQuizzesController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\ShowQuizzesController.0.App\Controller\Api\Controller\Course\ShowQuizzesController" class="App\Controller\Api\Controller\Course\ShowQuizzesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\ShowQuizzesController" class="App\Controller\Api\Controller\Course\ShowQuizzesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\StartCourseController" class="App\Controller\Api\Controller\Course\StartCourseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\StartCourseController" class="App\Controller\Api\Controller\Course\StartCourseController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\StartCourseController.0.App\Controller\Api\Controller\Course\StartCourseController" class="App\Controller\Api\Controller\Course\StartCourseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\StartCourseController" class="App\Controller\Api\Controller\Course\StartCourseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\StudentCourseController" class="App\Controller\Api\Controller\Course\StudentCourseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\StudentCourseController" class="App\Controller\Api\Controller\Course\StudentCourseController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\StudentCourseController.0.App\Controller\Api\Controller\Course\StudentCourseController" class="App\Controller\Api\Controller\Course\StudentCourseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\StudentCourseController" class="App\Controller\Api\Controller\Course\StudentCourseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Course\StudentLectureController" class="App\Controller\Api\Controller\Course\StudentLectureController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Course\StudentLectureController" class="App\Controller\Api\Controller\Course\StudentLectureController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Course\StudentLectureController.0.App\Controller\Api\Controller\Course\StudentLectureController" class="App\Controller\Api\Controller\Course\StudentLectureController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Course\StudentLectureController" class="App\Controller\Api\Controller\Course\StudentLectureController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Etablissement\AllController" class="App\Controller\Api\Controller\Etablissement\AllController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Etablissement\AllController" class="App\Controller\Api\Controller\Etablissement\AllController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Etablissement\AllController.0.App\Controller\Api\Controller\Etablissement\AllController" class="App\Controller\Api\Controller\Etablissement\AllController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Etablissement\AllController" class="App\Controller\Api\Controller\Etablissement\AllController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Evaluation\EvaluationsEleve" class="App\Controller\Api\Controller\Evaluation\EvaluationsEleve" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Evaluation\EvaluationsEleve" class="App\Controller\Api\Controller\Evaluation\EvaluationsEleve" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Evaluation\EvaluationsEleve.0.App\Controller\Api\Controller\Evaluation\EvaluationsEleve" class="App\Controller\Api\Controller\Evaluation\EvaluationsEleve" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Evaluation\EvaluationsEleve" class="App\Controller\Api\Controller\Evaluation\EvaluationsEleve" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Evaluation\InscriptionController" class="App\Controller\Api\Controller\Evaluation\InscriptionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Evaluation\InscriptionController" class="App\Controller\Api\Controller\Evaluation\InscriptionController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Evaluation\InscriptionController.0.App\Controller\Api\Controller\Evaluation\InscriptionController" class="App\Controller\Api\Controller\Evaluation\InscriptionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Evaluation\InscriptionController" class="App\Controller\Api\Controller\Evaluation\InscriptionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Evaluation\ListController" class="App\Controller\Api\Controller\Evaluation\ListController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Evaluation\ListController" class="App\Controller\Api\Controller\Evaluation\ListController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Evaluation\ListController.0.App\Controller\Api\Controller\Evaluation\ListController" class="App\Controller\Api\Controller\Evaluation\ListController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Evaluation\ListController" class="App\Controller\Api\Controller\Evaluation\ListController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Evaluation\PostCorrectionController" class="App\Controller\Api\Controller\Evaluation\PostCorrectionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Evaluation\PostCorrectionController" class="App\Controller\Api\Controller\Evaluation\PostCorrectionController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Evaluation\PostCorrectionController.0.App\Controller\Api\Controller\Evaluation\PostCorrectionController" class="App\Controller\Api\Controller\Evaluation\PostCorrectionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Evaluation\PostCorrectionController" class="App\Controller\Api\Controller\Evaluation\PostCorrectionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Evaluation\QuestionnaireController" class="App\Controller\Api\Controller\Evaluation\QuestionnaireController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Evaluation\QuestionnaireController" class="App\Controller\Api\Controller\Evaluation\QuestionnaireController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Evaluation\QuestionnaireController.0.App\Controller\Api\Controller\Evaluation\QuestionnaireController" class="App\Controller\Api\Controller\Evaluation\QuestionnaireController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Evaluation\QuestionnaireController" class="App\Controller\Api\Controller\Evaluation\QuestionnaireController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Evaluation\ResultatController" class="App\Controller\Api\Controller\Evaluation\ResultatController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Evaluation\ResultatController" class="App\Controller\Api\Controller\Evaluation\ResultatController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Evaluation\ResultatController.0.App\Controller\Api\Controller\Evaluation\ResultatController" class="App\Controller\Api\Controller\Evaluation\ResultatController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Evaluation\ResultatController" class="App\Controller\Api\Controller\Evaluation\ResultatController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Faq\FaqCourseController" class="App\Controller\Api\Controller\Faq\FaqCourseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Faq\FaqCourseController" class="App\Controller\Api\Controller\Faq\FaqCourseController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Faq\FaqCourseController.0.App\Controller\Api\Controller\Faq\FaqCourseController" class="App\Controller\Api\Controller\Faq\FaqCourseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Faq\FaqCourseController" class="App\Controller\Api\Controller\Faq\FaqCourseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Payment\PayerAbonnementController" class="App\Controller\Api\Controller\Payment\PayerAbonnementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Payment\PayerAbonnementController" class="App\Controller\Api\Controller\Payment\PayerAbonnementController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Payment\PayerAbonnementController.0.App\Controller\Api\Controller\Payment\PayerAbonnementController" class="App\Controller\Api\Controller\Payment\PayerAbonnementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Payment\PayerAbonnementController" class="App\Controller\Api\Controller\Payment\PayerAbonnementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Payment\PayerCoursController" class="App\Controller\Api\Controller\Payment\PayerCoursController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Payment\PayerCoursController" class="App\Controller\Api\Controller\Payment\PayerCoursController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Payment\PayerCoursController.0.App\Controller\Api\Controller\Payment\PayerCoursController" class="App\Controller\Api\Controller\Payment\PayerCoursController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Payment\PayerCoursController" class="App\Controller\Api\Controller\Payment\PayerCoursController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\Payment\StudentPaymentController" class="App\Controller\Api\Controller\Payment\StudentPaymentController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\Payment\StudentPaymentController" class="App\Controller\Api\Controller\Payment\StudentPaymentController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\Payment\StudentPaymentController.0.App\Controller\Api\Controller\Payment\StudentPaymentController" class="App\Controller\Api\Controller\Payment\StudentPaymentController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\Payment\StudentPaymentController" class="App\Controller\Api\Controller\Payment\StudentPaymentController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\SecurityController" class="App\Controller\Api\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\SecurityController" class="App\Controller\Api\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\SecurityController" class="App\Controller\Api\Controller\SecurityController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\User\ChangeAvatarController.0.App\Controller\Api\Controller\User\ChangeAvatarController" class="App\Controller\Api\Controller\User\ChangeAvatarController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\User\ChangeAvatarController" class="App\Controller\Api\Controller\User\ChangeAvatarController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\User\MeController" class="App\Controller\Api\Controller\User\MeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\User\MeController" class="App\Controller\Api\Controller\User\MeController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\User\MeController.0.App\Controller\Api\Controller\User\MeController" class="App\Controller\Api\Controller\User\MeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\User\MeController" class="App\Controller\Api\Controller\User\MeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\User\NetworkController" class="App\Controller\Api\Controller\User\NetworkController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\User\NetworkController" class="App\Controller\Api\Controller\User\NetworkController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\User\NetworkController.0.App\Controller\Api\Controller\User\NetworkController" class="App\Controller\Api\Controller\User\NetworkController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\User\NetworkController" class="App\Controller\Api\Controller\User\NetworkController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\Controller\User\NewController" class="App\Controller\Api\Controller\User\NewController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\Controller\User\NewController" class="App\Controller\Api\Controller\User\NewController" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Controller\Api\Controller\User\NewController.0.App\Controller\Api\Controller\User\NewController" class="App\Controller\Api\Controller\User\NewController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\Controller\User\NewController" class="App\Controller\Api\Controller\User\NewController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Front\CourseForumController" class="App\Controller\Front\CourseForumController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Front\CourseForumController" class="App\Controller\Front\CourseForumController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Front\CourseForumController" class="App\Controller\Front\CourseForumController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Front\CoursesController" class="App\Controller\Front\CoursesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Front\CoursesController" class="App\Controller\Front\CoursesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Front\CoursesController" class="App\Controller\Front\CoursesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Front\EvaluationController" class="App\Controller\Front\EvaluationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Front\EvaluationController" class="App\Controller\Front\EvaluationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Front\EvaluationController" class="App\Controller\Front\EvaluationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Front\ExamController" class="App\Controller\Front\ExamController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Front\ExamController" class="App\Controller\Front\ExamController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Front\ExamController" class="App\Controller\Front\ExamController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Front\FaqController" class="App\Controller\Front\FaqController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Front\FaqController" class="App\Controller\Front\FaqController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Front\FaqController" class="App\Controller\Front\FaqController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Front\ForumController" class="App\Controller\Front\ForumController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Front\ForumController" class="App\Controller\Front\ForumController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Front\ForumController" class="App\Controller\Front\ForumController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Front\PaymentController" class="App\Controller\Front\PaymentController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Front\PaymentController" class="App\Controller\Front\PaymentController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Front\PaymentController" class="App\Controller\Front\PaymentController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Front\coursesCategoryController" class="App\Controller\Front\coursesCategoryController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Front\coursesCategoryController" class="App\Controller\Front\coursesCategoryController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Front\coursesCategoryController" class="App\Controller\Front\coursesCategoryController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\FrontController" class="App\Controller\FrontController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\FrontController" class="App\Controller\FrontController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\FrontController" class="App\Controller\FrontController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\HomeController" class="App\Controller\HomeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\HomeController" class="App\Controller\HomeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\HomeController" class="App\Controller\HomeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\IInstructor\OrdersController" class="App\Controller\IInstructor\OrdersController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\IInstructor\OrdersController" class="App\Controller\IInstructor\OrdersController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\IInstructor\OrdersController" class="App\Controller\IInstructor\OrdersController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Instructor\CourseForumController" class="App\Controller\Instructor\CourseForumController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Instructor\CourseForumController" class="App\Controller\Instructor\CourseForumController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Instructor\CourseForumController" class="App\Controller\Instructor\CourseForumController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Instructor\CoursesController" class="App\Controller\Instructor\CoursesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Instructor\CoursesController" class="App\Controller\Instructor\CoursesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Instructor\CoursesController" class="App\Controller\Instructor\CoursesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Instructor\ExamController" class="App\Controller\Instructor\ExamController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Instructor\ExamController" class="App\Controller\Instructor\ExamController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Instructor\ExamController" class="App\Controller\Instructor\ExamController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Instructor\HomeController" class="App\Controller\Instructor\HomeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Instructor\HomeController" class="App\Controller\Instructor\HomeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Instructor\HomeController" class="App\Controller\Instructor\HomeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Instructor\LessonController" class="App\Controller\Instructor\LessonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Instructor\LessonController" class="App\Controller\Instructor\LessonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Instructor\LessonController" class="App\Controller\Instructor\LessonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Instructor\NetworkController" class="App\Controller\Instructor\NetworkController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Instructor\NetworkController" class="App\Controller\Instructor\NetworkController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Instructor\NetworkController" class="App\Controller\Instructor\NetworkController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Instructor\OrdersController" class="App\Controller\Instructor\OrdersController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Instructor\OrdersController" class="App\Controller\Instructor\OrdersController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Instructor\OrdersController" class="App\Controller\Instructor\OrdersController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Instructor\ReviewsController" class="App\Controller\Instructor\ReviewsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Instructor\ReviewsController" class="App\Controller\Instructor\ReviewsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Instructor\ReviewsController" class="App\Controller\Instructor\ReviewsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\MaintenanceController" class="App\Controller\MaintenanceController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\MaintenanceController" class="App\Controller\MaintenanceController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\MaintenanceController" class="App\Controller\MaintenanceController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PaymentControllers" class="App\Controller\PaymentControllers" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PaymentControllers" class="App\Controller\PaymentControllers" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PaymentControllers" class="App\Controller\PaymentControllers" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ProfileController" class="App\Controller\ProfileController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ProfileController" class="App\Controller\ProfileController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ProfileController" class="App\Controller\ProfileController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\RegistrationController" class="App\Controller\RegistrationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\RegistrationController" class="App\Controller\RegistrationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\RegistrationController" class="App\Controller\RegistrationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ResetPasswordController" class="App\Controller\ResetPasswordController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ResetPasswordController" class="App\Controller\ResetPasswordController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ResetPasswordController" class="App\Controller\ResetPasswordController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Student\CourseController" class="App\Controller\Student\CourseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Student\CourseController" class="App\Controller\Student\CourseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Student\CourseController" class="App\Controller\Student\CourseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Student\EvaluationController" class="App\Controller\Student\EvaluationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Student\EvaluationController" class="App\Controller\Student\EvaluationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Student\EvaluationController" class="App\Controller\Student\EvaluationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Student\HomeController" class="App\Controller\Student\HomeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Student\HomeController" class="App\Controller\Student\HomeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Student\HomeController" class="App\Controller\Student\HomeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Student\NetworkController" class="App\Controller\Student\NetworkController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Student\NetworkController" class="App\Controller\Student\NetworkController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Student\NetworkController" class="App\Controller\Student\NetworkController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Student\PaymentController" class="App\Controller\Student\PaymentController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Student\PaymentController" class="App\Controller\Student\PaymentController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Student\PaymentController" class="App\Controller\Student\PaymentController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\TermsController" class="App\Controller\TermsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\TermsController" class="App\Controller\TermsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TermsController" class="App\Controller\TermsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\ControllerSubscriber" class="App\EventSubscriber\ControllerSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\ControllerSubscriber" class="App\EventSubscriber\ControllerSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\KernelSubscriber" class="App\EventSubscriber\KernelSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\KernelSubscriber" class="App\EventSubscriber\KernelSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\LoginSubscriber" class="App\EventSubscriber\LoginSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\LoginSubscriber" class="App\EventSubscriber\LoginSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\LogoutSubscriber" class="App\EventSubscriber\LogoutSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\LogoutSubscriber" class="App\EventSubscriber\LogoutSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventSubscriber\PageLoadedSubscriber" class="App\EventSubscriber\PageLoadedSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventSubscriber\PageLoadedSubscriber" class="App\EventSubscriber\PageLoadedSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\AbonnementItemType" class="App\Form\AbonnementItemType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\AbonnementItemType" class="App\Form\AbonnementItemType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\AbonnementType" class="App\Form\AbonnementType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\AbonnementType" class="App\Form\AbonnementType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CategorieType" class="App\Form\CategorieType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CategorieType" class="App\Form\CategorieType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ChangePasswordFormType" class="App\Form\ChangePasswordFormType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ChangePasswordFormType" class="App\Form\ChangePasswordFormType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ChapitreType" class="App\Form\ChapitreType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ChapitreType" class="App\Form\ChapitreType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ClasseType" class="App\Form\ClasseType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ClasseType" class="App\Form\ClasseType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ContactType" class="App\Form\ContactType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ContactType" class="App\Form\ContactType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CoursType" class="App\Form\CoursType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CoursType" class="App\Form\CoursType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CourseQuizType" class="App\Form\CourseQuizType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CourseQuizType" class="App\Form\CourseQuizType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CourseReviewType" class="App\Form\CourseReviewType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CourseReviewType" class="App\Form\CourseReviewType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\EditSocialSettingType" class="App\Form\EditSocialSettingType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\EditSocialSettingType" class="App\Form\EditSocialSettingType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\EleveType" class="App\Form\EleveType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\EleveType" class="App\Form\EleveType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\EnseignantType" class="App\Form\EnseignantType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\EnseignantType" class="App\Form\EnseignantType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\EtablissementType" class="App\Form\EtablissementType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\EtablissementType" class="App\Form\EtablissementType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\EvaluationQuestionType" class="App\Form\EvaluationQuestionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\EvaluationQuestionType" class="App\Form\EvaluationQuestionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\EvaluationType" class="App\Form\EvaluationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\EvaluationType" class="App\Form\EvaluationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ExamFormType" class="App\Form\ExamFormType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ExamFormType" class="App\Form\ExamFormType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FAQType" class="App\Form\FAQType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FAQType" class="App\Form\FAQType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FiliereType" class="App\Form\FiliereType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FiliereType" class="App\Form\FiliereType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FormationType" class="App\Form\FormationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FormationType" class="App\Form\FormationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ForumMessageType" class="App\Form\ForumMessageType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ForumMessageType" class="App\Form\ForumMessageType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ForumType" class="App\Form\ForumType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ForumType" class="App\Form\ForumType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\GeneralSettingsType" class="App\Form\GeneralSettingsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\GeneralSettingsType" class="App\Form\GeneralSettingsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Lesson1Type" class="App\Form\Lesson1Type" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Lesson1Type" class="App\Form\Lesson1Type" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\LessonFormType" class="App\Form\LessonFormType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\LessonFormType" class="App\Form\LessonFormType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\LessonType" class="App\Form\LessonType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\LessonType" class="App\Form\LessonType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\MediaType" class="App\Form\MediaType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\MediaType" class="App\Form\MediaType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\NetworkConfigType" class="App\Form\NetworkConfigType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\NetworkConfigType" class="App\Form\NetworkConfigType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\NotificationTemplateType" class="App\Form\NotificationTemplateType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\NotificationTemplateType" class="App\Form\NotificationTemplateType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PaysType" class="App\Form\PaysType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PaysType" class="App\Form\PaysType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PersonneFormType" class="App\Form\PersonneFormType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PersonneFormType" class="App\Form\PersonneFormType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PersonneType" class="App\Form\PersonneType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PersonneType" class="App\Form\PersonneType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PropositionType" class="App\Form\PropositionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PropositionType" class="App\Form\PropositionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\QuizType" class="App\Form\QuizType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\QuizType" class="App\Form\QuizType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\RegistrationFormType" class="App\Form\RegistrationFormType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\RegistrationFormType" class="App\Form\RegistrationFormType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\RegistrationStudentType" class="App\Form\RegistrationStudentType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\RegistrationStudentType" class="App\Form\RegistrationStudentType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\RegistrationTeacherType" class="App\Form\RegistrationTeacherType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\RegistrationTeacherType" class="App\Form\RegistrationTeacherType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ResetPasswordRequestFormType" class="App\Form\ResetPasswordRequestFormType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ResetPasswordRequestFormType" class="App\Form\ResetPasswordRequestFormType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ResetPasswordType" class="App\Form\ResetPasswordType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ResetPasswordType" class="App\Form\ResetPasswordType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\RetraitType" class="App\Form\RetraitType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\RetraitType" class="App\Form\RetraitType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\SocialSettingsType" class="App\Form\SocialSettingsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\SocialSettingsType" class="App\Form\SocialSettingsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\SousSystemeType" class="App\Form\SousSystemeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\SousSystemeType" class="App\Form\SousSystemeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\SpecialiteType" class="App\Form\SpecialiteType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\SpecialiteType" class="App\Form\SpecialiteType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\SujetType" class="App\Form\SujetType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\SujetType" class="App\Form\SujetType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TermType" class="App\Form\TermType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TermType" class="App\Form\TermType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TypeEnseignementType" class="App\Form\TypeEnseignementType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TypeEnseignementType" class="App\Form\TypeEnseignementType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\WebSiteSettingsType" class="App\Form\WebSiteSettingsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\WebSiteSettingsType" class="App\Form\WebSiteSettingsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AbonnementItemRepository" class="App\Repository\AbonnementItemRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AbonnementItemRepository" class="App\Repository\AbonnementItemRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AbonnementRepository" class="App\Repository\AbonnementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AbonnementRepository" class="App\Repository\AbonnementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ChapitreRepository" class="App\Repository\ChapitreRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ChapitreRepository" class="App\Repository\ChapitreRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ClasseRepository" class="App\Repository\ClasseRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ClasseRepository" class="App\Repository\ClasseRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CoursRepository" class="App\Repository\CoursRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CoursRepository" class="App\Repository\CoursRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CourseTagRepository" class="App\Repository\CourseTagRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CourseTagRepository" class="App\Repository\CourseTagRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EleveRepository" class="App\Repository\EleveRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EleveRepository" class="App\Repository\EleveRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EmailSettingRepository" class="App\Repository\EmailSettingRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EmailSettingRepository" class="App\Repository\EmailSettingRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EnseignantRepository" class="App\Repository\EnseignantRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EnseignantRepository" class="App\Repository\EnseignantRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EtablissementRepository" class="App\Repository\EtablissementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EtablissementRepository" class="App\Repository\EtablissementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EvaluationQuestionRepository" class="App\Repository\EvaluationQuestionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EvaluationQuestionRepository" class="App\Repository\EvaluationQuestionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EvaluationRepository" class="App\Repository\EvaluationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EvaluationRepository" class="App\Repository\EvaluationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EvaluationResultatRepository" class="App\Repository\EvaluationResultatRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EvaluationResultatRepository" class="App\Repository\EvaluationResultatRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ExamRepository" class="App\Repository\ExamRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ExamRepository" class="App\Repository\ExamRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FAQRepository" class="App\Repository\FAQRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FAQRepository" class="App\Repository\FAQRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FiliereRepository" class="App\Repository\FiliereRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FiliereRepository" class="App\Repository\FiliereRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FormationRepository" class="App\Repository\FormationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FormationRepository" class="App\Repository\FormationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ForumMessageRepository" class="App\Repository\ForumMessageRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ForumMessageRepository" class="App\Repository\ForumMessageRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ForumRepository" class="App\Repository\ForumRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ForumRepository" class="App\Repository\ForumRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\JoinAtRepository" class="App\Repository\JoinAtRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\JoinAtRepository" class="App\Repository\JoinAtRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LectureRepository" class="App\Repository\LectureRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LectureRepository" class="App\Repository\LectureRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LessonRepository" class="App\Repository\LessonRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LessonRepository" class="App\Repository\LessonRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LikeMessageForumRepository" class="App\Repository\LikeMessageForumRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LikeMessageForumRepository" class="App\Repository\LikeMessageForumRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LikeRepository" class="App\Repository\LikeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LikeRepository" class="App\Repository\LikeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MediaRepository" class="App\Repository\MediaRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MediaRepository" class="App\Repository\MediaRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MembreRepository" class="App\Repository\MembreRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MembreRepository" class="App\Repository\MembreRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NetworkConfigRepository" class="App\Repository\NetworkConfigRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NetworkConfigRepository" class="App\Repository\NetworkConfigRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NotificationSettingRepository" class="App\Repository\NotificationSettingRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NotificationSettingRepository" class="App\Repository\NotificationSettingRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NotificationTemplateRepository" class="App\Repository\NotificationTemplateRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NotificationTemplateRepository" class="App\Repository\NotificationTemplateRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NotificationTypeRepository" class="App\Repository\NotificationTypeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NotificationTypeRepository" class="App\Repository\NotificationTypeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PaymentMethodRepository" class="App\Repository\PaymentMethodRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PaymentMethodRepository" class="App\Repository\PaymentMethodRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PaymentRepository" class="App\Repository\PaymentRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PaymentRepository" class="App\Repository\PaymentRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PaysRepository" class="App\Repository\PaysRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PaysRepository" class="App\Repository\PaysRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PersonneRepository" class="App\Repository\PersonneRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PersonneRepository" class="App\Repository\PersonneRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PropositionRepository" class="App\Repository\PropositionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PropositionRepository" class="App\Repository\PropositionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\QuizLostRepository" class="App\Repository\QuizLostRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\QuizLostRepository" class="App\Repository\QuizLostRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\QuizRepository" class="App\Repository\QuizRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\QuizRepository" class="App\Repository\QuizRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\QuizResultRepository" class="App\Repository\QuizResultRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\QuizResultRepository" class="App\Repository\QuizResultRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\QuizzesTypeRepository" class="App\Repository\QuizzesTypeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\QuizzesTypeRepository" class="App\Repository\QuizzesTypeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ReponseRepository" class="App\Repository\ReponseRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ReponseRepository" class="App\Repository\ReponseRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ResetPasswordRequestRepository" class="App\Repository\ResetPasswordRequestRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ResetPasswordRequestRepository" class="App\Repository\ResetPasswordRequestRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\RetraitRepository" class="App\Repository\RetraitRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\RetraitRepository" class="App\Repository\RetraitRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ReviewRepository" class="App\Repository\ReviewRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ReviewRepository" class="App\Repository\ReviewRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SiteSettingRepository" class="App\Repository\SiteSettingRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SiteSettingRepository" class="App\Repository\SiteSettingRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SkillLevelRepository" class="App\Repository\SkillLevelRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SkillLevelRepository" class="App\Repository\SkillLevelRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SocialSettingRepository" class="App\Repository\SocialSettingRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SocialSettingRepository" class="App\Repository\SocialSettingRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SousSystemeRepository" class="App\Repository\SousSystemeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SousSystemeRepository" class="App\Repository\SousSystemeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SpecialiteRepository" class="App\Repository\SpecialiteRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SpecialiteRepository" class="App\Repository\SpecialiteRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SujetRepository" class="App\Repository\SujetRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SujetRepository" class="App\Repository\SujetRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TermRepository" class="App\Repository\TermRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TermRepository" class="App\Repository\TermRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TypeEnseignementRepository" class="App\Repository\TypeEnseignementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TypeEnseignementRepository" class="App\Repository\TypeEnseignementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Serializer\Normalizer\NormalizerInterface.0.App\Serializer\AvatarNormalizer" class="App\Serializer\AvatarNormalizer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\AvatarNormalizer" class="App\Serializer\AvatarNormalizer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.7nzbL4K" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="enum" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="shuffle" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:auth" description="Creates a Guard authenticator of different flavors"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a Guard authenticator of different flavors</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:command" description="Creates a new console command class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new console command class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_component" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:twig-component" description="Creates a twig (or live) component"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_twig_component"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:twig-component</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a twig (or live) component</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:controller" description="Creates a new controller class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new controller class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:crud" description="Creates CRUD for Doctrine entity class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
      <call method="setDescription">
        <argument>Creates CRUD for Doctrine entity class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_docker_database" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:docker:database" description="Adds a database container to your docker-compose.yaml file"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_docker_database"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:docker:database</argument>
      </call>
      <call method="setDescription">
        <argument>Adds a database container to your docker-compose.yaml file</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:entity" description="Creates or updates a Doctrine entity class, and optionally an API Platform resource"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
      <call method="setDescription">
        <argument>Creates or updates a Doctrine entity class, and optionally an API Platform resource</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:fixtures" description="Creates a new class to load Doctrine fixtures"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new class to load Doctrine fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:form" description="Creates a new form class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new form class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_message" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:message" description="Creates a new message and handler"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_message"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:message</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new message and handler</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:messenger-middleware" description="Creates a new messenger middleware"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_messenger_middleware"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:messenger-middleware</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new messenger middleware</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:registration-form" description="Creates a new registration form system"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new registration form system</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_reset_password" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:reset-password" description="Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_reset_password"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:reset-password</argument>
      </call>
      <call method="setDescription">
        <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:serializer:encoder" description="Creates a new serializer encoder class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new serializer encoder class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:serializer:normalizer" description="Creates a new serializer normalizer class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new serializer normalizer class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:subscriber" description="Creates a new event subscriber class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new event subscriber class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:twig-extension" description="Creates a new Twig extension with its runtime class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new Twig extension with its runtime class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:test" description="Creates a new test class"/>
      <tag name="console.command" command="make:unit-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="console.command" command="make:functional-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:test</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>make:unit-test</argument>
          <argument>make:functional-test</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new test class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:validator" description="Creates a new validator and constraint class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new validator and constraint class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:voter" description="Creates a new security voter class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new security voter class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:user" description="Creates a new security user class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new security user class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:migration" description="Creates a new migration based on database changes"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new migration based on database changes</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_stimulus_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:stimulus-controller" description="Creates a new Stimulus controller"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_stimulus_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:stimulus-controller</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new Stimulus controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_security_form_login" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:security:form-login" description="Generate the code needed for the form_login authenticator"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_form_login"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:security:form-login</argument>
      </call>
      <call method="setDescription">
        <argument>Generate the code needed for the form_login authenticator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_state_processor" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:state-processor" description="Creates an API Platform state processor"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="api_platform.maker.command.state_processor"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:state-processor</argument>
      </call>
      <call method="setDescription">
        <argument>Creates an API Platform state processor</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_state_provider" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:state-provider" description="Creates an API Platform state provider"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="api_platform.maker.command.state_provider"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:state-provider</argument>
      </call>
      <call method="setDescription">
        <argument>Creates an API Platform state provider</argument>
      </call>
    </service>
    <service id=".service_locator.y4_Zrx." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.n8UGmG4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnementItemRepository" type="service_closure" id="App\Repository\AbonnementItemRepository"/>
        <argument key="abonnementRepository" type="service_closure" id="App\Repository\AbonnementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.lz_g3dg" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnementRepository" type="service_closure" id="App\Repository\AbonnementRepository"/>
        <argument key="sluggerInterface" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.KPOw2Hp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnement" type="service_closure" id=".errored..service_locator.KPOw2Hp.App\Entity\Abonnement"/>
      </argument>
    </service>
    <service id=".service_locator.eqZsSWM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnement" type="service_closure" id=".errored..service_locator.eqZsSWM.App\Entity\Abonnement"/>
        <argument key="abonnementRepository" type="service_closure" id="App\Repository\AbonnementRepository"/>
      </argument>
    </service>
    <service id=".service_locator._mqZjct" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnementItemRepository" type="service_closure" id="App\Repository\AbonnementItemRepository"/>
      </argument>
    </service>
    <service id=".service_locator.JYs6EHz" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnementItem" type="service_closure" id=".errored..service_locator.JYs6EHz.App\Entity\AbonnementItem"/>
      </argument>
    </service>
    <service id=".service_locator.zNI9i6M" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnementItem" type="service_closure" id=".errored..service_locator.zNI9i6M.App\Entity\AbonnementItem"/>
        <argument key="abonnementItemRepository" type="service_closure" id="App\Repository\AbonnementItemRepository"/>
      </argument>
    </service>
    <service id=".service_locator.VIrGozw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.g.onyyT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="fileUploader" type="service_closure" id="App\Service\FileUploader"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.j7wOkYK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorie" type="service_closure" id=".errored..service_locator.j7wOkYK.App\Entity\Categorie"/>
      </argument>
    </service>
    <service id=".service_locator.HcAqD_t" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorie" type="service_closure" id=".errored..service_locator.HcAqD_t.App\Entity\Categorie"/>
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="fileUploader" type="service_closure" id="App\Service\FileUploader"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.iPTmcBs" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorie" type="service_closure" id=".errored..service_locator.iPTmcBs.App\Entity\Categorie"/>
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
      </argument>
    </service>
    <service id=".service_locator.zc0mk_0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chapitreRepository" type="service_closure" id="App\Repository\ChapitreRepository"/>
      </argument>
    </service>
    <service id=".service_locator.eaTrZQM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chapitreRepository" type="service_closure" id="App\Repository\ChapitreRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.auv825B" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chapitre" type="service_closure" id=".errored..service_locator.auv825B.App\Entity\Chapitre"/>
      </argument>
    </service>
    <service id=".service_locator.LHBTlSB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chapitre" type="service_closure" id=".errored..service_locator.LHBTlSB.App\Entity\Chapitre"/>
        <argument key="chapitreRepository" type="service_closure" id="App\Repository\ChapitreRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.aaST1nn" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chapitre" type="service_closure" id=".errored..service_locator.aaST1nn.App\Entity\Chapitre"/>
        <argument key="chapitreRepository" type="service_closure" id="App\Repository\ChapitreRepository"/>
      </argument>
    </service>
    <service id=".service_locator.RblMI1d" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="classeRepository" type="service_closure" id="App\Repository\ClasseRepository"/>
      </argument>
    </service>
    <service id=".service_locator.dKHVPkC" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="classeRepository" type="service_closure" id="App\Repository\ClasseRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator..HWWlJE" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="classe" type="service_closure" id=".errored..service_locator..HWWlJE.App\Entity\Classe"/>
      </argument>
    </service>
    <service id=".service_locator.e8EBBee" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="classe" type="service_closure" id=".errored..service_locator.e8EBBee.App\Entity\Classe"/>
        <argument key="classeRepository" type="service_closure" id="App\Repository\ClasseRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.GdA86g7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="classe" type="service_closure" id=".errored..service_locator.GdA86g7.App\Entity\Classe"/>
        <argument key="classeRepository" type="service_closure" id="App\Repository\ClasseRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Cb0FaSe" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator.Yz8Vt.k" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.gMvq5pN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="course" type="service_closure" id=".errored..service_locator.gMvq5pN.App\Entity\Cours"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator.VFRfSyw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="course" type="service_closure" id=".errored..service_locator.VFRfSyw.App\Entity\Cours"/>
        <argument key="notificationRepository" type="service_closure" id="App\Repository\NotificationRepository"/>
        <argument key="notificationTemplateRepository" type="service_closure" id="App\Repository\NotificationTemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.RgJF.d4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="course" type="service_closure" id=".errored..service_locator.RgJF.d4.App\Entity\Cours"/>
        <argument key="notificationRepository" type="service_closure" id="App\Repository\NotificationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Xl2sCQI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="review" type="service_closure" id=".errored..service_locator.Xl2sCQI.App\Entity\Review"/>
        <argument key="reviewRepository" type="service_closure" id="App\Repository\ReviewRepository"/>
      </argument>
    </service>
    <service id=".service_locator.tGxlRXC" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cour" type="service_closure" id=".errored..service_locator.tGxlRXC.App\Entity\Cours"/>
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.1ZVS9Vu" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cour" type="service_closure" id=".errored..service_locator.1ZVS9Vu.App\Entity\Cours"/>
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
      </argument>
    </service>
    <service id=".service_locator.c22ImwG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="notificationRepository" type="service_closure" id="App\Repository\NotificationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.DcCEeyO" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.7zyAtZq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
      </argument>
    </service>
    <service id=".service_locator.v_kzbYK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator.ZUciSQZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
      </argument>
    </service>
    <service id=".service_locator.zMkT7yZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleve" type="service_closure" id=".errored..service_locator.zMkT7yZ.App\Entity\Eleve"/>
      </argument>
    </service>
    <service id=".service_locator.r0BjQku" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleve" type="service_closure" id=".errored..service_locator.r0BjQku.App\Entity\Eleve"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
      </argument>
    </service>
    <service id=".service_locator..1fzwrY" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator.E5H.BTi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignant" type="service_closure" id=".errored..service_locator.E5H.BTi.App\Entity\Enseignant"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="notificationRepository" type="service_closure" id="App\Repository\NotificationRepository"/>
        <argument key="ntr" type="service_closure" id="App\Repository\NotificationTemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.NbL4vpV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignant" type="service_closure" id=".errored..service_locator.NbL4vpV.App\Entity\Enseignant"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="mailer" type="service_closure" id="mailer.mailer"/>
        <argument key="notificationRepository" type="service_closure" id="App\Repository\NotificationRepository"/>
        <argument key="ntr" type="service_closure" id="App\Repository\NotificationTemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.6JvQVQH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Q2J1hJr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignant" type="service_closure" id=".errored..service_locator.Q2J1hJr.App\Entity\Enseignant"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="reviewRepository" type="service_closure" id="App\Repository\ReviewRepository"/>
      </argument>
    </service>
    <service id=".service_locator.egXUG0V" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignant" type="service_closure" id=".errored..service_locator.egXUG0V.App\Entity\Enseignant"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
      </argument>
    </service>
    <service id=".service_locator..dGzn4B" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="etablissementRepository" type="service_closure" id="App\Repository\EtablissementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.SvV89WQ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="etablissement" type="service_closure" id=".errored..service_locator.SvV89WQ.App\Entity\Etablissement"/>
      </argument>
    </service>
    <service id=".service_locator.ajDOBVr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="etablissement" type="service_closure" id=".errored..service_locator.ajDOBVr.App\Entity\Etablissement"/>
        <argument key="etablissementRepository" type="service_closure" id="App\Repository\EtablissementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.FjsgjXR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluationRepository" type="service_closure" id="App\Repository\EvaluationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.DBp52_G" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluationRepository" type="service_closure" id="App\Repository\EvaluationRepository"/>
        <argument key="sluggerInterface" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.BuNYlya" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluation" type="service_closure" id=".errored..service_locator.BuNYlya.App\Entity\Evaluation"/>
        <argument key="evaluationResultatRepository" type="service_closure" id="App\Repository\EvaluationResultatRepository"/>
      </argument>
    </service>
    <service id=".service_locator.3PqNSe_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluation" type="service_closure" id=".errored..service_locator.3PqNSe_.App\Entity\Evaluation"/>
        <argument key="evaluationRepository" type="service_closure" id="App\Repository\EvaluationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.eheopyZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluation" type="service_closure" id=".errored..service_locator.eheopyZ.App\Entity\Evaluation"/>
      </argument>
    </service>
    <service id=".service_locator.IHmhRtr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluation" type="service_closure" id=".errored..service_locator.IHmhRtr.App\Entity\Evaluation"/>
        <argument key="evaluationQuestionRepository" type="service_closure" id="App\Repository\EvaluationQuestionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.YSOGZde" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluationQuestion" type="service_closure" id=".errored..service_locator.YSOGZde.App\Entity\EvaluationQuestion"/>
      </argument>
    </service>
    <service id=".service_locator.4ylJ6pP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluationQuestion" type="service_closure" id=".errored..service_locator.4ylJ6pP.App\Entity\EvaluationQuestion"/>
        <argument key="evaluationQuestionRepository" type="service_closure" id="App\Repository\EvaluationQuestionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.E63WOfv" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="examRepository" type="service_closure" id="App\Repository\ExamRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator.Ak2dIxa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="exam" type="service_closure" id=".errored..service_locator.Ak2dIxa.App\Entity\Exam"/>
        <argument key="examRepository" type="service_closure" id="App\Repository\ExamRepository"/>
      </argument>
    </service>
    <service id=".service_locator.v8JuPnp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fAQRepository" type="service_closure" id="App\Repository\FAQRepository"/>
      </argument>
    </service>
    <service id=".service_locator.fD6gyoR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fAQ" type="service_closure" id=".errored..service_locator.fD6gyoR.App\Entity\FAQ"/>
      </argument>
    </service>
    <service id=".service_locator.cIzlWoj" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fAQ" type="service_closure" id=".errored..service_locator.cIzlWoj.App\Entity\FAQ"/>
        <argument key="fAQRepository" type="service_closure" id="App\Repository\FAQRepository"/>
      </argument>
    </service>
    <service id=".service_locator.PvewYLJ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filiereRepository" type="service_closure" id="App\Repository\FiliereRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Ep8i1lp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filiereRepository" type="service_closure" id="App\Repository\FiliereRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.nuHUyxg" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filiere" type="service_closure" id=".errored..service_locator.nuHUyxg.App\Entity\Filiere"/>
      </argument>
    </service>
    <service id=".service_locator.WQjXpxN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filiere" type="service_closure" id=".errored..service_locator.WQjXpxN.App\Entity\Filiere"/>
        <argument key="filiereRepository" type="service_closure" id="App\Repository\FiliereRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.a.FNPPn" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filiere" type="service_closure" id=".errored..service_locator.a.FNPPn.App\Entity\Filiere"/>
        <argument key="filiereRepository" type="service_closure" id="App\Repository\FiliereRepository"/>
      </argument>
    </service>
    <service id=".service_locator.SdimP0A" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formationRepository" type="service_closure" id="App\Repository\FormationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.c1Yi598" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formationRepository" type="service_closure" id="App\Repository\FormationRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.dy6wSj2" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formation" type="service_closure" id=".errored..service_locator.dy6wSj2.App\Entity\Formation"/>
      </argument>
    </service>
    <service id=".service_locator.cgbC6Or" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formation" type="service_closure" id=".errored..service_locator.cgbC6Or.App\Entity\Formation"/>
        <argument key="formationRepository" type="service_closure" id="App\Repository\FormationRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.GXW8MDB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formation" type="service_closure" id=".errored..service_locator.GXW8MDB.App\Entity\Formation"/>
        <argument key="formationRepository" type="service_closure" id="App\Repository\FormationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.EgHX0z5" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forumRepository" type="service_closure" id="App\Repository\ForumRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="sujetRepository" type="service_closure" id="App\Repository\SujetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.QGP4FZ_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forumRepository" type="service_closure" id="App\Repository\ForumRepository"/>
      </argument>
    </service>
    <service id=".service_locator.irtl5bF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forum" type="service_closure" id=".errored..service_locator.irtl5bF.App\Entity\Forum"/>
      </argument>
    </service>
    <service id=".service_locator.UVTlCsZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forum" type="service_closure" id=".errored..service_locator.UVTlCsZ.App\Entity\Forum"/>
        <argument key="forumRepository" type="service_closure" id="App\Repository\ForumRepository"/>
      </argument>
    </service>
    <service id=".service_locator.DopB_Wq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sujet" type="service_closure" id=".errored..service_locator.DopB_Wq.App\Entity\Sujet"/>
      </argument>
    </service>
    <service id=".service_locator.SAQXaRG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forumMessageRepository" type="service_closure" id="App\Repository\ForumMessageRepository"/>
      </argument>
    </service>
    <service id=".service_locator.w6TLtL4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forumMessage" type="service_closure" id=".errored..service_locator.w6TLtL4.App\Entity\ForumMessage"/>
      </argument>
    </service>
    <service id=".service_locator.6Fe3VWi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forumMessage" type="service_closure" id=".errored..service_locator.6Fe3VWi.App\Entity\ForumMessage"/>
        <argument key="forumMessageRepository" type="service_closure" id="App\Repository\ForumMessageRepository"/>
      </argument>
    </service>
    <service id=".service_locator.oy.IWoV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lessonRepository" type="service_closure" id="App\Repository\LessonRepository"/>
      </argument>
    </service>
    <service id=".service_locator.SlXkoU4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lessonRepository" type="service_closure" id="App\Repository\LessonRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.pxaUkp_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lesson" type="service_closure" id=".errored..service_locator.pxaUkp_.App\Entity\Lesson"/>
      </argument>
    </service>
    <service id=".service_locator.TMKevGr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lesson" type="service_closure" id=".errored..service_locator.TMKevGr.App\Entity\Lesson"/>
        <argument key="lessonRepository" type="service_closure" id="App\Repository\LessonRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.UqTc44d" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lesson" type="service_closure" id=".errored..service_locator.UqTc44d.App\Entity\Lesson"/>
        <argument key="lessonRepository" type="service_closure" id="App\Repository\LessonRepository"/>
      </argument>
    </service>
    <service id=".service_locator.6zRW84N" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mediaRepository" type="service_closure" id="App\Repository\MediaRepository"/>
      </argument>
    </service>
    <service id=".service_locator..PB0HcE" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="medium" type="service_closure" id=".errored..service_locator..PB0HcE.App\Entity\Media"/>
      </argument>
    </service>
    <service id=".service_locator.0yBt7Av" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mediaRepository" type="service_closure" id="App\Repository\MediaRepository"/>
        <argument key="medium" type="service_closure" id=".errored..service_locator.0yBt7Av.App\Entity\Media"/>
      </argument>
    </service>
    <service id=".service_locator.DYnLJqc" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="networkConfigRepository" type="service_closure" id="App\Repository\NetworkConfigRepository"/>
      </argument>
    </service>
    <service id=".service_locator.qvyKzbr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="networkConfig" type="service_closure" id=".errored..service_locator.qvyKzbr.App\Entity\NetworkConfig"/>
      </argument>
    </service>
    <service id=".service_locator.JBkrMmK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="networkConfig" type="service_closure" id=".errored..service_locator.JBkrMmK.App\Entity\NetworkConfig"/>
        <argument key="networkConfigRepository" type="service_closure" id="App\Repository\NetworkConfigRepository"/>
      </argument>
    </service>
    <service id=".service_locator.jEbB6rl" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="notificationTemplateRepository" type="service_closure" id="App\Repository\NotificationTemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.tSnRecj" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="notificationTemplate" type="service_closure" id=".errored..service_locator.tSnRecj.App\Entity\NotificationTemplate"/>
      </argument>
    </service>
    <service id=".service_locator.rlA3o86" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="notificationTemplate" type="service_closure" id=".errored..service_locator.rlA3o86.App\Entity\NotificationTemplate"/>
        <argument key="notificationTemplateRepository" type="service_closure" id="App\Repository\NotificationTemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.R8mYGRC" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paysRepository" type="service_closure" id="App\Repository\PaysRepository"/>
      </argument>
    </service>
    <service id=".service_locator.UmauJ7d" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paysRepository" type="service_closure" id="App\Repository\PaysRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.NB6SjKc" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pay" type="service_closure" id=".errored..service_locator.NB6SjKc.App\Entity\Pays"/>
      </argument>
    </service>
    <service id=".service_locator.vTR.b54" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pay" type="service_closure" id=".errored..service_locator.vTR.b54.App\Entity\Pays"/>
        <argument key="paysRepository" type="service_closure" id="App\Repository\PaysRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.fGeoUwi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pay" type="service_closure" id=".errored..service_locator.fGeoUwi.App\Entity\Pays"/>
        <argument key="paysRepository" type="service_closure" id="App\Repository\PaysRepository"/>
      </argument>
    </service>
    <service id=".service_locator.pWQSQEm" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="personneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
      </argument>
    </service>
    <service id=".service_locator.FVfhqrZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="personne" type="service_closure" id=".errored..service_locator.FVfhqrZ.App\Entity\Personne"/>
      </argument>
    </service>
    <service id=".service_locator.T9a0IK5" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="personne" type="service_closure" id=".errored..service_locator.T9a0IK5.App\Entity\Personne"/>
        <argument key="personneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
      </argument>
    </service>
    <service id=".service_locator.CdKKsmp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="propositionRepository" type="service_closure" id="App\Repository\PropositionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.wQsOg.V" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="proposition" type="service_closure" id=".errored..service_locator.wQsOg.V.App\Entity\Proposition"/>
      </argument>
    </service>
    <service id=".service_locator.xjchgF8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="proposition" type="service_closure" id=".errored..service_locator.xjchgF8.App\Entity\Proposition"/>
        <argument key="propositionRepository" type="service_closure" id="App\Repository\PropositionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Cj4aUBQ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
      </argument>
    </service>
    <service id=".service_locator.90uTyKf" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="quiz" type="service_closure" id=".errored..service_locator.90uTyKf.App\Entity\Quiz"/>
      </argument>
    </service>
    <service id=".service_locator.DveO1kU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="quiz" type="service_closure" id=".errored..service_locator.DveO1kU.App\Entity\Quiz"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
      </argument>
    </service>
    <service id=".service_locator.FPQZBrM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.M6mqXM8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="fileUploader" type="service_closure" id="App\Service\FileUploader"/>
        <argument key="personneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
        <argument key="userPasswordHasher" type="service_closure" id="security.user_password_hasher"/>
      </argument>
    </service>
    <service id=".service_locator.7CbTm.z" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.pEIyNmT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pr" type="service_closure" id="App\Repository\PersonneRepository"/>
      </argument>
    </service>
    <service id=".service_locator.yVvQ1jo" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="user" type="service_closure" id=".errored..service_locator.yVvQ1jo.App\Entity\User"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.aD9cOcx" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="notificationTemplateRepository" type="service_closure" id="App\Repository\NotificationTemplateRepository"/>
        <argument key="notificationTypeRepository" type="service_closure" id="App\Repository\NotificationTypeRepository"/>
        <argument key="siteSettingRepository" type="service_closure" id="App\Repository\SiteSettingRepository"/>
        <argument key="socialSettingRepository" type="service_closure" id="App\Repository\SocialSettingRepository"/>
      </argument>
    </service>
    <service id=".service_locator.WSodB8c" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sousSystemeRepository" type="service_closure" id="App\Repository\SousSystemeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.UsNqJ8P" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="slugger" type="service_closure" id="slugger"/>
        <argument key="sousSystemeRepository" type="service_closure" id="App\Repository\SousSystemeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.g4P3r52" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sousSysteme" type="service_closure" id=".errored..service_locator.g4P3r52.App\Entity\SousSysteme"/>
      </argument>
    </service>
    <service id=".service_locator.iqgcFjm" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="slugger" type="service_closure" id="slugger"/>
        <argument key="sousSysteme" type="service_closure" id=".errored..service_locator.iqgcFjm.App\Entity\SousSysteme"/>
        <argument key="sousSystemeRepository" type="service_closure" id="App\Repository\SousSystemeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.mI1r52c" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sousSysteme" type="service_closure" id=".errored..service_locator.mI1r52c.App\Entity\SousSysteme"/>
        <argument key="sousSystemeRepository" type="service_closure" id="App\Repository\SousSystemeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.kox0Cn." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="specialiteRepository" type="service_closure" id="App\Repository\SpecialiteRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Qgrzrfs" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="slugger" type="service_closure" id="slugger"/>
        <argument key="specialiteRepository" type="service_closure" id="App\Repository\SpecialiteRepository"/>
      </argument>
    </service>
    <service id=".service_locator.oDD2JWx" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="specialite" type="service_closure" id=".errored..service_locator.oDD2JWx.App\Entity\Specialite"/>
      </argument>
    </service>
    <service id=".service_locator.IZGLOcg" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="slugger" type="service_closure" id="slugger"/>
        <argument key="specialite" type="service_closure" id=".errored..service_locator.IZGLOcg.App\Entity\Specialite"/>
        <argument key="specialiteRepository" type="service_closure" id="App\Repository\SpecialiteRepository"/>
      </argument>
    </service>
    <service id=".service_locator.iO2IILU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="specialite" type="service_closure" id=".errored..service_locator.iO2IILU.App\Entity\Specialite"/>
        <argument key="specialiteRepository" type="service_closure" id="App\Repository\SpecialiteRepository"/>
      </argument>
    </service>
    <service id=".service_locator.K8s3Utn" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sujetRepository" type="service_closure" id="App\Repository\SujetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.LCKoqJU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sujet" type="service_closure" id=".errored..service_locator.LCKoqJU.App\Entity\Sujet"/>
        <argument key="sujetRepository" type="service_closure" id="App\Repository\SujetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Oqt1cOI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="termRepository" type="service_closure" id="App\Repository\TermRepository"/>
      </argument>
    </service>
    <service id=".service_locator.IZvv_3x" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="term" type="service_closure" id=".errored..service_locator.IZvv_3x.App\Entity\Term"/>
      </argument>
    </service>
    <service id=".service_locator.naOR5os" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="term" type="service_closure" id=".errored..service_locator.naOR5os.App\Entity\Term"/>
        <argument key="termRepository" type="service_closure" id="App\Repository\TermRepository"/>
      </argument>
    </service>
    <service id=".service_locator.pLCFjwu" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeEnseignementRepository" type="service_closure" id="App\Repository\TypeEnseignementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.I7tmGVt" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="slugger" type="service_closure" id="slugger"/>
        <argument key="typeEnseignementRepository" type="service_closure" id="App\Repository\TypeEnseignementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.slnpeg." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeEnseignement" type="service_closure" id=".errored..service_locator.slnpeg..App\Entity\TypeEnseignement"/>
      </argument>
    </service>
    <service id=".service_locator.u0am54A" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="slugger" type="service_closure" id="slugger"/>
        <argument key="typeEnseignement" type="service_closure" id=".errored..service_locator.u0am54A.App\Entity\TypeEnseignement"/>
        <argument key="typeEnseignementRepository" type="service_closure" id="App\Repository\TypeEnseignementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.19S4JOS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeEnseignement" type="service_closure" id=".errored..service_locator.19S4JOS.App\Entity\TypeEnseignement"/>
        <argument key="typeEnseignementRepository" type="service_closure" id="App\Repository\TypeEnseignementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.fSiFUO9" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.fSiFUO9.App\Entity\Cours"/>
      </argument>
    </service>
    <service id=".service_locator.5qYIAhN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lecture" type="service_closure" id=".errored..service_locator.5qYIAhN.App\Entity\Lecture"/>
      </argument>
    </service>
    <service id=".service_locator.mAe8GY." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleve" type="service_closure" id=".errored..service_locator.mAe8GY..App\Entity\Eleve"/>
        <argument key="lecture" type="service_closure" id=".errored..service_locator.mAe8GY..App\Entity\Lecture"/>
      </argument>
    </service>
    <service id=".service_locator.TGgVASX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chapitreRepository" type="service_closure" id="App\Repository\ChapitreRepository"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="lectureRepository" type="service_closure" id="App\Repository\LectureRepository"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
        <argument key="quizLostRepository" type="service_closure" id="App\Repository\QuizLostRepository"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
        <argument key="quizResultRepository" type="service_closure" id="App\Repository\QuizResultRepository"/>
      </argument>
    </service>
    <service id=".service_locator.iOqkD0R" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="course" type="service_closure" id=".errored..service_locator.iOqkD0R.App\Entity\Cours"/>
      </argument>
    </service>
    <service id=".service_locator.vVjJUaK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.vVjJUaK.App\Entity\Cours"/>
        <argument key="forumRepository" type="service_closure" id="App\Repository\ForumRepository"/>
        <argument key="membreRepository" type="service_closure" id="App\Repository\MembreRepository"/>
        <argument key="sujetRepository" type="service_closure" id="App\Repository\SujetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.qKbPMoI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.qKbPMoI.App\Entity\Cours"/>
        <argument key="membreRepository" type="service_closure" id="App\Repository\MembreRepository"/>
        <argument key="sujet" type="service_closure" id=".errored..service_locator.qKbPMoI.App\Entity\Sujet"/>
      </argument>
    </service>
    <service id=".service_locator.yYnTFV3" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="classeRepository" type="service_closure" id="App\Repository\ClasseRepository"/>
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="filiereRepository" type="service_closure" id="App\Repository\FiliereRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="specialiteRepository" type="service_closure" id="App\Repository\SpecialiteRepository"/>
      </argument>
    </service>
    <service id=".service_locator.O4Tpc7i" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.O4Tpc7i.App\Entity\Cours"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="reviewRepository" type="service_closure" id="App\Repository\ReviewRepository"/>
      </argument>
    </service>
    <service id=".service_locator.zJUkcD_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.zJUkcD_.App\Entity\Cours"/>
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="lectureRepository" type="service_closure" id="App\Repository\LectureRepository"/>
        <argument key="lessonRepository" type="service_closure" id="App\Repository\LessonRepository"/>
        <argument key="membreRepository" type="service_closure" id="App\Repository\MembreRepository"/>
        <argument key="reviewRepository" type="service_closure" id="App\Repository\ReviewRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Wb_9uAG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.Wb_9uAG.App\Entity\Cours"/>
        <argument key="membre" type="service_closure" id=".errored..service_locator.Wb_9uAG.App\Entity\Membre"/>
        <argument key="sujetRepository" type="service_closure" id="App\Repository\SujetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.8HlNKHi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forumMessageRepository" type="service_closure" id="App\Repository\ForumMessageRepository"/>
        <argument key="membre" type="service_closure" id=".errored..service_locator.8HlNKHi.App\Entity\Membre"/>
        <argument key="sujet" type="service_closure" id=".errored..service_locator.8HlNKHi.App\Entity\Sujet"/>
      </argument>
    </service>
    <service id=".service_locator.UlCPoMT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="em" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="forumMessage" type="service_closure" id=".errored..service_locator.UlCPoMT.App\Entity\ForumMessage"/>
        <argument key="forumMessageRepository" type="service_closure" id="App\Repository\ForumMessageRepository"/>
        <argument key="likeMessageForumRepository" type="service_closure" id="App\Repository\LikeMessageForumRepository"/>
        <argument key="membreRepository" type="service_closure" id="App\Repository\MembreRepository"/>
      </argument>
    </service>
    <service id=".service_locator.IBLWktG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forumMessageRepository" type="service_closure" id="App\Repository\ForumMessageRepository"/>
        <argument key="membreRepository" type="service_closure" id="App\Repository\MembreRepository"/>
      </argument>
    </service>
    <service id=".service_locator.BV48PYm" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="course" type="service_closure" id=".errored..service_locator.BV48PYm.App\Entity\Cours"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="entityManagerInterface" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="forumRepository" type="service_closure" id="App\Repository\ForumRepository"/>
        <argument key="lectureRepository" type="service_closure" id="App\Repository\LectureRepository"/>
        <argument key="membreRepository" type="service_closure" id="App\Repository\MembreRepository"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.En7B4vF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="lectureRepository" type="service_closure" id="App\Repository\LectureRepository"/>
        <argument key="lesson" type="service_closure" id=".errored..service_locator.En7B4vF.App\Entity\Lesson"/>
        <argument key="membreRepository" type="service_closure" id="App\Repository\MembreRepository"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.XBu8bEJ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lecture" type="service_closure" id=".errored..service_locator.XBu8bEJ.App\Entity\Lecture"/>
        <argument key="lectureRepository" type="service_closure" id="App\Repository\LectureRepository"/>
        <argument key="lessonRepository" type="service_closure" id="App\Repository\LessonRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Xw7Ms4B" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chapitreRepository" type="service_closure" id="App\Repository\ChapitreRepository"/>
        <argument key="cours" type="service_closure" id=".errored..service_locator.Xw7Ms4B.App\Entity\Cours"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="lectureRepository" type="service_closure" id="App\Repository\LectureRepository"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
        <argument key="quizLostRepository" type="service_closure" id="App\Repository\QuizLostRepository"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
        <argument key="quizResultRepository" type="service_closure" id="App\Repository\QuizResultRepository"/>
      </argument>
    </service>
    <service id=".service_locator.VDXxjXd" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="evaluation" type="service_closure" id=".errored..service_locator.VDXxjXd.App\Entity\Evaluation"/>
      </argument>
    </service>
    <service id=".service_locator.S84XzAK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="eqr" type="service_closure" id="App\Repository\EvaluationQuestionRepository"/>
        <argument key="evaluation" type="service_closure" id=".errored..service_locator.S84XzAK.App\Entity\Evaluation"/>
        <argument key="evaluationResultatRepository" type="service_closure" id="App\Repository\EvaluationResultatRepository"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
      </argument>
    </service>
    <service id=".service_locator.OgsBuKp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="eqr" type="service_closure" id="App\Repository\EvaluationQuestionRepository"/>
        <argument key="evaluation" type="service_closure" id=".errored..service_locator.OgsBuKp.App\Entity\Evaluation"/>
        <argument key="evaluationResultatRepository" type="service_closure" id="App\Repository\EvaluationResultatRepository"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
      </argument>
    </service>
    <service id=".service_locator.XknFu0E" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="classeRepository" type="service_closure" id="App\Repository\ClasseRepository"/>
        <argument key="examRepository" type="service_closure" id="App\Repository\ExamRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="skillLevelRepository" type="service_closure" id="App\Repository\SkillLevelRepository"/>
      </argument>
    </service>
    <service id=".service_locator.22DT_tw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="exam" type="service_closure" id=".errored..service_locator.22DT_tw.App\Entity\Exam"/>
        <argument key="personneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
      </argument>
    </service>
    <service id=".service_locator.HOWxqzI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="FAQRepository" type="service_closure" id="App\Repository\FAQRepository"/>
        <argument key="paginator" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator._QSmipa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="paginator" type="service_closure" id="knp_paginator"/>
        <argument key="sujetRepository" type="service_closure" id="App\Repository\SujetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.cGlJyZx" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="course" type="service_closure" id=".errored..service_locator.cGlJyZx.App\Entity\Cours"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="em" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="networkConfigRepository" type="service_closure" id="App\Repository\NetworkConfigRepository"/>
        <argument key="paymentMethodRepository" type="service_closure" id="App\Repository\PaymentMethodRepository"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.H_EpB5m" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnement" type="service_closure" id=".errored..service_locator.H_EpB5m.App\Entity\Abonnement"/>
        <argument key="abonnementItemRepository" type="service_closure" id="App\Repository\AbonnementItemRepository"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="paymentMethodRepository" type="service_closure" id="App\Repository\PaymentMethodRepository"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.DFyL8OH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
      </argument>
    </service>
    <service id=".service_locator.H779gTJ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="reviewRepository" type="service_closure" id="App\Repository\ReviewRepository"/>
      </argument>
    </service>
    <service id=".service_locator.uVvF4gL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailer" type="service_closure" id="mailer.mailer"/>
      </argument>
    </service>
    <service id=".service_locator.xYaqVzK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="formationRepository" type="service_closure" id="App\Repository\FormationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.7_6EDB0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="abonnementItemRepository" type="service_closure" id="App\Repository\AbonnementItemRepository"/>
        <argument key="abonnementRepository" type="service_closure" id="App\Repository\AbonnementRepository"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
      </argument>
    </service>
    <service id=".service_locator.yzF.EVX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
      </argument>
    </service>
    <service id=".service_locator.0G0dfh9" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="cr" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="em" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="er" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="fileUploader" type="service_closure" id="App\Service\FileUploader"/>
        <argument key="paymentMethodRepository" type="service_closure" id="App\Repository\PaymentMethodRepository"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
        <argument key="sluggerInterface" type="service_closure" id="slugger"/>
      </argument>
    </service>
    <service id=".service_locator.F86iHBA" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailerInterface" type="service_closure" id="mailer.mailer"/>
      </argument>
    </service>
    <service id=".service_locator.Qip0gkl" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="forumMessageRepository" type="service_closure" id="App\Repository\ForumMessageRepository"/>
        <argument key="sujet" type="service_closure" id=".errored..service_locator.Qip0gkl.App\Entity\Sujet"/>
        <argument key="sujetRepository" type="service_closure" id="App\Repository\SujetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.AwxTtz6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator._V0RNof" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="fileUploader" type="service_closure" id="App\Service\FileUploader"/>
        <argument key="forumRepository" type="service_closure" id="App\Repository\ForumRepository"/>
        <argument key="lessonRepository" type="service_closure" id="App\Repository\LessonRepository"/>
        <argument key="notificationTypeRepository" type="service_closure" id="App\Repository\NotificationTypeRepository"/>
        <argument key="slugger" type="service_closure" id="slugger"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.RBosDZz" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chapitre" type="service_closure" id=".errored..service_locator.RBosDZz.App\Entity\Chapitre"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
      </argument>
    </service>
    <service id=".service_locator.0I2c_WY" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.0I2c_WY.App\Entity\Cours"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
      </argument>
    </service>
    <service id=".service_locator.gBs6jx2" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.gBs6jx2.App\Entity\Cours"/>
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
      </argument>
    </service>
    <service id=".service_locator.w4GY4t1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="quiz" type="service_closure" id=".errored..service_locator.w4GY4t1.App\Entity\Quiz"/>
        <argument key="quizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
      </argument>
    </service>
    <service id=".service_locator.fzX53bK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.fzX53bK.App\Entity\Cours"/>
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
      </argument>
    </service>
    <service id=".service_locator.6atRNmG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="examRepository" type="service_closure" id="App\Repository\ExamRepository"/>
        <argument key="fileUploader" type="service_closure" id="App\Service\FileUploader"/>
      </argument>
    </service>
    <service id=".service_locator.PGJmDUF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
      </argument>
    </service>
    <service id=".service_locator.CsMkqUa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
      </argument>
    </service>
    <service id=".service_locator.JpTvOfs" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="lesson" type="service_closure" id=".errored..service_locator.JpTvOfs.App\Entity\Lesson"/>
      </argument>
    </service>
    <service id=".service_locator.WFG9hC." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="networkConfigRepository" type="service_closure" id="App\Repository\NetworkConfigRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator.XYRnh8F" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="networkConfigRepository" type="service_closure" id="App\Repository\NetworkConfigRepository"/>
        <argument key="retraitRepository" type="service_closure" id="App\Repository\RetraitRepository"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.UP3MCwl" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="networkConfigRepository" type="service_closure" id="App\Repository\NetworkConfigRepository"/>
      </argument>
    </service>
    <service id=".service_locator.rvd2xOp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.8hEBzro" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="enseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="reviewRepository" type="service_closure" id="App\Repository\ReviewRepository"/>
      </argument>
    </service>
    <service id=".service_locator.HMsaM1z" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="notificationRepository" type="service_closure" id="App\Repository\NotificationRepository"/>
        <argument key="review" type="service_closure" id=".errored..service_locator.HMsaM1z.App\Entity\Review"/>
      </argument>
    </service>
    <service id=".service_locator.Exgj6x3" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
        <argument key="retraitRepository" type="service_closure" id="App\Repository\RetraitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.neYTR3i" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="personneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
      </argument>
    </service>
    <service id=".service_locator.e2G13d0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="fileUploader" type="service_closure" id="App\Service\FileUploader"/>
        <argument key="personneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Sm3vMyh" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="personneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.KgbducX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="fileUploader" type="service_closure" id="App\Service\FileUploader"/>
        <argument key="personneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
        <argument key="userPasswordHasher" type="service_closure" id="security.user_password_hasher"/>
      </argument>
    </service>
    <service id=".service_locator.G.r2VMp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="networkConfigRepository" type="service_closure" id="App\Repository\NetworkConfigRepository"/>
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.EE0.cm9" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailer" type="service_closure" id="mailer.mailer"/>
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.Z9ydiC1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="passwordHasher" type="service_closure" id="security.user_password_hasher"/>
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.rSTd.nA" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationUtils" type="service_closure" id="security.authentication_utils"/>
      </argument>
    </service>
    <service id=".service_locator.qpnski8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="coursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
      </argument>
    </service>
    <service id=".service_locator.80wW8wg" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cours" type="service_closure" id=".errored..service_locator.80wW8wg.App\Entity\Cours"/>
        <argument key="eleve" type="service_closure" id=".errored..service_locator.80wW8wg.App\Entity\Eleve"/>
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
      </argument>
    </service>
    <service id=".service_locator.edBGD8s" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="paginatorInterface" type="service_closure" id="knp_paginator"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.qmk8Bm6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="paymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.n.vWwvH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="httpKernel" type="service_closure" id="http_kernel"/>
      </argument>
    </service>
    <service id=".service_locator.knvMuga" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\Admin\AbonnementController::delete" type="service_closure" id=".service_locator.eqZsSWM"/>
        <argument key="App\Controller\Admin\AbonnementController::edit" type="service_closure" id=".service_locator.eqZsSWM"/>
        <argument key="App\Controller\Admin\AbonnementController::index" type="service_closure" id=".service_locator.n8UGmG4"/>
        <argument key="App\Controller\Admin\AbonnementController::new" type="service_closure" id=".service_locator.lz_g3dg"/>
        <argument key="App\Controller\Admin\AbonnementController::show" type="service_closure" id=".service_locator.KPOw2Hp"/>
        <argument key="App\Controller\Admin\AbonnementItemController::delete" type="service_closure" id=".service_locator.zNI9i6M"/>
        <argument key="App\Controller\Admin\AbonnementItemController::edit" type="service_closure" id=".service_locator.zNI9i6M"/>
        <argument key="App\Controller\Admin\AbonnementItemController::index" type="service_closure" id=".service_locator._mqZjct"/>
        <argument key="App\Controller\Admin\AbonnementItemController::new" type="service_closure" id=".service_locator._mqZjct"/>
        <argument key="App\Controller\Admin\AbonnementItemController::show" type="service_closure" id=".service_locator.JYs6EHz"/>
        <argument key="App\Controller\Admin\CategorieController::delete" type="service_closure" id=".service_locator.iPTmcBs"/>
        <argument key="App\Controller\Admin\CategorieController::edit" type="service_closure" id=".service_locator.HcAqD_t"/>
        <argument key="App\Controller\Admin\CategorieController::index" type="service_closure" id=".service_locator.VIrGozw"/>
        <argument key="App\Controller\Admin\CategorieController::new" type="service_closure" id=".service_locator.g.onyyT"/>
        <argument key="App\Controller\Admin\CategorieController::show" type="service_closure" id=".service_locator.j7wOkYK"/>
        <argument key="App\Controller\Admin\ChapitreController::delete" type="service_closure" id=".service_locator.aaST1nn"/>
        <argument key="App\Controller\Admin\ChapitreController::edit" type="service_closure" id=".service_locator.LHBTlSB"/>
        <argument key="App\Controller\Admin\ChapitreController::index" type="service_closure" id=".service_locator.zc0mk_0"/>
        <argument key="App\Controller\Admin\ChapitreController::new" type="service_closure" id=".service_locator.eaTrZQM"/>
        <argument key="App\Controller\Admin\ChapitreController::show" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Admin\ClasseController::delete" type="service_closure" id=".service_locator.GdA86g7"/>
        <argument key="App\Controller\Admin\ClasseController::edit" type="service_closure" id=".service_locator.e8EBBee"/>
        <argument key="App\Controller\Admin\ClasseController::index" type="service_closure" id=".service_locator.RblMI1d"/>
        <argument key="App\Controller\Admin\ClasseController::new" type="service_closure" id=".service_locator.dKHVPkC"/>
        <argument key="App\Controller\Admin\ClasseController::show" type="service_closure" id=".service_locator..HWWlJE"/>
        <argument key="App\Controller\Admin\CoursController::approveCourse" type="service_closure" id=".service_locator.VFRfSyw"/>
        <argument key="App\Controller\Admin\CoursController::delete" type="service_closure" id=".service_locator.1ZVS9Vu"/>
        <argument key="App\Controller\Admin\CoursController::deleteReview" type="service_closure" id=".service_locator.Xl2sCQI"/>
        <argument key="App\Controller\Admin\CoursController::edit" type="service_closure" id=".service_locator.tGxlRXC"/>
        <argument key="App\Controller\Admin\CoursController::index" type="service_closure" id=".service_locator.Cb0FaSe"/>
        <argument key="App\Controller\Admin\CoursController::new" type="service_closure" id=".service_locator.Yz8Vt.k"/>
        <argument key="App\Controller\Admin\CoursController::rejectedCourse" type="service_closure" id=".service_locator.RgJF.d4"/>
        <argument key="App\Controller\Admin\CoursController::show" type="service_closure" id=".service_locator.gMvq5pN"/>
        <argument key="App\Controller\Admin\DashboardController::dashboardEarningsData" type="service_closure" id=".service_locator.DcCEeyO"/>
        <argument key="App\Controller\Admin\DashboardController::index" type="service_closure" id=".service_locator.c22ImwG"/>
        <argument key="App\Controller\Admin\DashboardController::traficSource" type="service_closure" id=".service_locator.7zyAtZq"/>
        <argument key="App\Controller\Admin\EleveController::block" type="service_closure" id=".service_locator.r0BjQku"/>
        <argument key="App\Controller\Admin\EleveController::delete" type="service_closure" id=".service_locator.r0BjQku"/>
        <argument key="App\Controller\Admin\EleveController::edit" type="service_closure" id=".service_locator.r0BjQku"/>
        <argument key="App\Controller\Admin\EleveController::index" type="service_closure" id=".service_locator.v_kzbYK"/>
        <argument key="App\Controller\Admin\EleveController::new" type="service_closure" id=".service_locator.ZUciSQZ"/>
        <argument key="App\Controller\Admin\EleveController::show" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Admin\EnseignantController::accepted" type="service_closure" id=".service_locator.E5H.BTi"/>
        <argument key="App\Controller\Admin\EnseignantController::delete" type="service_closure" id=".service_locator.egXUG0V"/>
        <argument key="App\Controller\Admin\EnseignantController::edit" type="service_closure" id=".service_locator.egXUG0V"/>
        <argument key="App\Controller\Admin\EnseignantController::index" type="service_closure" id=".service_locator..1fzwrY"/>
        <argument key="App\Controller\Admin\EnseignantController::new" type="service_closure" id=".service_locator.6JvQVQH"/>
        <argument key="App\Controller\Admin\EnseignantController::rejected" type="service_closure" id=".service_locator.NbL4vpV"/>
        <argument key="App\Controller\Admin\EnseignantController::request" type="service_closure" id=".service_locator..1fzwrY"/>
        <argument key="App\Controller\Admin\EnseignantController::show" type="service_closure" id=".service_locator.Q2J1hJr"/>
        <argument key="App\Controller\Admin\EtablissementController::delete" type="service_closure" id=".service_locator.ajDOBVr"/>
        <argument key="App\Controller\Admin\EtablissementController::edit" type="service_closure" id=".service_locator.ajDOBVr"/>
        <argument key="App\Controller\Admin\EtablissementController::index" type="service_closure" id=".service_locator..dGzn4B"/>
        <argument key="App\Controller\Admin\EtablissementController::new" type="service_closure" id=".service_locator..dGzn4B"/>
        <argument key="App\Controller\Admin\EtablissementController::show" type="service_closure" id=".service_locator.SvV89WQ"/>
        <argument key="App\Controller\Admin\EvaluationController::delete" type="service_closure" id=".service_locator.3PqNSe_"/>
        <argument key="App\Controller\Admin\EvaluationController::edit" type="service_closure" id=".service_locator.3PqNSe_"/>
        <argument key="App\Controller\Admin\EvaluationController::index" type="service_closure" id=".service_locator.FjsgjXR"/>
        <argument key="App\Controller\Admin\EvaluationController::new" type="service_closure" id=".service_locator.DBp52_G"/>
        <argument key="App\Controller\Admin\EvaluationController::show" type="service_closure" id=".service_locator.BuNYlya"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController::delete" type="service_closure" id=".service_locator.4ylJ6pP"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController::edit" type="service_closure" id=".service_locator.4ylJ6pP"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController::index" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController::new" type="service_closure" id=".service_locator.IHmhRtr"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController::show" type="service_closure" id=".service_locator.YSOGZde"/>
        <argument key="App\Controller\Admin\ExamController::approved" type="service_closure" id=".service_locator.Ak2dIxa"/>
        <argument key="App\Controller\Admin\ExamController::index" type="service_closure" id=".service_locator.E63WOfv"/>
        <argument key="App\Controller\Admin\ExamController::remove" type="service_closure" id=".service_locator.Ak2dIxa"/>
        <argument key="App\Controller\Admin\FAQController::delete" type="service_closure" id=".service_locator.cIzlWoj"/>
        <argument key="App\Controller\Admin\FAQController::edit" type="service_closure" id=".service_locator.cIzlWoj"/>
        <argument key="App\Controller\Admin\FAQController::index" type="service_closure" id=".service_locator.v8JuPnp"/>
        <argument key="App\Controller\Admin\FAQController::new" type="service_closure" id=".service_locator.v8JuPnp"/>
        <argument key="App\Controller\Admin\FAQController::show" type="service_closure" id=".service_locator.fD6gyoR"/>
        <argument key="App\Controller\Admin\FiliereController::delete" type="service_closure" id=".service_locator.a.FNPPn"/>
        <argument key="App\Controller\Admin\FiliereController::edit" type="service_closure" id=".service_locator.WQjXpxN"/>
        <argument key="App\Controller\Admin\FiliereController::index" type="service_closure" id=".service_locator.PvewYLJ"/>
        <argument key="App\Controller\Admin\FiliereController::new" type="service_closure" id=".service_locator.Ep8i1lp"/>
        <argument key="App\Controller\Admin\FiliereController::show" type="service_closure" id=".service_locator.nuHUyxg"/>
        <argument key="App\Controller\Admin\FormationController::delete" type="service_closure" id=".service_locator.GXW8MDB"/>
        <argument key="App\Controller\Admin\FormationController::edit" type="service_closure" id=".service_locator.cgbC6Or"/>
        <argument key="App\Controller\Admin\FormationController::index" type="service_closure" id=".service_locator.SdimP0A"/>
        <argument key="App\Controller\Admin\FormationController::new" type="service_closure" id=".service_locator.c1Yi598"/>
        <argument key="App\Controller\Admin\FormationController::show" type="service_closure" id=".service_locator.dy6wSj2"/>
        <argument key="App\Controller\Admin\ForumController::delete" type="service_closure" id=".service_locator.UVTlCsZ"/>
        <argument key="App\Controller\Admin\ForumController::edit" type="service_closure" id=".service_locator.UVTlCsZ"/>
        <argument key="App\Controller\Admin\ForumController::index" type="service_closure" id=".service_locator.EgHX0z5"/>
        <argument key="App\Controller\Admin\ForumController::new" type="service_closure" id=".service_locator.QGP4FZ_"/>
        <argument key="App\Controller\Admin\ForumController::show" type="service_closure" id=".service_locator.irtl5bF"/>
        <argument key="App\Controller\Admin\ForumMessageController::delete" type="service_closure" id=".service_locator.6Fe3VWi"/>
        <argument key="App\Controller\Admin\ForumMessageController::edit" type="service_closure" id=".service_locator.6Fe3VWi"/>
        <argument key="App\Controller\Admin\ForumMessageController::index" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Admin\ForumMessageController::new" type="service_closure" id=".service_locator.SAQXaRG"/>
        <argument key="App\Controller\Admin\ForumMessageController::show" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Admin\LessonController::delete" type="service_closure" id=".service_locator.UqTc44d"/>
        <argument key="App\Controller\Admin\LessonController::edit" type="service_closure" id=".service_locator.TMKevGr"/>
        <argument key="App\Controller\Admin\LessonController::index" type="service_closure" id=".service_locator.oy.IWoV"/>
        <argument key="App\Controller\Admin\LessonController::new" type="service_closure" id=".service_locator.SlXkoU4"/>
        <argument key="App\Controller\Admin\LessonController::show" type="service_closure" id=".service_locator.pxaUkp_"/>
        <argument key="App\Controller\Admin\MediaController::delete" type="service_closure" id=".service_locator.0yBt7Av"/>
        <argument key="App\Controller\Admin\MediaController::edit" type="service_closure" id=".service_locator.0yBt7Av"/>
        <argument key="App\Controller\Admin\MediaController::index" type="service_closure" id=".service_locator.6zRW84N"/>
        <argument key="App\Controller\Admin\MediaController::new" type="service_closure" id=".service_locator.6zRW84N"/>
        <argument key="App\Controller\Admin\MediaController::show" type="service_closure" id=".service_locator..PB0HcE"/>
        <argument key="App\Controller\Admin\NetworkConfigController::delete" type="service_closure" id=".service_locator.JBkrMmK"/>
        <argument key="App\Controller\Admin\NetworkConfigController::edit" type="service_closure" id=".service_locator.JBkrMmK"/>
        <argument key="App\Controller\Admin\NetworkConfigController::index" type="service_closure" id=".service_locator.DYnLJqc"/>
        <argument key="App\Controller\Admin\NetworkConfigController::new" type="service_closure" id=".service_locator.DYnLJqc"/>
        <argument key="App\Controller\Admin\NetworkConfigController::show" type="service_closure" id=".service_locator.qvyKzbr"/>
        <argument key="App\Controller\Admin\NotificationTemplateController::delete" type="service_closure" id=".service_locator.rlA3o86"/>
        <argument key="App\Controller\Admin\NotificationTemplateController::edit" type="service_closure" id=".service_locator.rlA3o86"/>
        <argument key="App\Controller\Admin\NotificationTemplateController::index" type="service_closure" id=".service_locator.jEbB6rl"/>
        <argument key="App\Controller\Admin\NotificationTemplateController::new" type="service_closure" id=".service_locator.jEbB6rl"/>
        <argument key="App\Controller\Admin\NotificationTemplateController::show" type="service_closure" id=".service_locator.tSnRecj"/>
        <argument key="App\Controller\Admin\PaysController::delete" type="service_closure" id=".service_locator.fGeoUwi"/>
        <argument key="App\Controller\Admin\PaysController::edit" type="service_closure" id=".service_locator.vTR.b54"/>
        <argument key="App\Controller\Admin\PaysController::index" type="service_closure" id=".service_locator.R8mYGRC"/>
        <argument key="App\Controller\Admin\PaysController::new" type="service_closure" id=".service_locator.UmauJ7d"/>
        <argument key="App\Controller\Admin\PaysController::show" type="service_closure" id=".service_locator.NB6SjKc"/>
        <argument key="App\Controller\Admin\PersonneController::delete" type="service_closure" id=".service_locator.T9a0IK5"/>
        <argument key="App\Controller\Admin\PersonneController::edit" type="service_closure" id=".service_locator.T9a0IK5"/>
        <argument key="App\Controller\Admin\PersonneController::index" type="service_closure" id=".service_locator.pWQSQEm"/>
        <argument key="App\Controller\Admin\PersonneController::new" type="service_closure" id=".service_locator.pWQSQEm"/>
        <argument key="App\Controller\Admin\PersonneController::show" type="service_closure" id=".service_locator.FVfhqrZ"/>
        <argument key="App\Controller\Admin\PropositionController::delete" type="service_closure" id=".service_locator.xjchgF8"/>
        <argument key="App\Controller\Admin\PropositionController::edit" type="service_closure" id=".service_locator.xjchgF8"/>
        <argument key="App\Controller\Admin\PropositionController::index" type="service_closure" id=".service_locator.CdKKsmp"/>
        <argument key="App\Controller\Admin\PropositionController::new" type="service_closure" id=".service_locator.CdKKsmp"/>
        <argument key="App\Controller\Admin\PropositionController::show" type="service_closure" id=".service_locator.wQsOg.V"/>
        <argument key="App\Controller\Admin\QuizController::delete" type="service_closure" id=".service_locator.DveO1kU"/>
        <argument key="App\Controller\Admin\QuizController::edit" type="service_closure" id=".service_locator.DveO1kU"/>
        <argument key="App\Controller\Admin\QuizController::index" type="service_closure" id=".service_locator.Cj4aUBQ"/>
        <argument key="App\Controller\Admin\QuizController::new" type="service_closure" id=".service_locator.Cj4aUBQ"/>
        <argument key="App\Controller\Admin\QuizController::show" type="service_closure" id=".service_locator.90uTyKf"/>
        <argument key="App\Controller\Admin\RegistrationController::activer" type="service_closure" id=".service_locator.yVvQ1jo"/>
        <argument key="App\Controller\Admin\RegistrationController::block" type="service_closure" id=".service_locator.yVvQ1jo"/>
        <argument key="App\Controller\Admin\RegistrationController::delete" type="service_closure" id=".service_locator.yVvQ1jo"/>
        <argument key="App\Controller\Admin\RegistrationController::generateInvitationCode" type="service_closure" id=".service_locator.pEIyNmT"/>
        <argument key="App\Controller\Admin\RegistrationController::index" type="service_closure" id=".service_locator.FPQZBrM"/>
        <argument key="App\Controller\Admin\RegistrationController::register" type="service_closure" id=".service_locator.M6mqXM8"/>
        <argument key="App\Controller\Admin\RegistrationController::verifyUserEmail" type="service_closure" id=".service_locator.7CbTm.z"/>
        <argument key="App\Controller\Admin\SettingController::index" type="service_closure" id=".service_locator.aD9cOcx"/>
        <argument key="App\Controller\Admin\SousSystemeController::delete" type="service_closure" id=".service_locator.mI1r52c"/>
        <argument key="App\Controller\Admin\SousSystemeController::edit" type="service_closure" id=".service_locator.iqgcFjm"/>
        <argument key="App\Controller\Admin\SousSystemeController::index" type="service_closure" id=".service_locator.WSodB8c"/>
        <argument key="App\Controller\Admin\SousSystemeController::new" type="service_closure" id=".service_locator.UsNqJ8P"/>
        <argument key="App\Controller\Admin\SousSystemeController::show" type="service_closure" id=".service_locator.g4P3r52"/>
        <argument key="App\Controller\Admin\SpecialiteController::delete" type="service_closure" id=".service_locator.iO2IILU"/>
        <argument key="App\Controller\Admin\SpecialiteController::edit" type="service_closure" id=".service_locator.IZGLOcg"/>
        <argument key="App\Controller\Admin\SpecialiteController::index" type="service_closure" id=".service_locator.kox0Cn."/>
        <argument key="App\Controller\Admin\SpecialiteController::new" type="service_closure" id=".service_locator.Qgrzrfs"/>
        <argument key="App\Controller\Admin\SpecialiteController::show" type="service_closure" id=".service_locator.oDD2JWx"/>
        <argument key="App\Controller\Admin\SujetController::delete" type="service_closure" id=".service_locator.LCKoqJU"/>
        <argument key="App\Controller\Admin\SujetController::edit" type="service_closure" id=".service_locator.LCKoqJU"/>
        <argument key="App\Controller\Admin\SujetController::index" type="service_closure" id=".service_locator.K8s3Utn"/>
        <argument key="App\Controller\Admin\SujetController::new" type="service_closure" id=".service_locator.K8s3Utn"/>
        <argument key="App\Controller\Admin\SujetController::show" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Admin\TermController::delete" type="service_closure" id=".service_locator.naOR5os"/>
        <argument key="App\Controller\Admin\TermController::edit" type="service_closure" id=".service_locator.naOR5os"/>
        <argument key="App\Controller\Admin\TermController::index" type="service_closure" id=".service_locator.Oqt1cOI"/>
        <argument key="App\Controller\Admin\TermController::new" type="service_closure" id=".service_locator.Oqt1cOI"/>
        <argument key="App\Controller\Admin\TermController::show" type="service_closure" id=".service_locator.IZvv_3x"/>
        <argument key="App\Controller\Admin\TypeEnseignementController::delete" type="service_closure" id=".service_locator.19S4JOS"/>
        <argument key="App\Controller\Admin\TypeEnseignementController::edit" type="service_closure" id=".service_locator.u0am54A"/>
        <argument key="App\Controller\Admin\TypeEnseignementController::index" type="service_closure" id=".service_locator.pLCFjwu"/>
        <argument key="App\Controller\Admin\TypeEnseignementController::new" type="service_closure" id=".service_locator.I7tmGVt"/>
        <argument key="App\Controller\Admin\TypeEnseignementController::show" type="service_closure" id=".service_locator.slnpeg."/>
        <argument key="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController::__invoke" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList::__invoke" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\DetailsController::__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage::__invoke" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\CourseForum::__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\ForumSubjects::__invoke" type="service_closure" id=".service_locator.irtl5bF"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController::__invoke" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\NewForumMessage::__invoke" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\PostSubjectController::__invoke" type="service_closure" id=".service_locator.irtl5bF"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\SubjectMessages::__invoke" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\SujetResoluController::__invoke" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Lesson\FinishedController::__invoke" type="service_closure" id=".service_locator.5qYIAhN"/>
        <argument key="App\Controller\Api\Controller\Course\Lesson\FinishedController::lectureIsFinished" type="service_closure" id=".service_locator.mAe8GY."/>
        <argument key="App\Controller\Api\Controller\Course\Lesson\FinishedLectures::__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Course\Quiz\PostController::__invoke" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\Quiz\PostController::correction" type="service_closure" id=".service_locator.TGgVASX"/>
        <argument key="App\Controller\Api\Controller\Course\Review\CourseReviewController::__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Review\PostReviewController::__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\ShowQuizzesController::__invoke" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Course\StartCourseController::__invoke" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Course\StudentCourseController::__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Course\StudentLectureController::__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\EvaluationsEleve::__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\InscriptionController::__invoke" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\ListController::__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\PostCorrectionController::__invoke" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\QuestionnaireController::__invoke" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\ResultatController::__invoke" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Faq\FaqCourseController::__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Payment\PayerAbonnementController::__invoke" type="service_closure" id=".service_locator.KPOw2Hp"/>
        <argument key="App\Controller\Api\Controller\Payment\PayerCoursController::__invoke" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Payment\StudentPaymentController::__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\User\ChangeAvatarController::__invoke" type="service_closure" id=".service_locator.FVfhqrZ"/>
        <argument key="App\Controller\Api\Controller\User\NetworkController::__invoke" type="service_closure" id=".service_locator.FVfhqrZ"/>
        <argument key="App\Controller\FrontController::becomeTeacher" type="service_closure" id=".service_locator.uVvF4gL"/>
        <argument key="App\Controller\FrontController::contact" type="service_closure" id=".service_locator.uVvF4gL"/>
        <argument key="App\Controller\FrontController::index" type="service_closure" id=".service_locator.H779gTJ"/>
        <argument key="App\Controller\FrontController::plan" type="service_closure" id=".service_locator.7_6EDB0"/>
        <argument key="App\Controller\FrontController::showHeaderCategories" type="service_closure" id=".service_locator.DFyL8OH"/>
        <argument key="App\Controller\FrontController::showHeaderCourses" type="service_closure" id=".service_locator.xYaqVzK"/>
        <argument key="App\Controller\Front\CourseForumController::index" type="service_closure" id=".service_locator.vVjJUaK"/>
        <argument key="App\Controller\Front\CourseForumController::subjectMessage" type="service_closure" id=".service_locator.qKbPMoI"/>
        <argument key="App\Controller\Front\CoursesController::addNewforumMessage" type="service_closure" id=".service_locator.8HlNKHi"/>
        <argument key="App\Controller\Front\CoursesController::courseDetails" type="service_closure" id=".service_locator.zJUkcD_"/>
        <argument key="App\Controller\Front\CoursesController::index" type="service_closure" id=".service_locator.yYnTFV3"/>
        <argument key="App\Controller\Front\CoursesController::lectureIsFinished" type="service_closure" id=".service_locator.XBu8bEJ"/>
        <argument key="App\Controller\Front\CoursesController::likeForumMessage" type="service_closure" id=".service_locator.UlCPoMT"/>
        <argument key="App\Controller\Front\CoursesController::newCourseReview" type="service_closure" id=".service_locator.O4Tpc7i"/>
        <argument key="App\Controller\Front\CoursesController::newForumSubjet" type="service_closure" id=".service_locator.Wb_9uAG"/>
        <argument key="App\Controller\Front\CoursesController::readLesson" type="service_closure" id=".service_locator.En7B4vF"/>
        <argument key="App\Controller\Front\CoursesController::replyForumMessage" type="service_closure" id=".service_locator.IBLWktG"/>
        <argument key="App\Controller\Front\CoursesController::showQuizzes" type="service_closure" id=".service_locator.Xw7Ms4B"/>
        <argument key="App\Controller\Front\CoursesController::startCourse" type="service_closure" id=".service_locator.BV48PYm"/>
        <argument key="App\Controller\Front\CoursesController::sujetResolu" type="service_closure" id=".service_locator.6Fe3VWi"/>
        <argument key="App\Controller\Front\EvaluationController::afficherResultats" type="service_closure" id=".service_locator.OgsBuKp"/>
        <argument key="App\Controller\Front\EvaluationController::composer" type="service_closure" id=".service_locator.S84XzAK"/>
        <argument key="App\Controller\Front\EvaluationController::hideAnnonce" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Front\EvaluationController::sinscrire" type="service_closure" id=".service_locator.VDXxjXd"/>
        <argument key="App\Controller\Front\ExamController::index" type="service_closure" id=".service_locator.XknFu0E"/>
        <argument key="App\Controller\Front\ExamController::show" type="service_closure" id=".service_locator.22DT_tw"/>
        <argument key="App\Controller\Front\FaqController::index" type="service_closure" id=".service_locator.HOWxqzI"/>
        <argument key="App\Controller\Front\ForumController::index" type="service_closure" id=".service_locator._QSmipa"/>
        <argument key="App\Controller\Front\PaymentController::devenirPremiumOrByCourse" type="service_closure" id=".service_locator.cGlJyZx"/>
        <argument key="App\Controller\Front\PaymentController::subscribePlan" type="service_closure" id=".service_locator.H_EpB5m"/>
        <argument key="App\Controller\Front\coursesCategoryController::index" type="service_closure" id=".service_locator.DFyL8OH"/>
        <argument key="App\Controller\HomeController::courses" type="service_closure" id=".service_locator.0G0dfh9"/>
        <argument key="App\Controller\HomeController::index" type="service_closure" id=".service_locator.yzF.EVX"/>
        <argument key="App\Controller\HomeController::sendMail" type="service_closure" id=".service_locator.F86iHBA"/>
        <argument key="App\Controller\Instructor\CourseForumController::deleteSubjet" type="service_closure" id=".service_locator.Qip0gkl"/>
        <argument key="App\Controller\Instructor\CourseForumController::index" type="service_closure" id=".service_locator.vVjJUaK"/>
        <argument key="App\Controller\Instructor\CourseForumController::removeForumMessage" type="service_closure" id=".service_locator.6Fe3VWi"/>
        <argument key="App\Controller\Instructor\CourseForumController::subjectMessage" type="service_closure" id=".service_locator.qKbPMoI"/>
        <argument key="App\Controller\Instructor\CoursesController::coursePreview" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Instructor\CoursesController::deleteChapitre" type="service_closure" id=".service_locator.aaST1nn"/>
        <argument key="App\Controller\Instructor\CoursesController::deleteCourse" type="service_closure" id=".service_locator.gBs6jx2"/>
        <argument key="App\Controller\Instructor\CoursesController::deleteFAQ" type="service_closure" id=".service_locator.cIzlWoj"/>
        <argument key="App\Controller\Instructor\CoursesController::deleteLesson" type="service_closure" id=".service_locator.UqTc44d"/>
        <argument key="App\Controller\Instructor\CoursesController::deleteQuiz" type="service_closure" id=".service_locator.w4GY4t1"/>
        <argument key="App\Controller\Instructor\CoursesController::edit" type="service_closure" id=".service_locator._V0RNof"/>
        <argument key="App\Controller\Instructor\CoursesController::editQuiz" type="service_closure" id=".service_locator.DveO1kU"/>
        <argument key="App\Controller\Instructor\CoursesController::editQuizFinal" type="service_closure" id=".service_locator.0I2c_WY"/>
        <argument key="App\Controller\Instructor\CoursesController::index" type="service_closure" id=".service_locator.AwxTtz6"/>
        <argument key="App\Controller\Instructor\CoursesController::newQuiz" type="service_closure" id=".service_locator.RBosDZz"/>
        <argument key="App\Controller\Instructor\CoursesController::publishedCourse" type="service_closure" id=".service_locator.fzX53bK"/>
        <argument key="App\Controller\Instructor\ExamController::delete" type="service_closure" id=".service_locator.Ak2dIxa"/>
        <argument key="App\Controller\Instructor\ExamController::edit" type="service_closure" id=".service_locator.6atRNmG"/>
        <argument key="App\Controller\Instructor\ExamController::index" type="service_closure" id=".service_locator.E63WOfv"/>
        <argument key="App\Controller\Instructor\ExamController::published" type="service_closure" id=".service_locator.Ak2dIxa"/>
        <argument key="App\Controller\Instructor\HomeController::index" type="service_closure" id=".service_locator.PGJmDUF"/>
        <argument key="App\Controller\Instructor\LessonController::delete" type="service_closure" id=".service_locator.JpTvOfs"/>
        <argument key="App\Controller\Instructor\LessonController::edit" type="service_closure" id=".service_locator.JpTvOfs"/>
        <argument key="App\Controller\Instructor\LessonController::index" type="service_closure" id=".service_locator.oy.IWoV"/>
        <argument key="App\Controller\Instructor\LessonController::new" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\Instructor\LessonController::show" type="service_closure" id=".service_locator.pxaUkp_"/>
        <argument key="App\Controller\Instructor\NetworkController::index" type="service_closure" id=".service_locator.WFG9hC."/>
        <argument key="App\Controller\Instructor\NetworkController::retirer" type="service_closure" id=".service_locator.XYRnh8F"/>
        <argument key="App\Controller\Instructor\NetworkController::retraits" type="service_closure" id=".service_locator.UP3MCwl"/>
        <argument key="App\Controller\Instructor\OrdersController::index" type="service_closure" id=".service_locator.rvd2xOp"/>
        <argument key="App\Controller\Instructor\ReviewsController::index" type="service_closure" id=".service_locator.8hEBzro"/>
        <argument key="App\Controller\Instructor\ReviewsController::reply" type="service_closure" id=".service_locator.HMsaM1z"/>
        <argument key="App\Controller\PaymentControllers::emailSender" type="service_closure" id=".service_locator.uVvF4gL"/>
        <argument key="App\Controller\PaymentControllers::handleCallback" type="service_closure" id=".service_locator.Exgj6x3"/>
        <argument key="App\Controller\ProfileController::changeEmail" type="service_closure" id=".service_locator.Sm3vMyh"/>
        <argument key="App\Controller\ProfileController::editPersonnalInformations" type="service_closure" id=".service_locator.e2G13d0"/>
        <argument key="App\Controller\ProfileController::index" type="service_closure" id=".service_locator.neYTR3i"/>
        <argument key="App\Controller\RegistrationController::generateInvitationCode" type="service_closure" id=".service_locator.pEIyNmT"/>
        <argument key="App\Controller\RegistrationController::register" type="service_closure" id=".service_locator.KgbducX"/>
        <argument key="App\Controller\RegistrationController::verifyUserEmail" type="service_closure" id=".service_locator.G.r2VMp"/>
        <argument key="App\Controller\ResetPasswordController::request" type="service_closure" id=".service_locator.EE0.cm9"/>
        <argument key="App\Controller\ResetPasswordController::reset" type="service_closure" id=".service_locator.Z9ydiC1"/>
        <argument key="App\Controller\SecurityController::login" type="service_closure" id=".service_locator.rSTd.nA"/>
        <argument key="App\Controller\Student\CourseController::index" type="service_closure" id=".service_locator.qpnski8"/>
        <argument key="App\Controller\Student\CourseController::removeCourse" type="service_closure" id=".service_locator.80wW8wg"/>
        <argument key="App\Controller\Student\EvaluationController::index" type="service_closure" id=".service_locator.ZUciSQZ"/>
        <argument key="App\Controller\Student\HomeController::index" type="service_closure" id=".service_locator.ZUciSQZ"/>
        <argument key="App\Controller\Student\NetworkController::index" type="service_closure" id=".service_locator.v_kzbYK"/>
        <argument key="App\Controller\Student\PaymentController::index" type="service_closure" id=".service_locator.edBGD8s"/>
        <argument key="App\Controller\Student\PaymentController::subscriptions" type="service_closure" id=".service_locator.qmk8Bm6"/>
        <argument key="App\Controller\TermsController::index" type="service_closure" id=".service_locator.Oqt1cOI"/>
        <argument key="App\Kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="App\Kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="FM\ElfinderBundle\Controller\ElFinderController::load" type="service_closure" id=".service_locator.n.vWwvH"/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="App\Controller\Admin\AbonnementController:delete" type="service_closure" id=".service_locator.eqZsSWM"/>
        <argument key="App\Controller\Admin\AbonnementController:edit" type="service_closure" id=".service_locator.eqZsSWM"/>
        <argument key="App\Controller\Admin\AbonnementController:index" type="service_closure" id=".service_locator.n8UGmG4"/>
        <argument key="App\Controller\Admin\AbonnementController:new" type="service_closure" id=".service_locator.lz_g3dg"/>
        <argument key="App\Controller\Admin\AbonnementController:show" type="service_closure" id=".service_locator.KPOw2Hp"/>
        <argument key="App\Controller\Admin\AbonnementItemController:delete" type="service_closure" id=".service_locator.zNI9i6M"/>
        <argument key="App\Controller\Admin\AbonnementItemController:edit" type="service_closure" id=".service_locator.zNI9i6M"/>
        <argument key="App\Controller\Admin\AbonnementItemController:index" type="service_closure" id=".service_locator._mqZjct"/>
        <argument key="App\Controller\Admin\AbonnementItemController:new" type="service_closure" id=".service_locator._mqZjct"/>
        <argument key="App\Controller\Admin\AbonnementItemController:show" type="service_closure" id=".service_locator.JYs6EHz"/>
        <argument key="App\Controller\Admin\CategorieController:delete" type="service_closure" id=".service_locator.iPTmcBs"/>
        <argument key="App\Controller\Admin\CategorieController:edit" type="service_closure" id=".service_locator.HcAqD_t"/>
        <argument key="App\Controller\Admin\CategorieController:index" type="service_closure" id=".service_locator.VIrGozw"/>
        <argument key="App\Controller\Admin\CategorieController:new" type="service_closure" id=".service_locator.g.onyyT"/>
        <argument key="App\Controller\Admin\CategorieController:show" type="service_closure" id=".service_locator.j7wOkYK"/>
        <argument key="App\Controller\Admin\ChapitreController:delete" type="service_closure" id=".service_locator.aaST1nn"/>
        <argument key="App\Controller\Admin\ChapitreController:edit" type="service_closure" id=".service_locator.LHBTlSB"/>
        <argument key="App\Controller\Admin\ChapitreController:index" type="service_closure" id=".service_locator.zc0mk_0"/>
        <argument key="App\Controller\Admin\ChapitreController:new" type="service_closure" id=".service_locator.eaTrZQM"/>
        <argument key="App\Controller\Admin\ChapitreController:show" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Admin\ClasseController:delete" type="service_closure" id=".service_locator.GdA86g7"/>
        <argument key="App\Controller\Admin\ClasseController:edit" type="service_closure" id=".service_locator.e8EBBee"/>
        <argument key="App\Controller\Admin\ClasseController:index" type="service_closure" id=".service_locator.RblMI1d"/>
        <argument key="App\Controller\Admin\ClasseController:new" type="service_closure" id=".service_locator.dKHVPkC"/>
        <argument key="App\Controller\Admin\ClasseController:show" type="service_closure" id=".service_locator..HWWlJE"/>
        <argument key="App\Controller\Admin\CoursController:approveCourse" type="service_closure" id=".service_locator.VFRfSyw"/>
        <argument key="App\Controller\Admin\CoursController:delete" type="service_closure" id=".service_locator.1ZVS9Vu"/>
        <argument key="App\Controller\Admin\CoursController:deleteReview" type="service_closure" id=".service_locator.Xl2sCQI"/>
        <argument key="App\Controller\Admin\CoursController:edit" type="service_closure" id=".service_locator.tGxlRXC"/>
        <argument key="App\Controller\Admin\CoursController:index" type="service_closure" id=".service_locator.Cb0FaSe"/>
        <argument key="App\Controller\Admin\CoursController:new" type="service_closure" id=".service_locator.Yz8Vt.k"/>
        <argument key="App\Controller\Admin\CoursController:rejectedCourse" type="service_closure" id=".service_locator.RgJF.d4"/>
        <argument key="App\Controller\Admin\CoursController:show" type="service_closure" id=".service_locator.gMvq5pN"/>
        <argument key="App\Controller\Admin\DashboardController:dashboardEarningsData" type="service_closure" id=".service_locator.DcCEeyO"/>
        <argument key="App\Controller\Admin\DashboardController:index" type="service_closure" id=".service_locator.c22ImwG"/>
        <argument key="App\Controller\Admin\DashboardController:traficSource" type="service_closure" id=".service_locator.7zyAtZq"/>
        <argument key="App\Controller\Admin\EleveController:block" type="service_closure" id=".service_locator.r0BjQku"/>
        <argument key="App\Controller\Admin\EleveController:delete" type="service_closure" id=".service_locator.r0BjQku"/>
        <argument key="App\Controller\Admin\EleveController:edit" type="service_closure" id=".service_locator.r0BjQku"/>
        <argument key="App\Controller\Admin\EleveController:index" type="service_closure" id=".service_locator.v_kzbYK"/>
        <argument key="App\Controller\Admin\EleveController:new" type="service_closure" id=".service_locator.ZUciSQZ"/>
        <argument key="App\Controller\Admin\EleveController:show" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Admin\EnseignantController:accepted" type="service_closure" id=".service_locator.E5H.BTi"/>
        <argument key="App\Controller\Admin\EnseignantController:delete" type="service_closure" id=".service_locator.egXUG0V"/>
        <argument key="App\Controller\Admin\EnseignantController:edit" type="service_closure" id=".service_locator.egXUG0V"/>
        <argument key="App\Controller\Admin\EnseignantController:index" type="service_closure" id=".service_locator..1fzwrY"/>
        <argument key="App\Controller\Admin\EnseignantController:new" type="service_closure" id=".service_locator.6JvQVQH"/>
        <argument key="App\Controller\Admin\EnseignantController:rejected" type="service_closure" id=".service_locator.NbL4vpV"/>
        <argument key="App\Controller\Admin\EnseignantController:request" type="service_closure" id=".service_locator..1fzwrY"/>
        <argument key="App\Controller\Admin\EnseignantController:show" type="service_closure" id=".service_locator.Q2J1hJr"/>
        <argument key="App\Controller\Admin\EtablissementController:delete" type="service_closure" id=".service_locator.ajDOBVr"/>
        <argument key="App\Controller\Admin\EtablissementController:edit" type="service_closure" id=".service_locator.ajDOBVr"/>
        <argument key="App\Controller\Admin\EtablissementController:index" type="service_closure" id=".service_locator..dGzn4B"/>
        <argument key="App\Controller\Admin\EtablissementController:new" type="service_closure" id=".service_locator..dGzn4B"/>
        <argument key="App\Controller\Admin\EtablissementController:show" type="service_closure" id=".service_locator.SvV89WQ"/>
        <argument key="App\Controller\Admin\EvaluationController:delete" type="service_closure" id=".service_locator.3PqNSe_"/>
        <argument key="App\Controller\Admin\EvaluationController:edit" type="service_closure" id=".service_locator.3PqNSe_"/>
        <argument key="App\Controller\Admin\EvaluationController:index" type="service_closure" id=".service_locator.FjsgjXR"/>
        <argument key="App\Controller\Admin\EvaluationController:new" type="service_closure" id=".service_locator.DBp52_G"/>
        <argument key="App\Controller\Admin\EvaluationController:show" type="service_closure" id=".service_locator.BuNYlya"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController:delete" type="service_closure" id=".service_locator.4ylJ6pP"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController:edit" type="service_closure" id=".service_locator.4ylJ6pP"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController:index" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController:new" type="service_closure" id=".service_locator.IHmhRtr"/>
        <argument key="App\Controller\Admin\EvaluationQuestionController:show" type="service_closure" id=".service_locator.YSOGZde"/>
        <argument key="App\Controller\Admin\ExamController:approved" type="service_closure" id=".service_locator.Ak2dIxa"/>
        <argument key="App\Controller\Admin\ExamController:index" type="service_closure" id=".service_locator.E63WOfv"/>
        <argument key="App\Controller\Admin\ExamController:remove" type="service_closure" id=".service_locator.Ak2dIxa"/>
        <argument key="App\Controller\Admin\FAQController:delete" type="service_closure" id=".service_locator.cIzlWoj"/>
        <argument key="App\Controller\Admin\FAQController:edit" type="service_closure" id=".service_locator.cIzlWoj"/>
        <argument key="App\Controller\Admin\FAQController:index" type="service_closure" id=".service_locator.v8JuPnp"/>
        <argument key="App\Controller\Admin\FAQController:new" type="service_closure" id=".service_locator.v8JuPnp"/>
        <argument key="App\Controller\Admin\FAQController:show" type="service_closure" id=".service_locator.fD6gyoR"/>
        <argument key="App\Controller\Admin\FiliereController:delete" type="service_closure" id=".service_locator.a.FNPPn"/>
        <argument key="App\Controller\Admin\FiliereController:edit" type="service_closure" id=".service_locator.WQjXpxN"/>
        <argument key="App\Controller\Admin\FiliereController:index" type="service_closure" id=".service_locator.PvewYLJ"/>
        <argument key="App\Controller\Admin\FiliereController:new" type="service_closure" id=".service_locator.Ep8i1lp"/>
        <argument key="App\Controller\Admin\FiliereController:show" type="service_closure" id=".service_locator.nuHUyxg"/>
        <argument key="App\Controller\Admin\FormationController:delete" type="service_closure" id=".service_locator.GXW8MDB"/>
        <argument key="App\Controller\Admin\FormationController:edit" type="service_closure" id=".service_locator.cgbC6Or"/>
        <argument key="App\Controller\Admin\FormationController:index" type="service_closure" id=".service_locator.SdimP0A"/>
        <argument key="App\Controller\Admin\FormationController:new" type="service_closure" id=".service_locator.c1Yi598"/>
        <argument key="App\Controller\Admin\FormationController:show" type="service_closure" id=".service_locator.dy6wSj2"/>
        <argument key="App\Controller\Admin\ForumController:delete" type="service_closure" id=".service_locator.UVTlCsZ"/>
        <argument key="App\Controller\Admin\ForumController:edit" type="service_closure" id=".service_locator.UVTlCsZ"/>
        <argument key="App\Controller\Admin\ForumController:index" type="service_closure" id=".service_locator.EgHX0z5"/>
        <argument key="App\Controller\Admin\ForumController:new" type="service_closure" id=".service_locator.QGP4FZ_"/>
        <argument key="App\Controller\Admin\ForumController:show" type="service_closure" id=".service_locator.irtl5bF"/>
        <argument key="App\Controller\Admin\ForumMessageController:delete" type="service_closure" id=".service_locator.6Fe3VWi"/>
        <argument key="App\Controller\Admin\ForumMessageController:edit" type="service_closure" id=".service_locator.6Fe3VWi"/>
        <argument key="App\Controller\Admin\ForumMessageController:index" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Admin\ForumMessageController:new" type="service_closure" id=".service_locator.SAQXaRG"/>
        <argument key="App\Controller\Admin\ForumMessageController:show" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Admin\LessonController:delete" type="service_closure" id=".service_locator.UqTc44d"/>
        <argument key="App\Controller\Admin\LessonController:edit" type="service_closure" id=".service_locator.TMKevGr"/>
        <argument key="App\Controller\Admin\LessonController:index" type="service_closure" id=".service_locator.oy.IWoV"/>
        <argument key="App\Controller\Admin\LessonController:new" type="service_closure" id=".service_locator.SlXkoU4"/>
        <argument key="App\Controller\Admin\LessonController:show" type="service_closure" id=".service_locator.pxaUkp_"/>
        <argument key="App\Controller\Admin\MediaController:delete" type="service_closure" id=".service_locator.0yBt7Av"/>
        <argument key="App\Controller\Admin\MediaController:edit" type="service_closure" id=".service_locator.0yBt7Av"/>
        <argument key="App\Controller\Admin\MediaController:index" type="service_closure" id=".service_locator.6zRW84N"/>
        <argument key="App\Controller\Admin\MediaController:new" type="service_closure" id=".service_locator.6zRW84N"/>
        <argument key="App\Controller\Admin\MediaController:show" type="service_closure" id=".service_locator..PB0HcE"/>
        <argument key="App\Controller\Admin\NetworkConfigController:delete" type="service_closure" id=".service_locator.JBkrMmK"/>
        <argument key="App\Controller\Admin\NetworkConfigController:edit" type="service_closure" id=".service_locator.JBkrMmK"/>
        <argument key="App\Controller\Admin\NetworkConfigController:index" type="service_closure" id=".service_locator.DYnLJqc"/>
        <argument key="App\Controller\Admin\NetworkConfigController:new" type="service_closure" id=".service_locator.DYnLJqc"/>
        <argument key="App\Controller\Admin\NetworkConfigController:show" type="service_closure" id=".service_locator.qvyKzbr"/>
        <argument key="App\Controller\Admin\NotificationTemplateController:delete" type="service_closure" id=".service_locator.rlA3o86"/>
        <argument key="App\Controller\Admin\NotificationTemplateController:edit" type="service_closure" id=".service_locator.rlA3o86"/>
        <argument key="App\Controller\Admin\NotificationTemplateController:index" type="service_closure" id=".service_locator.jEbB6rl"/>
        <argument key="App\Controller\Admin\NotificationTemplateController:new" type="service_closure" id=".service_locator.jEbB6rl"/>
        <argument key="App\Controller\Admin\NotificationTemplateController:show" type="service_closure" id=".service_locator.tSnRecj"/>
        <argument key="App\Controller\Admin\PaysController:delete" type="service_closure" id=".service_locator.fGeoUwi"/>
        <argument key="App\Controller\Admin\PaysController:edit" type="service_closure" id=".service_locator.vTR.b54"/>
        <argument key="App\Controller\Admin\PaysController:index" type="service_closure" id=".service_locator.R8mYGRC"/>
        <argument key="App\Controller\Admin\PaysController:new" type="service_closure" id=".service_locator.UmauJ7d"/>
        <argument key="App\Controller\Admin\PaysController:show" type="service_closure" id=".service_locator.NB6SjKc"/>
        <argument key="App\Controller\Admin\PersonneController:delete" type="service_closure" id=".service_locator.T9a0IK5"/>
        <argument key="App\Controller\Admin\PersonneController:edit" type="service_closure" id=".service_locator.T9a0IK5"/>
        <argument key="App\Controller\Admin\PersonneController:index" type="service_closure" id=".service_locator.pWQSQEm"/>
        <argument key="App\Controller\Admin\PersonneController:new" type="service_closure" id=".service_locator.pWQSQEm"/>
        <argument key="App\Controller\Admin\PersonneController:show" type="service_closure" id=".service_locator.FVfhqrZ"/>
        <argument key="App\Controller\Admin\PropositionController:delete" type="service_closure" id=".service_locator.xjchgF8"/>
        <argument key="App\Controller\Admin\PropositionController:edit" type="service_closure" id=".service_locator.xjchgF8"/>
        <argument key="App\Controller\Admin\PropositionController:index" type="service_closure" id=".service_locator.CdKKsmp"/>
        <argument key="App\Controller\Admin\PropositionController:new" type="service_closure" id=".service_locator.CdKKsmp"/>
        <argument key="App\Controller\Admin\PropositionController:show" type="service_closure" id=".service_locator.wQsOg.V"/>
        <argument key="App\Controller\Admin\QuizController:delete" type="service_closure" id=".service_locator.DveO1kU"/>
        <argument key="App\Controller\Admin\QuizController:edit" type="service_closure" id=".service_locator.DveO1kU"/>
        <argument key="App\Controller\Admin\QuizController:index" type="service_closure" id=".service_locator.Cj4aUBQ"/>
        <argument key="App\Controller\Admin\QuizController:new" type="service_closure" id=".service_locator.Cj4aUBQ"/>
        <argument key="App\Controller\Admin\QuizController:show" type="service_closure" id=".service_locator.90uTyKf"/>
        <argument key="App\Controller\Admin\RegistrationController:activer" type="service_closure" id=".service_locator.yVvQ1jo"/>
        <argument key="App\Controller\Admin\RegistrationController:block" type="service_closure" id=".service_locator.yVvQ1jo"/>
        <argument key="App\Controller\Admin\RegistrationController:delete" type="service_closure" id=".service_locator.yVvQ1jo"/>
        <argument key="App\Controller\Admin\RegistrationController:generateInvitationCode" type="service_closure" id=".service_locator.pEIyNmT"/>
        <argument key="App\Controller\Admin\RegistrationController:index" type="service_closure" id=".service_locator.FPQZBrM"/>
        <argument key="App\Controller\Admin\RegistrationController:register" type="service_closure" id=".service_locator.M6mqXM8"/>
        <argument key="App\Controller\Admin\RegistrationController:verifyUserEmail" type="service_closure" id=".service_locator.7CbTm.z"/>
        <argument key="App\Controller\Admin\SettingController:index" type="service_closure" id=".service_locator.aD9cOcx"/>
        <argument key="App\Controller\Admin\SousSystemeController:delete" type="service_closure" id=".service_locator.mI1r52c"/>
        <argument key="App\Controller\Admin\SousSystemeController:edit" type="service_closure" id=".service_locator.iqgcFjm"/>
        <argument key="App\Controller\Admin\SousSystemeController:index" type="service_closure" id=".service_locator.WSodB8c"/>
        <argument key="App\Controller\Admin\SousSystemeController:new" type="service_closure" id=".service_locator.UsNqJ8P"/>
        <argument key="App\Controller\Admin\SousSystemeController:show" type="service_closure" id=".service_locator.g4P3r52"/>
        <argument key="App\Controller\Admin\SpecialiteController:delete" type="service_closure" id=".service_locator.iO2IILU"/>
        <argument key="App\Controller\Admin\SpecialiteController:edit" type="service_closure" id=".service_locator.IZGLOcg"/>
        <argument key="App\Controller\Admin\SpecialiteController:index" type="service_closure" id=".service_locator.kox0Cn."/>
        <argument key="App\Controller\Admin\SpecialiteController:new" type="service_closure" id=".service_locator.Qgrzrfs"/>
        <argument key="App\Controller\Admin\SpecialiteController:show" type="service_closure" id=".service_locator.oDD2JWx"/>
        <argument key="App\Controller\Admin\SujetController:delete" type="service_closure" id=".service_locator.LCKoqJU"/>
        <argument key="App\Controller\Admin\SujetController:edit" type="service_closure" id=".service_locator.LCKoqJU"/>
        <argument key="App\Controller\Admin\SujetController:index" type="service_closure" id=".service_locator.K8s3Utn"/>
        <argument key="App\Controller\Admin\SujetController:new" type="service_closure" id=".service_locator.K8s3Utn"/>
        <argument key="App\Controller\Admin\SujetController:show" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Admin\TermController:delete" type="service_closure" id=".service_locator.naOR5os"/>
        <argument key="App\Controller\Admin\TermController:edit" type="service_closure" id=".service_locator.naOR5os"/>
        <argument key="App\Controller\Admin\TermController:index" type="service_closure" id=".service_locator.Oqt1cOI"/>
        <argument key="App\Controller\Admin\TermController:new" type="service_closure" id=".service_locator.Oqt1cOI"/>
        <argument key="App\Controller\Admin\TermController:show" type="service_closure" id=".service_locator.IZvv_3x"/>
        <argument key="App\Controller\Admin\TypeEnseignementController:delete" type="service_closure" id=".service_locator.19S4JOS"/>
        <argument key="App\Controller\Admin\TypeEnseignementController:edit" type="service_closure" id=".service_locator.u0am54A"/>
        <argument key="App\Controller\Admin\TypeEnseignementController:index" type="service_closure" id=".service_locator.pLCFjwu"/>
        <argument key="App\Controller\Admin\TypeEnseignementController:new" type="service_closure" id=".service_locator.I7tmGVt"/>
        <argument key="App\Controller\Admin\TypeEnseignementController:show" type="service_closure" id=".service_locator.slnpeg."/>
        <argument key="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController:__invoke" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList:__invoke" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\DetailsController:__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\DetailsController" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage:__invoke" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\CourseForum:__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\CourseForum" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\ForumSubjects:__invoke" type="service_closure" id=".service_locator.irtl5bF"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\ForumSubjects" type="service_closure" id=".service_locator.irtl5bF"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController:__invoke" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\NewForumMessage:__invoke" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\NewForumMessage" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\PostSubjectController:__invoke" type="service_closure" id=".service_locator.irtl5bF"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\PostSubjectController" type="service_closure" id=".service_locator.irtl5bF"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\SubjectMessages:__invoke" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\SubjectMessages" type="service_closure" id=".service_locator.DopB_Wq"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\SujetResoluController:__invoke" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Forum\SujetResoluController" type="service_closure" id=".service_locator.w6TLtL4"/>
        <argument key="App\Controller\Api\Controller\Course\Lesson\FinishedController:__invoke" type="service_closure" id=".service_locator.5qYIAhN"/>
        <argument key="App\Controller\Api\Controller\Course\Lesson\FinishedController" type="service_closure" id=".service_locator.5qYIAhN"/>
        <argument key="App\Controller\Api\Controller\Course\Lesson\FinishedController:lectureIsFinished" type="service_closure" id=".service_locator.mAe8GY."/>
        <argument key="App\Controller\Api\Controller\Course\Lesson\FinishedLectures:__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Course\Lesson\FinishedLectures" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Course\Quiz\PostController:__invoke" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\Quiz\PostController" type="service_closure" id=".service_locator.auv825B"/>
        <argument key="App\Controller\Api\Controller\Course\Quiz\PostController:correction" type="service_closure" id=".service_locator.TGgVASX"/>
        <argument key="App\Controller\Api\Controller\Course\Review\CourseReviewController:__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Review\CourseReviewController" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Review\PostReviewController:__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\Review\PostReviewController" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Course\ShowQuizzesController:__invoke" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Course\ShowQuizzesController" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Course\StartCourseController:__invoke" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Course\StartCourseController" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Course\StudentCourseController:__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Course\StudentCourseController" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Course\StudentLectureController:__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Course\StudentLectureController" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\EvaluationsEleve:__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\EvaluationsEleve" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\InscriptionController:__invoke" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\InscriptionController" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\ListController:__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\ListController" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\PostCorrectionController:__invoke" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\PostCorrectionController" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\QuestionnaireController:__invoke" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\QuestionnaireController" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\ResultatController:__invoke" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Evaluation\ResultatController" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Api\Controller\Faq\FaqCourseController:__invoke" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Faq\FaqCourseController" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Api\Controller\Payment\PayerAbonnementController:__invoke" type="service_closure" id=".service_locator.KPOw2Hp"/>
        <argument key="App\Controller\Api\Controller\Payment\PayerAbonnementController" type="service_closure" id=".service_locator.KPOw2Hp"/>
        <argument key="App\Controller\Api\Controller\Payment\PayerCoursController:__invoke" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Payment\PayerCoursController" type="service_closure" id=".service_locator.iOqkD0R"/>
        <argument key="App\Controller\Api\Controller\Payment\StudentPaymentController:__invoke" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\Payment\StudentPaymentController" type="service_closure" id=".service_locator.zMkT7yZ"/>
        <argument key="App\Controller\Api\Controller\User\ChangeAvatarController:__invoke" type="service_closure" id=".service_locator.FVfhqrZ"/>
        <argument key="App\Controller\Api\Controller\User\ChangeAvatarController" type="service_closure" id=".service_locator.FVfhqrZ"/>
        <argument key="App\Controller\Api\Controller\User\NetworkController:__invoke" type="service_closure" id=".service_locator.FVfhqrZ"/>
        <argument key="App\Controller\Api\Controller\User\NetworkController" type="service_closure" id=".service_locator.FVfhqrZ"/>
        <argument key="App\Controller\FrontController:becomeTeacher" type="service_closure" id=".service_locator.uVvF4gL"/>
        <argument key="App\Controller\FrontController:contact" type="service_closure" id=".service_locator.uVvF4gL"/>
        <argument key="App\Controller\FrontController:index" type="service_closure" id=".service_locator.H779gTJ"/>
        <argument key="App\Controller\FrontController:plan" type="service_closure" id=".service_locator.7_6EDB0"/>
        <argument key="App\Controller\FrontController:showHeaderCategories" type="service_closure" id=".service_locator.DFyL8OH"/>
        <argument key="App\Controller\FrontController:showHeaderCourses" type="service_closure" id=".service_locator.xYaqVzK"/>
        <argument key="App\Controller\Front\CourseForumController:index" type="service_closure" id=".service_locator.vVjJUaK"/>
        <argument key="App\Controller\Front\CourseForumController:subjectMessage" type="service_closure" id=".service_locator.qKbPMoI"/>
        <argument key="App\Controller\Front\CoursesController:addNewforumMessage" type="service_closure" id=".service_locator.8HlNKHi"/>
        <argument key="App\Controller\Front\CoursesController:courseDetails" type="service_closure" id=".service_locator.zJUkcD_"/>
        <argument key="App\Controller\Front\CoursesController:index" type="service_closure" id=".service_locator.yYnTFV3"/>
        <argument key="App\Controller\Front\CoursesController:lectureIsFinished" type="service_closure" id=".service_locator.XBu8bEJ"/>
        <argument key="App\Controller\Front\CoursesController:likeForumMessage" type="service_closure" id=".service_locator.UlCPoMT"/>
        <argument key="App\Controller\Front\CoursesController:newCourseReview" type="service_closure" id=".service_locator.O4Tpc7i"/>
        <argument key="App\Controller\Front\CoursesController:newForumSubjet" type="service_closure" id=".service_locator.Wb_9uAG"/>
        <argument key="App\Controller\Front\CoursesController:readLesson" type="service_closure" id=".service_locator.En7B4vF"/>
        <argument key="App\Controller\Front\CoursesController:replyForumMessage" type="service_closure" id=".service_locator.IBLWktG"/>
        <argument key="App\Controller\Front\CoursesController:showQuizzes" type="service_closure" id=".service_locator.Xw7Ms4B"/>
        <argument key="App\Controller\Front\CoursesController:startCourse" type="service_closure" id=".service_locator.BV48PYm"/>
        <argument key="App\Controller\Front\CoursesController:sujetResolu" type="service_closure" id=".service_locator.6Fe3VWi"/>
        <argument key="App\Controller\Front\EvaluationController:afficherResultats" type="service_closure" id=".service_locator.OgsBuKp"/>
        <argument key="App\Controller\Front\EvaluationController:composer" type="service_closure" id=".service_locator.S84XzAK"/>
        <argument key="App\Controller\Front\EvaluationController:hideAnnonce" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\Front\EvaluationController:sinscrire" type="service_closure" id=".service_locator.VDXxjXd"/>
        <argument key="App\Controller\Front\ExamController:index" type="service_closure" id=".service_locator.XknFu0E"/>
        <argument key="App\Controller\Front\ExamController:show" type="service_closure" id=".service_locator.22DT_tw"/>
        <argument key="App\Controller\Front\FaqController:index" type="service_closure" id=".service_locator.HOWxqzI"/>
        <argument key="App\Controller\Front\ForumController:index" type="service_closure" id=".service_locator._QSmipa"/>
        <argument key="App\Controller\Front\PaymentController:devenirPremiumOrByCourse" type="service_closure" id=".service_locator.cGlJyZx"/>
        <argument key="App\Controller\Front\PaymentController:subscribePlan" type="service_closure" id=".service_locator.H_EpB5m"/>
        <argument key="App\Controller\Front\coursesCategoryController:index" type="service_closure" id=".service_locator.DFyL8OH"/>
        <argument key="App\Controller\HomeController:courses" type="service_closure" id=".service_locator.0G0dfh9"/>
        <argument key="App\Controller\HomeController:index" type="service_closure" id=".service_locator.yzF.EVX"/>
        <argument key="App\Controller\HomeController:sendMail" type="service_closure" id=".service_locator.F86iHBA"/>
        <argument key="App\Controller\Instructor\CourseForumController:deleteSubjet" type="service_closure" id=".service_locator.Qip0gkl"/>
        <argument key="App\Controller\Instructor\CourseForumController:index" type="service_closure" id=".service_locator.vVjJUaK"/>
        <argument key="App\Controller\Instructor\CourseForumController:removeForumMessage" type="service_closure" id=".service_locator.6Fe3VWi"/>
        <argument key="App\Controller\Instructor\CourseForumController:subjectMessage" type="service_closure" id=".service_locator.qKbPMoI"/>
        <argument key="App\Controller\Instructor\CoursesController:coursePreview" type="service_closure" id=".service_locator.fSiFUO9"/>
        <argument key="App\Controller\Instructor\CoursesController:deleteChapitre" type="service_closure" id=".service_locator.aaST1nn"/>
        <argument key="App\Controller\Instructor\CoursesController:deleteCourse" type="service_closure" id=".service_locator.gBs6jx2"/>
        <argument key="App\Controller\Instructor\CoursesController:deleteFAQ" type="service_closure" id=".service_locator.cIzlWoj"/>
        <argument key="App\Controller\Instructor\CoursesController:deleteLesson" type="service_closure" id=".service_locator.UqTc44d"/>
        <argument key="App\Controller\Instructor\CoursesController:deleteQuiz" type="service_closure" id=".service_locator.w4GY4t1"/>
        <argument key="App\Controller\Instructor\CoursesController:edit" type="service_closure" id=".service_locator._V0RNof"/>
        <argument key="App\Controller\Instructor\CoursesController:editQuiz" type="service_closure" id=".service_locator.DveO1kU"/>
        <argument key="App\Controller\Instructor\CoursesController:editQuizFinal" type="service_closure" id=".service_locator.0I2c_WY"/>
        <argument key="App\Controller\Instructor\CoursesController:index" type="service_closure" id=".service_locator.AwxTtz6"/>
        <argument key="App\Controller\Instructor\CoursesController:newQuiz" type="service_closure" id=".service_locator.RBosDZz"/>
        <argument key="App\Controller\Instructor\CoursesController:publishedCourse" type="service_closure" id=".service_locator.fzX53bK"/>
        <argument key="App\Controller\Instructor\ExamController:delete" type="service_closure" id=".service_locator.Ak2dIxa"/>
        <argument key="App\Controller\Instructor\ExamController:edit" type="service_closure" id=".service_locator.6atRNmG"/>
        <argument key="App\Controller\Instructor\ExamController:index" type="service_closure" id=".service_locator.E63WOfv"/>
        <argument key="App\Controller\Instructor\ExamController:published" type="service_closure" id=".service_locator.Ak2dIxa"/>
        <argument key="App\Controller\Instructor\HomeController:index" type="service_closure" id=".service_locator.PGJmDUF"/>
        <argument key="App\Controller\Instructor\LessonController:delete" type="service_closure" id=".service_locator.JpTvOfs"/>
        <argument key="App\Controller\Instructor\LessonController:edit" type="service_closure" id=".service_locator.JpTvOfs"/>
        <argument key="App\Controller\Instructor\LessonController:index" type="service_closure" id=".service_locator.oy.IWoV"/>
        <argument key="App\Controller\Instructor\LessonController:new" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\Instructor\LessonController:show" type="service_closure" id=".service_locator.pxaUkp_"/>
        <argument key="App\Controller\Instructor\NetworkController:index" type="service_closure" id=".service_locator.WFG9hC."/>
        <argument key="App\Controller\Instructor\NetworkController:retirer" type="service_closure" id=".service_locator.XYRnh8F"/>
        <argument key="App\Controller\Instructor\NetworkController:retraits" type="service_closure" id=".service_locator.UP3MCwl"/>
        <argument key="App\Controller\Instructor\OrdersController:index" type="service_closure" id=".service_locator.rvd2xOp"/>
        <argument key="App\Controller\Instructor\ReviewsController:index" type="service_closure" id=".service_locator.8hEBzro"/>
        <argument key="App\Controller\Instructor\ReviewsController:reply" type="service_closure" id=".service_locator.HMsaM1z"/>
        <argument key="App\Controller\PaymentControllers:emailSender" type="service_closure" id=".service_locator.uVvF4gL"/>
        <argument key="App\Controller\PaymentControllers:handleCallback" type="service_closure" id=".service_locator.Exgj6x3"/>
        <argument key="App\Controller\ProfileController:changeEmail" type="service_closure" id=".service_locator.Sm3vMyh"/>
        <argument key="App\Controller\ProfileController:editPersonnalInformations" type="service_closure" id=".service_locator.e2G13d0"/>
        <argument key="App\Controller\ProfileController:index" type="service_closure" id=".service_locator.neYTR3i"/>
        <argument key="App\Controller\RegistrationController:generateInvitationCode" type="service_closure" id=".service_locator.pEIyNmT"/>
        <argument key="App\Controller\RegistrationController:register" type="service_closure" id=".service_locator.KgbducX"/>
        <argument key="App\Controller\RegistrationController:verifyUserEmail" type="service_closure" id=".service_locator.G.r2VMp"/>
        <argument key="App\Controller\ResetPasswordController:request" type="service_closure" id=".service_locator.EE0.cm9"/>
        <argument key="App\Controller\ResetPasswordController:reset" type="service_closure" id=".service_locator.Z9ydiC1"/>
        <argument key="App\Controller\SecurityController:login" type="service_closure" id=".service_locator.rSTd.nA"/>
        <argument key="App\Controller\Student\CourseController:index" type="service_closure" id=".service_locator.qpnski8"/>
        <argument key="App\Controller\Student\CourseController:removeCourse" type="service_closure" id=".service_locator.80wW8wg"/>
        <argument key="App\Controller\Student\EvaluationController:index" type="service_closure" id=".service_locator.ZUciSQZ"/>
        <argument key="App\Controller\Student\HomeController:index" type="service_closure" id=".service_locator.ZUciSQZ"/>
        <argument key="App\Controller\Student\NetworkController:index" type="service_closure" id=".service_locator.v_kzbYK"/>
        <argument key="App\Controller\Student\PaymentController:index" type="service_closure" id=".service_locator.edBGD8s"/>
        <argument key="App\Controller\Student\PaymentController:subscriptions" type="service_closure" id=".service_locator.qmk8Bm6"/>
        <argument key="App\Controller\TermsController:index" type="service_closure" id=".service_locator.Oqt1cOI"/>
        <argument key="FM\ElfinderBundle\Controller\ElFinderController:load" type="service_closure" id=".service_locator.n.vWwvH"/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
      </argument>
    </service>
    <service id=".service_locator.kzegaci" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="Symfony\Component\Validator\Constraints\WhenValidator" type="service_closure" id="validator.when"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.lLv4pWF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.App\Serializer\AvatarNormalizer" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer"/>
      <argument type="service" id="debug.App\Serializer\AvatarNormalizer.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="debug.serializer.normalizer.constraint_violation_list.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.mime_message" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="debug.serializer.normalizer.mime_message.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="debug.serializer.normalizer.datetimezone.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="debug.serializer.normalizer.dateinterval.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="debug.serializer.normalizer.data_uri.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.datetime" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-910"/>
      <argument type="service" id="debug.serializer.normalizer.datetime.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-950"/>
      <argument type="service" id="debug.serializer.normalizer.json_serializable.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.problem" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="debug.serializer.normalizer.problem.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="debug.serializer.denormalizer.unwrapping.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.uid" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="debug.serializer.normalizer.uid.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.form_error" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="debug.serializer.normalizer.form_error.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.object" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="debug.serializer.normalizer.object.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.denormalizer.array" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-990"/>
      <argument type="service" id="debug.serializer.denormalizer.array.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="debug.serializer.normalizer.backed_enum.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.normalizer.flatten_exception" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-880"/>
      <argument type="service" id="debug.serializer.normalizer.flatten_exception.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.serializer.normalizer.item" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-895"/>
      <argument type="service" id="debug.api_platform.serializer.normalizer.item.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.openapi.normalizer" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="debug.api_platform.openapi.normalizer.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.openapi.normalizer.api_gateway" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="debug.api_platform.openapi.normalizer.api_gateway.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.jsonld.normalizer.item" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="debug.api_platform.jsonld.normalizer.item.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.jsonld.normalizer.object" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-995"/>
      <argument type="service" id="debug.api_platform.jsonld.normalizer.object.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.documentation" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="debug.api_platform.hydra.normalizer.documentation.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="debug.api_platform.hydra.normalizer.constraint_violation_list.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.entrypoint" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="debug.api_platform.hydra.normalizer.entrypoint.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.error" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="debug.api_platform.hydra.normalizer.error.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.collection" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-985"/>
      <argument type="service" id="api_platform.hydra.normalizer.collection_filters"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.problem.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="debug.api_platform.problem.normalizer.constraint_violation_list.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.problem.normalizer.error" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <tag name="serializer.normalizer" priority="-810"/>
      <argument type="service" id="debug.api_platform.problem.normalizer.error.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.encoder.xml" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <tag name="serializer.encoder"/>
      <argument type="service" id="debug.serializer.encoder.xml.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.encoder.json" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <tag name="serializer.encoder"/>
      <argument type="service" id="debug.serializer.encoder.json.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.encoder.yaml" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <tag name="serializer.encoder"/>
      <argument type="service" id="debug.serializer.encoder.yaml.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.serializer.encoder.csv" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <tag name="serializer.encoder"/>
      <argument type="service" id="debug.serializer.encoder.csv.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.jsonld.encoder" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <tag name="serializer.encoder"/>
      <argument type="service" id="debug.api_platform.jsonld.encoder.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.api_platform.problem.encoder" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <tag name="serializer.encoder"/>
      <argument type="service" id="debug.api_platform.problem.encoder.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="120"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.doctrine.orm.entity_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" priority="110">controller.argument_value_resolver</tag>
      <argument type="service" id="debug.doctrine.orm.entity_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.backed_enum_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.datetime.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.api_platform.argument_resolver.payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="debug.api_platform.argument_resolver.payload.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.wt9P91Q" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\AbonnementItemType" type="service_closure" id="App\Form\AbonnementItemType"/>
        <argument key="App\Form\AbonnementType" type="service_closure" id="App\Form\AbonnementType"/>
        <argument key="App\Form\CategorieType" type="service_closure" id="App\Form\CategorieType"/>
        <argument key="App\Form\ChangePasswordFormType" type="service_closure" id="App\Form\ChangePasswordFormType"/>
        <argument key="App\Form\ChapitreType" type="service_closure" id="App\Form\ChapitreType"/>
        <argument key="App\Form\ClasseType" type="service_closure" id="App\Form\ClasseType"/>
        <argument key="App\Form\ContactType" type="service_closure" id="App\Form\ContactType"/>
        <argument key="App\Form\CoursType" type="service_closure" id="App\Form\CoursType"/>
        <argument key="App\Form\CourseQuizType" type="service_closure" id="App\Form\CourseQuizType"/>
        <argument key="App\Form\CourseReviewType" type="service_closure" id="App\Form\CourseReviewType"/>
        <argument key="App\Form\EditSocialSettingType" type="service_closure" id="App\Form\EditSocialSettingType"/>
        <argument key="App\Form\EleveType" type="service_closure" id="App\Form\EleveType"/>
        <argument key="App\Form\EnseignantType" type="service_closure" id="App\Form\EnseignantType"/>
        <argument key="App\Form\EtablissementType" type="service_closure" id="App\Form\EtablissementType"/>
        <argument key="App\Form\EvaluationQuestionType" type="service_closure" id="App\Form\EvaluationQuestionType"/>
        <argument key="App\Form\EvaluationType" type="service_closure" id="App\Form\EvaluationType"/>
        <argument key="App\Form\ExamFormType" type="service_closure" id="App\Form\ExamFormType"/>
        <argument key="App\Form\FAQType" type="service_closure" id="App\Form\FAQType"/>
        <argument key="App\Form\FiliereType" type="service_closure" id="App\Form\FiliereType"/>
        <argument key="App\Form\FormationType" type="service_closure" id="App\Form\FormationType"/>
        <argument key="App\Form\ForumMessageType" type="service_closure" id="App\Form\ForumMessageType"/>
        <argument key="App\Form\ForumType" type="service_closure" id="App\Form\ForumType"/>
        <argument key="App\Form\GeneralSettingsType" type="service_closure" id="App\Form\GeneralSettingsType"/>
        <argument key="App\Form\Lesson1Type" type="service_closure" id="App\Form\Lesson1Type"/>
        <argument key="App\Form\LessonFormType" type="service_closure" id="App\Form\LessonFormType"/>
        <argument key="App\Form\LessonType" type="service_closure" id="App\Form\LessonType"/>
        <argument key="App\Form\MediaType" type="service_closure" id="App\Form\MediaType"/>
        <argument key="App\Form\NetworkConfigType" type="service_closure" id="App\Form\NetworkConfigType"/>
        <argument key="App\Form\NotificationTemplateType" type="service_closure" id="App\Form\NotificationTemplateType"/>
        <argument key="App\Form\PaysType" type="service_closure" id="App\Form\PaysType"/>
        <argument key="App\Form\PersonneFormType" type="service_closure" id="App\Form\PersonneFormType"/>
        <argument key="App\Form\PersonneType" type="service_closure" id="App\Form\PersonneType"/>
        <argument key="App\Form\PropositionType" type="service_closure" id="App\Form\PropositionType"/>
        <argument key="App\Form\QuizType" type="service_closure" id="App\Form\QuizType"/>
        <argument key="App\Form\RegistrationFormType" type="service_closure" id="App\Form\RegistrationFormType"/>
        <argument key="App\Form\RegistrationStudentType" type="service_closure" id="App\Form\RegistrationStudentType"/>
        <argument key="App\Form\RegistrationTeacherType" type="service_closure" id="App\Form\RegistrationTeacherType"/>
        <argument key="App\Form\ResetPasswordRequestFormType" type="service_closure" id="App\Form\ResetPasswordRequestFormType"/>
        <argument key="App\Form\ResetPasswordType" type="service_closure" id="App\Form\ResetPasswordType"/>
        <argument key="App\Form\RetraitType" type="service_closure" id="App\Form\RetraitType"/>
        <argument key="App\Form\SocialSettingsType" type="service_closure" id="App\Form\SocialSettingsType"/>
        <argument key="App\Form\SousSystemeType" type="service_closure" id="App\Form\SousSystemeType"/>
        <argument key="App\Form\SpecialiteType" type="service_closure" id="App\Form\SpecialiteType"/>
        <argument key="App\Form\SujetType" type="service_closure" id="App\Form\SujetType"/>
        <argument key="App\Form\TermType" type="service_closure" id="App\Form\TermType"/>
        <argument key="App\Form\TypeEnseignementType" type="service_closure" id="App\Form\TypeEnseignementType"/>
        <argument key="App\Form\WebSiteSettingsType" type="service_closure" id="App\Form\WebSiteSettingsType"/>
        <argument key="FM\ElfinderBundle\Form\Type\ElFinderType" type="service_closure" id="fm_elfinder.form.type"/>
        <argument key="FOS\CKEditorBundle\Form\Type\CKEditorType" type="service_closure" id="fos_ck_editor.form.type"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service_closure" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service_closure" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
        <argument key="Vich\UploaderBundle\Form\Type\VichFileType" type="service_closure" id="vich_uploader.form.type.file"/>
        <argument key="Vich\UploaderBundle\Form\Type\VichImageType" type="service_closure" id="vich_uploader.form.type.image"/>
      </argument>
    </service>
    <service id="messenger.bus.default.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware">
      <argument type="service" id="debug.stopwatch"/>
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware">
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware">
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>true</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.bus.default.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware">
      <argument type="service" id="messenger.bus.default.messenger.handlers_locator"/>
      <argument>false</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="debug.traced.messenger.bus.default" class="Symfony\Component\Messenger\TraceableMessageBus">
      <tag name="messenger.bus"/>
      <argument type="service" id="debug.traced.messenger.bus.default.inner"/>
    </service>
    <service id=".service_locator.5cAhUFF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="service_closure" id="debug.traced.messenger.bus.default"/>
      </argument>
    </service>
    <service id=".service_locator.Y4J.A.e" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id=".messenger.handler_descriptor.tGvt0LH" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="mailer.messenger.message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.vMw0m61" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="chatter.messenger.chat_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.XZowc.T" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="texter.messenger.sms_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.Lml2ICs" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="texter.messenger.push_handler"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.bus.default.messenger.handlers_locator" class="Symfony\Component\Messenger\Handler\HandlersLocator">
      <argument type="collection">
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.tGvt0LH"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.vMw0m61"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.XZowc.T"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\PushMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Lml2ICs"/>
        </argument>
      </argument>
    </service>
    <service id=".debug.http_client" class="Symfony\Component\HttpClient\TraceableHttpClient">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="http_client.client"/>
      <argument type="service" id=".debug.http_client.inner"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id=".service_locator.s23S4Lt" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber"/>
        <argument key="doctrine.orm.messenger.doctrine_schema_subscriber" type="service_closure" id="doctrine.orm.messenger.doctrine_schema_subscriber"/>
        <argument key="vich_uploader.listener.clean.formations_path" type="service_closure" id="vich_uploader.listener.clean.formations_path"/>
        <argument key="vich_uploader.listener.clean.lesson_poster" type="service_closure" id="vich_uploader.listener.clean.lesson_poster"/>
        <argument key="vich_uploader.listener.clean.lesson_video" type="service_closure" id="vich_uploader.listener.clean.lesson_video"/>
        <argument key="vich_uploader.listener.clean.personne_avatar" type="service_closure" id="vich_uploader.listener.clean.personne_avatar"/>
        <argument key="vich_uploader.listener.remove.formations_path" type="service_closure" id="vich_uploader.listener.remove.formations_path"/>
        <argument key="vich_uploader.listener.remove.lesson_poster" type="service_closure" id="vich_uploader.listener.remove.lesson_poster"/>
        <argument key="vich_uploader.listener.remove.lesson_video" type="service_closure" id="vich_uploader.listener.remove.lesson_video"/>
        <argument key="vich_uploader.listener.remove.personne_avatar" type="service_closure" id="vich_uploader.listener.remove.personne_avatar"/>
        <argument key="vich_uploader.listener.upload.formations_path" type="service_closure" id="vich_uploader.listener.upload.formations_path"/>
        <argument key="vich_uploader.listener.upload.lesson_poster" type="service_closure" id="vich_uploader.listener.upload.lesson_poster"/>
        <argument key="vich_uploader.listener.upload.lesson_video" type="service_closure" id="vich_uploader.listener.upload.lesson_video"/>
        <argument key="vich_uploader.listener.upload.personne_avatar" type="service_closure" id="vich_uploader.listener.upload.personne_avatar"/>
      </argument>
    </service>
    <service id=".service_locator._xkKlkR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="user_listener" type="service_closure" id="user_listener"/>
      </argument>
    </service>
    <service id=".service_locator.6Ole5TH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\AbonnementItemRepository" type="service_closure" id="App\Repository\AbonnementItemRepository"/>
        <argument key="App\Repository\AbonnementRepository" type="service_closure" id="App\Repository\AbonnementRepository"/>
        <argument key="App\Repository\CategorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="App\Repository\ChapitreRepository" type="service_closure" id="App\Repository\ChapitreRepository"/>
        <argument key="App\Repository\ClasseRepository" type="service_closure" id="App\Repository\ClasseRepository"/>
        <argument key="App\Repository\CoursRepository" type="service_closure" id="App\Repository\CoursRepository"/>
        <argument key="App\Repository\CourseTagRepository" type="service_closure" id="App\Repository\CourseTagRepository"/>
        <argument key="App\Repository\EleveRepository" type="service_closure" id="App\Repository\EleveRepository"/>
        <argument key="App\Repository\EmailSettingRepository" type="service_closure" id="App\Repository\EmailSettingRepository"/>
        <argument key="App\Repository\EnseignantRepository" type="service_closure" id="App\Repository\EnseignantRepository"/>
        <argument key="App\Repository\EtablissementRepository" type="service_closure" id="App\Repository\EtablissementRepository"/>
        <argument key="App\Repository\EvaluationQuestionRepository" type="service_closure" id="App\Repository\EvaluationQuestionRepository"/>
        <argument key="App\Repository\EvaluationRepository" type="service_closure" id="App\Repository\EvaluationRepository"/>
        <argument key="App\Repository\EvaluationResultatRepository" type="service_closure" id="App\Repository\EvaluationResultatRepository"/>
        <argument key="App\Repository\ExamRepository" type="service_closure" id="App\Repository\ExamRepository"/>
        <argument key="App\Repository\FAQRepository" type="service_closure" id="App\Repository\FAQRepository"/>
        <argument key="App\Repository\FiliereRepository" type="service_closure" id="App\Repository\FiliereRepository"/>
        <argument key="App\Repository\FormationRepository" type="service_closure" id="App\Repository\FormationRepository"/>
        <argument key="App\Repository\ForumMessageRepository" type="service_closure" id="App\Repository\ForumMessageRepository"/>
        <argument key="App\Repository\ForumRepository" type="service_closure" id="App\Repository\ForumRepository"/>
        <argument key="App\Repository\JoinAtRepository" type="service_closure" id="App\Repository\JoinAtRepository"/>
        <argument key="App\Repository\LectureRepository" type="service_closure" id="App\Repository\LectureRepository"/>
        <argument key="App\Repository\LessonRepository" type="service_closure" id="App\Repository\LessonRepository"/>
        <argument key="App\Repository\LikeMessageForumRepository" type="service_closure" id="App\Repository\LikeMessageForumRepository"/>
        <argument key="App\Repository\LikeRepository" type="service_closure" id="App\Repository\LikeRepository"/>
        <argument key="App\Repository\MediaRepository" type="service_closure" id="App\Repository\MediaRepository"/>
        <argument key="App\Repository\MembreRepository" type="service_closure" id="App\Repository\MembreRepository"/>
        <argument key="App\Repository\NetworkConfigRepository" type="service_closure" id="App\Repository\NetworkConfigRepository"/>
        <argument key="App\Repository\NotificationRepository" type="service_closure" id="App\Repository\NotificationRepository"/>
        <argument key="App\Repository\NotificationSettingRepository" type="service_closure" id="App\Repository\NotificationSettingRepository"/>
        <argument key="App\Repository\NotificationTemplateRepository" type="service_closure" id="App\Repository\NotificationTemplateRepository"/>
        <argument key="App\Repository\NotificationTypeRepository" type="service_closure" id="App\Repository\NotificationTypeRepository"/>
        <argument key="App\Repository\PaymentMethodRepository" type="service_closure" id="App\Repository\PaymentMethodRepository"/>
        <argument key="App\Repository\PaymentRepository" type="service_closure" id="App\Repository\PaymentRepository"/>
        <argument key="App\Repository\PaysRepository" type="service_closure" id="App\Repository\PaysRepository"/>
        <argument key="App\Repository\PersonneRepository" type="service_closure" id="App\Repository\PersonneRepository"/>
        <argument key="App\Repository\PropositionRepository" type="service_closure" id="App\Repository\PropositionRepository"/>
        <argument key="App\Repository\QuizLostRepository" type="service_closure" id="App\Repository\QuizLostRepository"/>
        <argument key="App\Repository\QuizRepository" type="service_closure" id="App\Repository\QuizRepository"/>
        <argument key="App\Repository\QuizResultRepository" type="service_closure" id="App\Repository\QuizResultRepository"/>
        <argument key="App\Repository\QuizzesTypeRepository" type="service_closure" id="App\Repository\QuizzesTypeRepository"/>
        <argument key="App\Repository\ReponseRepository" type="service_closure" id="App\Repository\ReponseRepository"/>
        <argument key="App\Repository\ResetPasswordRequestRepository" type="service_closure" id="App\Repository\ResetPasswordRequestRepository"/>
        <argument key="App\Repository\RetraitRepository" type="service_closure" id="App\Repository\RetraitRepository"/>
        <argument key="App\Repository\ReviewRepository" type="service_closure" id="App\Repository\ReviewRepository"/>
        <argument key="App\Repository\SiteSettingRepository" type="service_closure" id="App\Repository\SiteSettingRepository"/>
        <argument key="App\Repository\SkillLevelRepository" type="service_closure" id="App\Repository\SkillLevelRepository"/>
        <argument key="App\Repository\SocialSettingRepository" type="service_closure" id="App\Repository\SocialSettingRepository"/>
        <argument key="App\Repository\SousSystemeRepository" type="service_closure" id="App\Repository\SousSystemeRepository"/>
        <argument key="App\Repository\SpecialiteRepository" type="service_closure" id="App\Repository\SpecialiteRepository"/>
        <argument key="App\Repository\SujetRepository" type="service_closure" id="App\Repository\SujetRepository"/>
        <argument key="App\Repository\TermRepository" type="service_closure" id="App\Repository\TermRepository"/>
        <argument key="App\Repository\TypeEnseignementRepository" type="service_closure" id="App\Repository\TypeEnseignementRepository"/>
        <argument key="App\Repository\UserRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.KLVvNIq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver" class="Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver">
      <argument type="service" id=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".service_locator.KLVvNIq"/>
    </service>
    <service id="doctrine.dbal.logging_middleware.default" class="Doctrine\DBAL\Logging\Middleware">
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.dbal.debug_middleware.default" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
      <call method="setConnectionName">
        <argument>default</argument>
      </call>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.listener.csrf_protection" class="Symfony\Component\Security\Http\EventListener\CsrfProtectionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.messenger" class="Symfony\Bridge\Monolog\Logger">
      <argument>messenger</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.http_client" class="Symfony\Bridge\Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.mailer" class="Symfony\Bridge\Monolog\Logger">
      <argument>mailer</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.deprecation" class="Symfony\Bridge\Monolog\Logger" public="true">
      <argument>deprecation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.yY.p4P7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.CshazM0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="debug.serializer" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\AbonnementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\AbonnementController"/>
      <argument>App\Controller\Admin\AbonnementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\AbonnementItemController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\AbonnementItemController"/>
      <argument>App\Controller\Admin\AbonnementItemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\CategorieController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\CategorieController"/>
      <argument>App\Controller\Admin\CategorieController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\ChapitreController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\ChapitreController"/>
      <argument>App\Controller\Admin\ChapitreController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\ClasseController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\ClasseController"/>
      <argument>App\Controller\Admin\ClasseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\CoursController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\CoursController"/>
      <argument>App\Controller\Admin\CoursController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\DashboardController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\DashboardController"/>
      <argument>App\Controller\Admin\DashboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\EleveController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\EleveController"/>
      <argument>App\Controller\Admin\EleveController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\EnseignantController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\EnseignantController"/>
      <argument>App\Controller\Admin\EnseignantController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\EtablissementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\EtablissementController"/>
      <argument>App\Controller\Admin\EtablissementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\EvaluationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\EvaluationController"/>
      <argument>App\Controller\Admin\EvaluationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\EvaluationQuestionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\EvaluationQuestionController"/>
      <argument>App\Controller\Admin\EvaluationQuestionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\ExamController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\ExamController"/>
      <argument>App\Controller\Admin\ExamController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\FAQController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\FAQController"/>
      <argument>App\Controller\Admin\FAQController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\FiliereController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\FiliereController"/>
      <argument>App\Controller\Admin\FiliereController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\FormationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\FormationController"/>
      <argument>App\Controller\Admin\FormationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\ForumController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\ForumController"/>
      <argument>App\Controller\Admin\ForumController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\ForumMessageController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\ForumMessageController"/>
      <argument>App\Controller\Admin\ForumMessageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\LessonController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\LessonController"/>
      <argument>App\Controller\Admin\LessonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\MediaController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\MediaController"/>
      <argument>App\Controller\Admin\MediaController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\NetworkConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\NetworkConfigController"/>
      <argument>App\Controller\Admin\NetworkConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\NotificationTemplateController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\NotificationTemplateController"/>
      <argument>App\Controller\Admin\NotificationTemplateController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\PaysController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\PaysController"/>
      <argument>App\Controller\Admin\PaysController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\PersonneController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\PersonneController"/>
      <argument>App\Controller\Admin\PersonneController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\PropositionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\PropositionController"/>
      <argument>App\Controller\Admin\PropositionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\QuizController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\QuizController"/>
      <argument>App\Controller\Admin\QuizController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\RegistrationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\RegistrationController"/>
      <argument>App\Controller\Admin\RegistrationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\SettingController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\SettingController"/>
      <argument>App\Controller\Admin\SettingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\SousSystemeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\SousSystemeController"/>
      <argument>App\Controller\Admin\SousSystemeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\SpecialiteController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\SpecialiteController"/>
      <argument>App\Controller\Admin\SpecialiteController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\SujetController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\SujetController"/>
      <argument>App\Controller\Admin\SujetController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\TermController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\TermController"/>
      <argument>App\Controller\Admin\TermController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Admin\TypeEnseignementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Admin\TypeEnseignementController"/>
      <argument>App\Controller\Admin\TypeEnseignementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController"/>
      <argument>App\Controller\Api\Controller\Course\Chapter\ShowQuizzesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList"/>
      <argument>App\Controller\Api\Controller\Course\Chapter\ShowQuizzesResultList</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\DetailsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\DetailsController"/>
      <argument>App\Controller\Api\Controller\Course\DetailsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\AnswerForumMessage" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Forum\AnswerForumMessage"/>
      <argument>App\Controller\Api\Controller\Course\Forum\AnswerForumMessage</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\CourseForum" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Forum\CourseForum"/>
      <argument>App\Controller\Api\Controller\Course\Forum\CourseForum</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\ForumSubjects" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Forum\ForumSubjects"/>
      <argument>App\Controller\Api\Controller\Course\Forum\ForumSubjects</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\LikeForumMessageController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Forum\LikeForumMessageController"/>
      <argument>App\Controller\Api\Controller\Course\Forum\LikeForumMessageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\NewForumMessage" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Forum\NewForumMessage"/>
      <argument>App\Controller\Api\Controller\Course\Forum\NewForumMessage</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\PostSubjectController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Forum\PostSubjectController"/>
      <argument>App\Controller\Api\Controller\Course\Forum\PostSubjectController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\SubjectMessages" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Forum\SubjectMessages"/>
      <argument>App\Controller\Api\Controller\Course\Forum\SubjectMessages</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Forum\SujetResoluController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Forum\SujetResoluController"/>
      <argument>App\Controller\Api\Controller\Course\Forum\SujetResoluController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Lesson\FinishedController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Lesson\FinishedController"/>
      <argument>App\Controller\Api\Controller\Course\Lesson\FinishedController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Lesson\FinishedLectures" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Lesson\FinishedLectures"/>
      <argument>App\Controller\Api\Controller\Course\Lesson\FinishedLectures</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Quiz\PostController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Quiz\PostController"/>
      <argument>App\Controller\Api\Controller\Course\Quiz\PostController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Review\CourseReviewController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Review\CourseReviewController"/>
      <argument>App\Controller\Api\Controller\Course\Review\CourseReviewController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\Review\PostReviewController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\Review\PostReviewController"/>
      <argument>App\Controller\Api\Controller\Course\Review\PostReviewController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\ShowQuizzesController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\ShowQuizzesController"/>
      <argument>App\Controller\Api\Controller\Course\ShowQuizzesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\StartCourseController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\StartCourseController"/>
      <argument>App\Controller\Api\Controller\Course\StartCourseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\StudentCourseController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\StudentCourseController"/>
      <argument>App\Controller\Api\Controller\Course\StudentCourseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Course\StudentLectureController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Course\StudentLectureController"/>
      <argument>App\Controller\Api\Controller\Course\StudentLectureController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Etablissement\AllController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Etablissement\AllController"/>
      <argument>App\Controller\Api\Controller\Etablissement\AllController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\EvaluationsEleve" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Evaluation\EvaluationsEleve"/>
      <argument>App\Controller\Api\Controller\Evaluation\EvaluationsEleve</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\InscriptionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Evaluation\InscriptionController"/>
      <argument>App\Controller\Api\Controller\Evaluation\InscriptionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\ListController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Evaluation\ListController"/>
      <argument>App\Controller\Api\Controller\Evaluation\ListController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\PostCorrectionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Evaluation\PostCorrectionController"/>
      <argument>App\Controller\Api\Controller\Evaluation\PostCorrectionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\QuestionnaireController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Evaluation\QuestionnaireController"/>
      <argument>App\Controller\Api\Controller\Evaluation\QuestionnaireController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Evaluation\ResultatController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Evaluation\ResultatController"/>
      <argument>App\Controller\Api\Controller\Evaluation\ResultatController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Faq\FaqCourseController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Faq\FaqCourseController"/>
      <argument>App\Controller\Api\Controller\Faq\FaqCourseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Payment\PayerAbonnementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Payment\PayerAbonnementController"/>
      <argument>App\Controller\Api\Controller\Payment\PayerAbonnementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Payment\PayerCoursController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Payment\PayerCoursController"/>
      <argument>App\Controller\Api\Controller\Payment\PayerCoursController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\Payment\StudentPaymentController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\Payment\StudentPaymentController"/>
      <argument>App\Controller\Api\Controller\Payment\StudentPaymentController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\SecurityController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\SecurityController"/>
      <argument>App\Controller\Api\Controller\SecurityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\User\MeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\User\MeController"/>
      <argument>App\Controller\Api\Controller\User\MeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\User\NetworkController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\User\NetworkController"/>
      <argument>App\Controller\Api\Controller\User\NetworkController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Api\Controller\User\NewController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\Controller\User\NewController"/>
      <argument>App\Controller\Api\Controller\User\NewController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Front\CourseForumController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Front\CourseForumController"/>
      <argument>App\Controller\Front\CourseForumController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Front\CoursesController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Front\CoursesController"/>
      <argument>App\Controller\Front\CoursesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Front\EvaluationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Front\EvaluationController"/>
      <argument>App\Controller\Front\EvaluationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Front\ExamController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Front\ExamController"/>
      <argument>App\Controller\Front\ExamController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Front\FaqController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Front\FaqController"/>
      <argument>App\Controller\Front\FaqController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Front\ForumController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Front\ForumController"/>
      <argument>App\Controller\Front\ForumController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Front\PaymentController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Front\PaymentController"/>
      <argument>App\Controller\Front\PaymentController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Front\coursesCategoryController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Front\coursesCategoryController"/>
      <argument>App\Controller\Front\coursesCategoryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\FrontController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\FrontController"/>
      <argument>App\Controller\FrontController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\HomeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\HomeController"/>
      <argument>App\Controller\HomeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\IInstructor\OrdersController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\IInstructor\OrdersController"/>
      <argument>App\Controller\IInstructor\OrdersController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Instructor\CourseForumController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Instructor\CourseForumController"/>
      <argument>App\Controller\Instructor\CourseForumController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Instructor\CoursesController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Instructor\CoursesController"/>
      <argument>App\Controller\Instructor\CoursesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Instructor\ExamController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Instructor\ExamController"/>
      <argument>App\Controller\Instructor\ExamController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Instructor\HomeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Instructor\HomeController"/>
      <argument>App\Controller\Instructor\HomeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Instructor\LessonController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Instructor\LessonController"/>
      <argument>App\Controller\Instructor\LessonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Instructor\NetworkController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Instructor\NetworkController"/>
      <argument>App\Controller\Instructor\NetworkController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Instructor\OrdersController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Instructor\OrdersController"/>
      <argument>App\Controller\Instructor\OrdersController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Instructor\ReviewsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Instructor\ReviewsController"/>
      <argument>App\Controller\Instructor\ReviewsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\MaintenanceController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\MaintenanceController"/>
      <argument>App\Controller\MaintenanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\PaymentControllers" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\PaymentControllers"/>
      <argument>App\Controller\PaymentControllers</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\ProfileController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ProfileController"/>
      <argument>App\Controller\ProfileController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\RegistrationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\RegistrationController"/>
      <argument>App\Controller\RegistrationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\ResetPasswordController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ResetPasswordController"/>
      <argument>App\Controller\ResetPasswordController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\SecurityController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\SecurityController"/>
      <argument>App\Controller\SecurityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Student\CourseController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Student\CourseController"/>
      <argument>App\Controller\Student\CourseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Student\EvaluationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Student\EvaluationController"/>
      <argument>App\Controller\Student\EvaluationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Student\HomeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Student\HomeController"/>
      <argument>App\Controller\Student\HomeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Student\NetworkController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Student\NetworkController"/>
      <argument>App\Controller\Student\NetworkController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\Student\PaymentController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Student\PaymentController"/>
      <argument>App\Controller\Student\PaymentController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.CshazM0.App\Controller\TermsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\TermsController"/>
      <argument>App\Controller\TermsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.CshazM0" method="withContext"/>
    </service>
    <service id=".service_locator.fuYM_Z." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.fuYM_Z..translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fuYM_Z." method="withContext"/>
    </service>
    <service id=".service_locator.otfny_1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.otfny_1.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.otfny_1" method="withContext"/>
    </service>
    <service id=".service_locator.cUcW89y" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.cUcW89y.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.cUcW89y" method="withContext"/>
    </service>
    <service id=".service_locator.etVElvN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.etVElvN.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.etVElvN" method="withContext"/>
    </service>
    <service id=".service_locator.xRhNObu" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.xRhNObu.sensio_framework_extra.view.listener" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="sensio_framework_extra.view.listener"/>
      <argument>sensio_framework_extra.view.listener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.xRhNObu" method="withContext"/>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.Xbsa8iG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.NBUFN6A" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache.app" type="service_closure" id="cache.app.taggable"/>
      </argument>
    </service>
    <service id=".service_locator.._yvSZB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="security.event_dispatcher.api" type="service_closure" id="security.event_dispatcher.api"/>
        <argument key="security.event_dispatcher.login" type="service_closure" id="security.event_dispatcher.login"/>
        <argument key="security.event_dispatcher.main" type="service_closure" id="security.event_dispatcher.main"/>
      </argument>
    </service>
    <service id=".service_locator..6hZeC_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.Kl0E_Fe" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
        <argument key="service" type="service_closure" id="container.get_routing_condition_service"/>
      </argument>
    </service>
    <service id=".service_locator.cXsfP3P" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore"/>
        <argument key="session_collector" type="service_closure" id="data_collector.request.session_collector" on-invalid="ignore"/>
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.0TACwl3" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="browser" type="service_closure" id="notifier.channel.browser"/>
        <argument key="chat" type="service_closure" id="notifier.channel.chat"/>
        <argument key="email" type="service_closure" id="notifier.channel.email"/>
        <argument key="push" type="service_closure" id="notifier.channel.push"/>
        <argument key="sms" type="service_closure" id="notifier.channel.sms"/>
      </argument>
    </service>
    <service id=".service_locator.LcVn9Hr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.LrCXAmX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
        <argument key="security.authenticator.managers_locator" type="service_closure" id="security.authenticator.managers_locator" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.firewall.event_dispatcher_locator" type="service_closure" id="security.firewall.event_dispatcher_locator"/>
        <argument key="security.firewall.map" type="service_closure" id="security.firewall.map"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
        <argument key="security.user_checker" type="service_closure" id="security.user_checker"/>
      </argument>
    </service>
    <service id=".service_locator.Ar70cHn" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.authenticator.remember_me_handler.main"/>
      </argument>
    </service>
    <service id=".service_locator.PCWEfhq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ApiPlatform\Doctrine\Orm\State\CollectionProvider" type="service_closure" id="api_platform.doctrine.orm.state.collection_provider"/>
        <argument key="ApiPlatform\Doctrine\Orm\State\ItemProvider" type="service_closure" id="api_platform.doctrine.orm.state.item_provider"/>
        <argument key="ApiPlatform\State\CreateProvider" type="service_closure" id="api_platform.state_provider.create"/>
        <argument key="ApiPlatform\State\ObjectProvider" type="service_closure" id="api_platform.state_provider.object"/>
        <argument key="api_platform.doctrine.orm.state.collection_provider" type="service_closure" id="api_platform.doctrine.orm.state.collection_provider"/>
        <argument key="api_platform.doctrine.orm.state.item_provider" type="service_closure" id="api_platform.doctrine.orm.state.item_provider"/>
        <argument key="api_platform.state_provider.create" type="service_closure" id="api_platform.state_provider.create"/>
        <argument key="api_platform.state_provider.object" type="service_closure" id="api_platform.state_provider.object"/>
      </argument>
    </service>
    <service id=".service_locator..rWkGwp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ApiPlatform\Doctrine\Common\State\PersistProcessor" type="service_closure" id="api_platform.doctrine.orm.state.persist_processor"/>
        <argument key="ApiPlatform\Doctrine\Common\State\RemoveProcessor" type="service_closure" id="api_platform.doctrine.orm.state.remove_processor"/>
        <argument key="ApiPlatform\Symfony\Messenger\Processor" type="service_closure" id="ApiPlatform\Symfony\Messenger\Processor"/>
        <argument key="api_platform.doctrine.orm.state.persist_processor" type="service_closure" id="api_platform.doctrine.orm.state.persist_processor"/>
        <argument key="api_platform.doctrine.orm.state.remove_processor" type="service_closure" id="api_platform.doctrine.orm.state.remove_processor"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.resource.link_factory.inner" class="ApiPlatform\Metadata\Resource\Factory\LinkFactory">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id=".debug.http_client.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="App\OpenApi\OpenApiFactory.inner" class="ApiPlatform\OpenApi\Factory\OpenApiFactory">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument>%api_platform.formats%</argument>
      <argument type="service" id="api_platform.openapi.options"/>
      <argument type="service" id="api_platform.pagination_options"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.doctrine.orm.entity_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.backed_enum_resolver"/>
        <argument type="service" id="debug.argument_resolver.datetime"/>
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.api_platform.argument_resolver.payload"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.serializer.inner" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id="debug.serializer.denormalizer.unwrapping"/>
        <argument type="service" id="debug.App\Serializer\AvatarNormalizer"/>
        <argument type="service" id="debug.api_platform.openapi.normalizer.api_gateway"/>
        <argument type="service" id="debug.api_platform.hydra.normalizer.constraint_violation_list"/>
        <argument type="service" id="debug.api_platform.problem.normalizer.constraint_violation_list"/>
        <argument type="service" id="debug.api_platform.openapi.normalizer.api_gateway"/>
        <argument type="service" id="debug.api_platform.hydra.normalizer.documentation"/>
        <argument type="service" id="debug.api_platform.hydra.normalizer.entrypoint"/>
        <argument type="service" id="debug.api_platform.hydra.normalizer.error"/>
        <argument type="service" id="debug.api_platform.problem.normalizer.error"/>
        <argument type="service" id="debug.serializer.normalizer.flatten_exception"/>
        <argument type="service" id="debug.serializer.normalizer.problem"/>
        <argument type="service" id="debug.serializer.normalizer.uid"/>
        <argument type="service" id="debug.api_platform.jsonld.normalizer.item"/>
        <argument type="service" id="debug.api_platform.serializer.normalizer.item"/>
        <argument type="service" id="debug.serializer.normalizer.datetime"/>
        <argument type="service" id="debug.serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="debug.serializer.normalizer.mime_message"/>
        <argument type="service" id="debug.serializer.normalizer.datetimezone"/>
        <argument type="service" id="debug.serializer.normalizer.dateinterval"/>
        <argument type="service" id="debug.serializer.normalizer.form_error"/>
        <argument type="service" id="debug.serializer.normalizer.backed_enum"/>
        <argument type="service" id="debug.serializer.normalizer.data_uri"/>
        <argument type="service" id="debug.serializer.normalizer.json_serializable"/>
        <argument type="service" id="debug.api_platform.hydra.normalizer.collection"/>
        <argument type="service" id="debug.serializer.denormalizer.array"/>
        <argument type="service" id="debug.api_platform.jsonld.normalizer.object"/>
        <argument type="service" id="debug.serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="debug.serializer.encoder.xml"/>
        <argument type="service" id="debug.serializer.encoder.json"/>
        <argument type="service" id="debug.serializer.encoder.yaml"/>
        <argument type="service" id="debug.serializer.encoder.csv"/>
        <argument type="service" id="debug.api_platform.jsonld.encoder"/>
        <argument type="service" id="debug.api_platform.problem.encoder"/>
      </argument>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory.inner" class="Doctrine\Migrations\Version\MigrationFactory">
      <factory service="doctrine.migrations.dependency_factory" method="getMigrationFactory"/>
    </service>
    <service id="var_dumper.contextualized_cli_dumper.inner" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy">
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="debug.security.firewall.authenticator.main.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.main"/>
    </service>
    <service id="debug.security.firewall.authenticator.login.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.login"/>
    </service>
    <service id="debug.security.firewall.authenticator.api.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.api"/>
    </service>
    <service id="api_platform.serializer.context_builder.filter.inner" class="ApiPlatform\Serializer\SerializerContextBuilder">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory.inner" class="ApiPlatform\JsonSchema\SchemaFactory">
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view.inner" class="ApiPlatform\Hydra\Serializer\CollectionNormalizer">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument>null</argument>
    </service>
    <service id="debug.App\Serializer\AvatarNormalizer.inner" class="App\Serializer\AvatarNormalizer" autowire="true" autoconfigure="true">
      <argument type="service" id="vich_uploader.storage.file_system"/>
    </service>
    <service id="debug.serializer.normalizer.constraint_violation_list.inner" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" autowire="true">
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="debug.serializer.normalizer.mime_message.inner" class="Symfony\Component\Serializer\Normalizer\MimeMessageNormalizer">
      <argument type="service" id="serializer.normalizer.property"/>
    </service>
    <service id="debug.serializer.normalizer.datetimezone.inner" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer"/>
    <service id="debug.serializer.normalizer.dateinterval.inner" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer"/>
    <service id="debug.serializer.normalizer.data_uri.inner" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="debug.serializer.normalizer.datetime.inner" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer"/>
    <service id="debug.serializer.normalizer.json_serializable.inner" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="debug.serializer.normalizer.problem.inner" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <argument>true</argument>
    </service>
    <service id="debug.serializer.denormalizer.unwrapping.inner" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="debug.serializer.normalizer.uid.inner" class="Symfony\Component\Serializer\Normalizer\UidNormalizer"/>
    <service id="debug.serializer.normalizer.form_error.inner" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer"/>
    <service id="debug.serializer.normalizer.object.inner" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="debug.serializer.denormalizer.array.inner" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer"/>
    <service id="debug.serializer.normalizer.backed_enum.inner" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer"/>
    <service id="debug.serializer.normalizer.flatten_exception.inner" class="Symfony\Component\Messenger\Transport\Serialization\Normalizer\FlattenExceptionNormalizer"/>
    <service id="debug.api_platform.serializer.normalizer.item.inner" class="ApiPlatform\Serializer\ItemNormalizer">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached" on-invalid="ignore"/>
      <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore"/>
    </service>
    <service id="debug.api_platform.openapi.normalizer.inner" class="ApiPlatform\OpenApi\Serializer\OpenApiNormalizer">
      <argument type="service" id=".1_Serializer~Lmia8AW"/>
    </service>
    <service id="debug.api_platform.openapi.normalizer.api_gateway.inner" class="ApiPlatform\OpenApi\Serializer\ApiGatewayNormalizer">
      <tag name="serializer.normalizer" priority="-795"/>
      <argument type="service" id="debug.api_platform.openapi.normalizer"/>
    </service>
    <service id="debug.api_platform.jsonld.normalizer.item.inner" class="ApiPlatform\JsonLd\Serializer\ItemNormalizer">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore"/>
    </service>
    <service id="debug.api_platform.jsonld.normalizer.object.inner" class="ApiPlatform\JsonLd\Serializer\ObjectNormalizer">
      <argument type="service" id="debug.serializer.normalizer.object"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.documentation.inner" class="ApiPlatform\Hydra\Serializer\DocumentationNormalizer">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.constraint_violation_list.inner" class="ApiPlatform\Hydra\Serializer\ConstraintViolationListNormalizer">
      <argument type="service" id="api_platform.router"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.entrypoint.inner" class="ApiPlatform\Hydra\Serializer\EntrypointNormalizer">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="debug.api_platform.hydra.normalizer.error.inner" class="ApiPlatform\Hydra\Serializer\ErrorNormalizer">
      <argument type="service" id="api_platform.router"/>
      <argument>true</argument>
    </service>
    <service id="debug.api_platform.problem.normalizer.constraint_violation_list.inner" class="ApiPlatform\Problem\Serializer\ConstraintViolationListNormalizer">
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="debug.api_platform.problem.normalizer.error.inner" class="ApiPlatform\Problem\Serializer\ErrorNormalizer">
      <argument>true</argument>
    </service>
    <service id="debug.serializer.encoder.xml.inner" class="Symfony\Component\Serializer\Encoder\XmlEncoder"/>
    <service id="debug.serializer.encoder.json.inner" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="debug.serializer.encoder.yaml.inner" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="debug.serializer.encoder.csv.inner" class="Symfony\Component\Serializer\Encoder\CsvEncoder"/>
    <service id="debug.api_platform.jsonld.encoder.inner" class="ApiPlatform\Serializer\JsonEncoder">
      <argument>jsonld</argument>
      <argument>null</argument>
    </service>
    <service id="debug.api_platform.problem.encoder.inner" class="ApiPlatform\Serializer\JsonEncoder">
      <argument>jsonproblem</argument>
    </service>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.doctrine.orm.entity_value_resolver.inner" class="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="doctrine.orm.entity_value_resolver.expression_language" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.backed_enum_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver"/>
    <service id="debug.argument_resolver.datetime.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver"/>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver"/>
    <service id="debug.api_platform.argument_resolver.payload.inner" class="ApiPlatform\Symfony\Bundle\ArgumentResolver\PayloadArgumentResolver">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <argument type="service" id=".service_locator.knvMuga"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <argument type="service" id=".service_locator.knvMuga"/>
    </service>
    <service id="debug.traced.messenger.bus.default.inner" class="Symfony\Component\Messenger\MessageBus">
      <argument type="iterator">
        <argument type="service" id="messenger.bus.default.middleware.traceable"/>
        <argument type="service" id="messenger.bus.default.middleware.add_bus_name_stamp_middleware"/>
        <argument type="service" id="messenger.middleware.reject_redelivered_message_middleware"/>
        <argument type="service" id="messenger.middleware.dispatch_after_current_bus"/>
        <argument type="service" id="messenger.middleware.failed_message_processing_middleware"/>
        <argument type="service" id="messenger.bus.default.middleware.send_message"/>
        <argument type="service" id="messenger.bus.default.middleware.handle_message"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver.inner" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_attribute_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Vich\UploaderBundle\Entity</argument>
      </call>
    </service>
    <service id="api_platform.serializer.mapping.class_metadata_factory.inner" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface"/>
    <service id=".errored..service_locator.KPOw2Hp.App\Entity\Abonnement" class="App\Entity\Abonnement"/>
    <service id=".errored..service_locator.eqZsSWM.App\Entity\Abonnement" class="App\Entity\Abonnement"/>
    <service id=".errored..service_locator.JYs6EHz.App\Entity\AbonnementItem" class="App\Entity\AbonnementItem"/>
    <service id=".errored..service_locator.zNI9i6M.App\Entity\AbonnementItem" class="App\Entity\AbonnementItem"/>
    <service id=".errored..service_locator.j7wOkYK.App\Entity\Categorie" class="App\Entity\Categorie"/>
    <service id=".errored..service_locator.HcAqD_t.App\Entity\Categorie" class="App\Entity\Categorie"/>
    <service id=".errored..service_locator.iPTmcBs.App\Entity\Categorie" class="App\Entity\Categorie"/>
    <service id=".errored..service_locator.auv825B.App\Entity\Chapitre" class="App\Entity\Chapitre"/>
    <service id=".errored..service_locator.LHBTlSB.App\Entity\Chapitre" class="App\Entity\Chapitre"/>
    <service id=".errored..service_locator.aaST1nn.App\Entity\Chapitre" class="App\Entity\Chapitre"/>
    <service id=".errored..service_locator..HWWlJE.App\Entity\Classe" class="App\Entity\Classe"/>
    <service id=".errored..service_locator.e8EBBee.App\Entity\Classe" class="App\Entity\Classe"/>
    <service id=".errored..service_locator.GdA86g7.App\Entity\Classe" class="App\Entity\Classe"/>
    <service id=".errored..service_locator.gMvq5pN.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.VFRfSyw.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.RgJF.d4.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.Xl2sCQI.App\Entity\Review" class="App\Entity\Review"/>
    <service id=".errored..service_locator.tGxlRXC.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.1ZVS9Vu.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.zMkT7yZ.App\Entity\Eleve" class="App\Entity\Eleve"/>
    <service id=".errored..service_locator.r0BjQku.App\Entity\Eleve" class="App\Entity\Eleve"/>
    <service id=".errored..service_locator.E5H.BTi.App\Entity\Enseignant" class="App\Entity\Enseignant"/>
    <service id=".errored..service_locator.NbL4vpV.App\Entity\Enseignant" class="App\Entity\Enseignant"/>
    <service id=".errored..service_locator.Q2J1hJr.App\Entity\Enseignant" class="App\Entity\Enseignant"/>
    <service id=".errored..service_locator.egXUG0V.App\Entity\Enseignant" class="App\Entity\Enseignant"/>
    <service id=".errored..service_locator.SvV89WQ.App\Entity\Etablissement" class="App\Entity\Etablissement"/>
    <service id=".errored..service_locator.ajDOBVr.App\Entity\Etablissement" class="App\Entity\Etablissement"/>
    <service id=".errored..service_locator.BuNYlya.App\Entity\Evaluation" class="App\Entity\Evaluation"/>
    <service id=".errored..service_locator.3PqNSe_.App\Entity\Evaluation" class="App\Entity\Evaluation"/>
    <service id=".errored..service_locator.eheopyZ.App\Entity\Evaluation" class="App\Entity\Evaluation"/>
    <service id=".errored..service_locator.IHmhRtr.App\Entity\Evaluation" class="App\Entity\Evaluation"/>
    <service id=".errored..service_locator.YSOGZde.App\Entity\EvaluationQuestion" class="App\Entity\EvaluationQuestion"/>
    <service id=".errored..service_locator.4ylJ6pP.App\Entity\EvaluationQuestion" class="App\Entity\EvaluationQuestion"/>
    <service id=".errored..service_locator.Ak2dIxa.App\Entity\Exam" class="App\Entity\Exam"/>
    <service id=".errored..service_locator.fD6gyoR.App\Entity\FAQ" class="App\Entity\FAQ"/>
    <service id=".errored..service_locator.cIzlWoj.App\Entity\FAQ" class="App\Entity\FAQ"/>
    <service id=".errored..service_locator.nuHUyxg.App\Entity\Filiere" class="App\Entity\Filiere"/>
    <service id=".errored..service_locator.WQjXpxN.App\Entity\Filiere" class="App\Entity\Filiere"/>
    <service id=".errored..service_locator.a.FNPPn.App\Entity\Filiere" class="App\Entity\Filiere"/>
    <service id=".errored..service_locator.dy6wSj2.App\Entity\Formation" class="App\Entity\Formation"/>
    <service id=".errored..service_locator.cgbC6Or.App\Entity\Formation" class="App\Entity\Formation"/>
    <service id=".errored..service_locator.GXW8MDB.App\Entity\Formation" class="App\Entity\Formation"/>
    <service id=".errored..service_locator.irtl5bF.App\Entity\Forum" class="App\Entity\Forum"/>
    <service id=".errored..service_locator.UVTlCsZ.App\Entity\Forum" class="App\Entity\Forum"/>
    <service id=".errored..service_locator.DopB_Wq.App\Entity\Sujet" class="App\Entity\Sujet"/>
    <service id=".errored..service_locator.w6TLtL4.App\Entity\ForumMessage" class="App\Entity\ForumMessage"/>
    <service id=".errored..service_locator.6Fe3VWi.App\Entity\ForumMessage" class="App\Entity\ForumMessage"/>
    <service id=".errored..service_locator.pxaUkp_.App\Entity\Lesson" class="App\Entity\Lesson"/>
    <service id=".errored..service_locator.TMKevGr.App\Entity\Lesson" class="App\Entity\Lesson"/>
    <service id=".errored..service_locator.UqTc44d.App\Entity\Lesson" class="App\Entity\Lesson"/>
    <service id=".errored..service_locator..PB0HcE.App\Entity\Media" class="App\Entity\Media"/>
    <service id=".errored..service_locator.0yBt7Av.App\Entity\Media" class="App\Entity\Media"/>
    <service id=".errored..service_locator.qvyKzbr.App\Entity\NetworkConfig" class="App\Entity\NetworkConfig"/>
    <service id=".errored..service_locator.JBkrMmK.App\Entity\NetworkConfig" class="App\Entity\NetworkConfig"/>
    <service id=".errored..service_locator.tSnRecj.App\Entity\NotificationTemplate" class="App\Entity\NotificationTemplate"/>
    <service id=".errored..service_locator.rlA3o86.App\Entity\NotificationTemplate" class="App\Entity\NotificationTemplate"/>
    <service id=".errored..service_locator.NB6SjKc.App\Entity\Pays" class="App\Entity\Pays"/>
    <service id=".errored..service_locator.vTR.b54.App\Entity\Pays" class="App\Entity\Pays"/>
    <service id=".errored..service_locator.fGeoUwi.App\Entity\Pays" class="App\Entity\Pays"/>
    <service id=".errored..service_locator.FVfhqrZ.App\Entity\Personne" class="App\Entity\Personne"/>
    <service id=".errored..service_locator.T9a0IK5.App\Entity\Personne" class="App\Entity\Personne"/>
    <service id=".errored..service_locator.wQsOg.V.App\Entity\Proposition" class="App\Entity\Proposition"/>
    <service id=".errored..service_locator.xjchgF8.App\Entity\Proposition" class="App\Entity\Proposition"/>
    <service id=".errored..service_locator.90uTyKf.App\Entity\Quiz" class="App\Entity\Quiz"/>
    <service id=".errored..service_locator.DveO1kU.App\Entity\Quiz" class="App\Entity\Quiz"/>
    <service id=".errored..service_locator.yVvQ1jo.App\Entity\User" class="App\Entity\User"/>
    <service id=".errored..service_locator.g4P3r52.App\Entity\SousSysteme" class="App\Entity\SousSysteme"/>
    <service id=".errored..service_locator.iqgcFjm.App\Entity\SousSysteme" class="App\Entity\SousSysteme"/>
    <service id=".errored..service_locator.mI1r52c.App\Entity\SousSysteme" class="App\Entity\SousSysteme"/>
    <service id=".errored..service_locator.oDD2JWx.App\Entity\Specialite" class="App\Entity\Specialite"/>
    <service id=".errored..service_locator.IZGLOcg.App\Entity\Specialite" class="App\Entity\Specialite"/>
    <service id=".errored..service_locator.iO2IILU.App\Entity\Specialite" class="App\Entity\Specialite"/>
    <service id=".errored..service_locator.LCKoqJU.App\Entity\Sujet" class="App\Entity\Sujet"/>
    <service id=".errored..service_locator.IZvv_3x.App\Entity\Term" class="App\Entity\Term"/>
    <service id=".errored..service_locator.naOR5os.App\Entity\Term" class="App\Entity\Term"/>
    <service id=".errored..service_locator.slnpeg..App\Entity\TypeEnseignement" class="App\Entity\TypeEnseignement"/>
    <service id=".errored..service_locator.u0am54A.App\Entity\TypeEnseignement" class="App\Entity\TypeEnseignement"/>
    <service id=".errored..service_locator.19S4JOS.App\Entity\TypeEnseignement" class="App\Entity\TypeEnseignement"/>
    <service id=".errored..service_locator.fSiFUO9.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.5qYIAhN.App\Entity\Lecture" class="App\Entity\Lecture"/>
    <service id=".errored..service_locator.mAe8GY..App\Entity\Eleve" class="App\Entity\Eleve"/>
    <service id=".errored..service_locator.mAe8GY..App\Entity\Lecture" class="App\Entity\Lecture"/>
    <service id=".errored..service_locator.iOqkD0R.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.vVjJUaK.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.qKbPMoI.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.qKbPMoI.App\Entity\Sujet" class="App\Entity\Sujet"/>
    <service id=".errored..service_locator.O4Tpc7i.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.zJUkcD_.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.Wb_9uAG.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.Wb_9uAG.App\Entity\Membre" class="App\Entity\Membre"/>
    <service id=".errored..service_locator.8HlNKHi.App\Entity\Membre" class="App\Entity\Membre"/>
    <service id=".errored..service_locator.8HlNKHi.App\Entity\Sujet" class="App\Entity\Sujet"/>
    <service id=".errored..service_locator.UlCPoMT.App\Entity\ForumMessage" class="App\Entity\ForumMessage"/>
    <service id=".errored..service_locator.BV48PYm.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.En7B4vF.App\Entity\Lesson" class="App\Entity\Lesson"/>
    <service id=".errored..service_locator.XBu8bEJ.App\Entity\Lecture" class="App\Entity\Lecture"/>
    <service id=".errored..service_locator.Xw7Ms4B.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.VDXxjXd.App\Entity\Evaluation" class="App\Entity\Evaluation"/>
    <service id=".errored..service_locator.S84XzAK.App\Entity\Evaluation" class="App\Entity\Evaluation"/>
    <service id=".errored..service_locator.OgsBuKp.App\Entity\Evaluation" class="App\Entity\Evaluation"/>
    <service id=".errored..service_locator.22DT_tw.App\Entity\Exam" class="App\Entity\Exam"/>
    <service id=".errored..service_locator.cGlJyZx.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.H_EpB5m.App\Entity\Abonnement" class="App\Entity\Abonnement"/>
    <service id=".errored..service_locator.Qip0gkl.App\Entity\Sujet" class="App\Entity\Sujet"/>
    <service id=".errored..service_locator.RBosDZz.App\Entity\Chapitre" class="App\Entity\Chapitre"/>
    <service id=".errored..service_locator.0I2c_WY.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.gBs6jx2.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.w4GY4t1.App\Entity\Quiz" class="App\Entity\Quiz"/>
    <service id=".errored..service_locator.fzX53bK.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.JpTvOfs.App\Entity\Lesson" class="App\Entity\Lesson"/>
    <service id=".errored..service_locator.HMsaM1z.App\Entity\Review" class="App\Entity\Review"/>
    <service id=".errored..service_locator.80wW8wg.App\Entity\Cours" class="App\Entity\Cours"/>
    <service id=".errored..service_locator.80wW8wg.App\Entity\Eleve" class="App\Entity\Eleve"/>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_invalidate_tags.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:invalidate-tags</argument>
      <argument type="collection"/>
      <argument>Invalidate cache tags for all or a specific pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_invalidate_tags"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>Lists all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.messenger_consume_messages.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:consume</argument>
      <argument type="collection"/>
      <argument>Consume messages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_consume_messages"/>
    </service>
    <service id=".console.command.messenger_setup_transports.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:setup-transports</argument>
      <argument type="collection"/>
      <argument>Prepare the required infrastructure for the transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_setup_transports"/>
    </service>
    <service id=".console.command.messenger_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:messenger</argument>
      <argument type="collection"/>
      <argument>List messages you can dispatch using the message buses</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_debug"/>
    </service>
    <service id=".console.command.messenger_stop_workers.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stop-workers</argument>
      <argument type="collection"/>
      <argument>Stop workers after their current message</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stop_workers"/>
    </service>
    <service id=".console.command.messenger_failed_messages_retry.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:retry</argument>
      <argument type="collection"/>
      <argument>Retry one or more messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_retry"/>
    </service>
    <service id=".console.command.messenger_failed_messages_show.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:show</argument>
      <argument type="collection"/>
      <argument>Show one or more messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_show"/>
    </service>
    <service id=".console.command.messenger_failed_messages_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:remove</argument>
      <argument type="collection"/>
      <argument>Remove given messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_remove"/>
    </service>
    <service id=".console.command.messenger_stats.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stats</argument>
      <argument type="collection"/>
      <argument>Show the message count for one or more transports</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stats"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.translation_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:translation</argument>
      <argument type="collection"/>
      <argument>Display translation messages information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_debug"/>
    </service>
    <service id=".console.command.translation_extract.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:extract</argument>
      <argument type="collection"/>
      <argument>Extract missing translations keys from code to translation files.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_extract"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.translation_pull.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:pull</argument>
      <argument type="collection"/>
      <argument>Pull translations from a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_pull"/>
    </service>
    <service id=".console.command.translation_push.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:push</argument>
      <argument type="collection"/>
      <argument>Push translations to a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_push"/>
    </service>
    <service id=".console.command.xliff_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:xliff</argument>
      <argument type="collection"/>
      <argument>Lint an XLIFF file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.xliff_lint"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.form_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:form</argument>
      <argument type="collection"/>
      <argument>Display form type information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.form_debug"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".console.command.mailer_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>mailer:test</argument>
      <argument type="collection"/>
      <argument>Test Mailer transports by sending an email</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.mailer_test"/>
    </service>
    <service id=".var_dumper.command.server_dump.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:dump</argument>
      <argument type="collection"/>
      <argument>Start a dump server that collects and displays dumps in a single place</argument>
      <argument>false</argument>
      <argument type="service_closure" id="var_dumper.command.server_dump"/>
    </service>
    <service id=".monolog.command.server_log.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:log</argument>
      <argument type="collection"/>
      <argument>Start a log server that displays logs in real time</argument>
      <argument>false</argument>
      <argument type="service_closure" id="monolog.command.server_log"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id=".security.command.debug_firewall.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:firewall</argument>
      <argument type="collection"/>
      <argument>Display information about your security firewall(s)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.debug_firewall"/>
    </service>
    <service id=".security.command.user_password_hash.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:hash-password</argument>
      <argument type="collection"/>
      <argument>Hash a user password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_hash"/>
    </service>
    <service id=".lexik_jwt_authentication.check_config_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lexik:jwt:check-config</argument>
      <argument type="collection"/>
      <argument>Checks that the bundle is properly configured.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="lexik_jwt_authentication.check_config_command"/>
    </service>
    <service id=".lexik_jwt_authentication.generate_token_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lexik:jwt:generate-token</argument>
      <argument type="collection"/>
      <argument>Generates a JWT token for a given user.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="lexik_jwt_authentication.generate_token_command"/>
    </service>
    <service id=".lexik_jwt_authentication.generate_keypair_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lexik:jwt:generate-keypair</argument>
      <argument type="collection"/>
      <argument>Generate public/private keys for use in your application.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="lexik_jwt_authentication.generate_keypair_command"/>
    </service>
    <service id=".Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>gesdinet:jwt:clear</argument>
      <argument type="collection"/>
      <argument>Clear invalid refresh tokens.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand"/>
    </service>
    <service id=".Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>gesdinet:jwt:revoke</argument>
      <argument type="collection"/>
      <argument>Revoke a refresh token</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand"/>
    </service>
    <service id=".fos_js_routing.dump_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>fos:js-routing:dump</argument>
      <argument type="collection"/>
      <argument>Dumps exposed routes to the filesystem</argument>
      <argument>false</argument>
      <argument type="service_closure" id="fos_js_routing.dump_command"/>
    </service>
    <service id=".fos_js_routing.router_debug_exposed_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>fos:js-routing:debug</argument>
      <argument type="collection"/>
      <argument>Displays currently exposed routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="fos_js_routing.router_debug_exposed_command"/>
    </service>
    <service id=".maker.auto_command.make_auth.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:auth</argument>
      <argument type="collection"/>
      <argument>Creates a Guard authenticator of different flavors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_auth"/>
    </service>
    <service id=".maker.auto_command.make_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:command</argument>
      <argument type="collection"/>
      <argument>Creates a new console command class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_command"/>
    </service>
    <service id=".maker.auto_command.make_twig_component.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:twig-component</argument>
      <argument type="collection"/>
      <argument>Creates a twig (or live) component</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_twig_component"/>
    </service>
    <service id=".maker.auto_command.make_controller.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:controller</argument>
      <argument type="collection"/>
      <argument>Creates a new controller class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_controller"/>
    </service>
    <service id=".maker.auto_command.make_crud.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:crud</argument>
      <argument type="collection"/>
      <argument>Creates CRUD for Doctrine entity class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_crud"/>
    </service>
    <service id=".maker.auto_command.make_docker_database.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:docker:database</argument>
      <argument type="collection"/>
      <argument>Adds a database container to your docker-compose.yaml file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_docker_database"/>
    </service>
    <service id=".maker.auto_command.make_entity.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:entity</argument>
      <argument type="collection"/>
      <argument>Creates or updates a Doctrine entity class, and optionally an API Platform resource</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_entity"/>
    </service>
    <service id=".maker.auto_command.make_fixtures.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:fixtures</argument>
      <argument type="collection"/>
      <argument>Creates a new class to load Doctrine fixtures</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_fixtures"/>
    </service>
    <service id=".maker.auto_command.make_form.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:form</argument>
      <argument type="collection"/>
      <argument>Creates a new form class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_form"/>
    </service>
    <service id=".maker.auto_command.make_message.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:message</argument>
      <argument type="collection"/>
      <argument>Creates a new message and handler</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_message"/>
    </service>
    <service id=".maker.auto_command.make_messenger_middleware.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:messenger-middleware</argument>
      <argument type="collection"/>
      <argument>Creates a new messenger middleware</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_messenger_middleware"/>
    </service>
    <service id=".maker.auto_command.make_registration_form.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:registration-form</argument>
      <argument type="collection"/>
      <argument>Creates a new registration form system</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_registration_form"/>
    </service>
    <service id=".maker.auto_command.make_reset_password.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:reset-password</argument>
      <argument type="collection"/>
      <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_reset_password"/>
    </service>
    <service id=".maker.auto_command.make_serializer_encoder.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:serializer:encoder</argument>
      <argument type="collection"/>
      <argument>Creates a new serializer encoder class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_serializer_encoder"/>
    </service>
    <service id=".maker.auto_command.make_serializer_normalizer.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:serializer:normalizer</argument>
      <argument type="collection"/>
      <argument>Creates a new serializer normalizer class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_serializer_normalizer"/>
    </service>
    <service id=".maker.auto_command.make_subscriber.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:subscriber</argument>
      <argument type="collection"/>
      <argument>Creates a new event subscriber class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_subscriber"/>
    </service>
    <service id=".maker.auto_command.make_twig_extension.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:twig-extension</argument>
      <argument type="collection"/>
      <argument>Creates a new Twig extension with its runtime class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_twig_extension"/>
    </service>
    <service id=".maker.auto_command.make_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:test</argument>
      <argument type="collection">
        <argument>make:unit-test</argument>
        <argument>make:functional-test</argument>
      </argument>
      <argument>Creates a new test class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_test"/>
    </service>
    <service id=".maker.auto_command.make_validator.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:validator</argument>
      <argument type="collection"/>
      <argument>Creates a new validator and constraint class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_validator"/>
    </service>
    <service id=".maker.auto_command.make_voter.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:voter</argument>
      <argument type="collection"/>
      <argument>Creates a new security voter class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_voter"/>
    </service>
    <service id=".maker.auto_command.make_user.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:user</argument>
      <argument type="collection"/>
      <argument>Creates a new security user class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_user"/>
    </service>
    <service id=".maker.auto_command.make_migration.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:migration</argument>
      <argument type="collection"/>
      <argument>Creates a new migration based on database changes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_migration"/>
    </service>
    <service id=".maker.auto_command.make_stimulus_controller.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:stimulus-controller</argument>
      <argument type="collection"/>
      <argument>Creates a new Stimulus controller</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_stimulus_controller"/>
    </service>
    <service id=".maker.auto_command.make_security_form_login.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:security:form-login</argument>
      <argument type="collection"/>
      <argument>Generate the code needed for the form_login authenticator</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_security_form_login"/>
    </service>
    <service id=".maker.auto_command.make_state_processor.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:state-processor</argument>
      <argument type="collection"/>
      <argument>Creates an API Platform state processor</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_state_processor"/>
    </service>
    <service id=".maker.auto_command.make_state_provider.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:state-provider</argument>
      <argument type="collection"/>
      <argument>Creates an API Platform state provider</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_state_provider"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.gczNBzI"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:invalidate-tags">console.command.cache_pool_invalidate_tags</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="messenger:consume">console.command.messenger_consume_messages</argument>
        <argument key="messenger:setup-transports">console.command.messenger_setup_transports</argument>
        <argument key="debug:messenger">console.command.messenger_debug</argument>
        <argument key="messenger:stop-workers">console.command.messenger_stop_workers</argument>
        <argument key="messenger:failed:retry">console.command.messenger_failed_messages_retry</argument>
        <argument key="messenger:failed:show">console.command.messenger_failed_messages_show</argument>
        <argument key="messenger:failed:remove">console.command.messenger_failed_messages_remove</argument>
        <argument key="messenger:stats">console.command.messenger_stats</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:extract">console.command.translation_extract</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="translation:pull">console.command.translation_pull</argument>
        <argument key="translation:push">console.command.translation_push</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="mailer:test">console.command.mailer_test</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:sync-metadata-storage">doctrine_migrations.sync_metadata_command</argument>
        <argument key="doctrine:migrations:list">doctrine_migrations.versions_command</argument>
        <argument key="doctrine:migrations:current">doctrine_migrations.current_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="server:log">monolog.command.server_log</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:firewall">security.command.debug_firewall</argument>
        <argument key="security:hash-password">security.command.user_password_hash</argument>
        <argument key="elfinder:install">fm_elfinder.command.installer</argument>
        <argument key="reset-password:remove-expired">SymfonyCasts\Bundle\ResetPassword\Command\ResetPasswordRemoveExpiredCommand</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="api:json-schema:generate">api_platform.json_schema.json_schema_generate_command</argument>
        <argument key="api:openapi:export">api_platform.openapi.command</argument>
        <argument key="debug:api-resource">debug.api_platform.debug_resource.command</argument>
        <argument key="lexik:jwt:check-config">lexik_jwt_authentication.check_config_command</argument>
        <argument key="lexik:jwt:generate-token">lexik_jwt_authentication.generate_token_command</argument>
        <argument key="lexik:jwt:generate-keypair">lexik_jwt_authentication.generate_keypair_command</argument>
        <argument key="gesdinet:jwt:clear">Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand</argument>
        <argument key="gesdinet:jwt:revoke">Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand</argument>
        <argument key="vich:mapping:debug-class">vich_uploader.command.mapping_debug_class</argument>
        <argument key="vich:mapping:debug">vich_uploader.command.mapping_debug</argument>
        <argument key="vich:mapping:list-classes">vich_uploader.command.mapping_list_classes</argument>
        <argument key="fos:js-routing:dump">fos_js_routing.dump_command</argument>
        <argument key="fos:js-routing:debug">fos_js_routing.router_debug_exposed_command</argument>
        <argument key="ckeditor:install">fos_ck_editor.command.installer</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:twig-component">maker.auto_command.make_twig_component</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:docker:database">maker.auto_command.make_docker_database</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:message">maker.auto_command.make_message</argument>
        <argument key="make:messenger-middleware">maker.auto_command.make_messenger_middleware</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:reset-password">maker.auto_command.make_reset_password</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:test">maker.auto_command.make_test</argument>
        <argument key="make:unit-test">maker.auto_command.make_test</argument>
        <argument key="make:functional-test">maker.auto_command.make_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
        <argument key="make:stimulus-controller">maker.auto_command.make_stimulus_controller</argument>
        <argument key="make:security:form-login">maker.auto_command.make_security_form_login</argument>
        <argument key="make:state-processor">maker.auto_command.make_state_processor</argument>
        <argument key="make:state-provider">maker.auto_command.make_state_provider</argument>
      </argument>
    </service>
    <service id=".service_locator.gczNBzI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id=".console.command.cache_pool_invalidate_tags.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id=".console.command.messenger_consume_messages.lazy"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id=".console.command.messenger_setup_transports.lazy"/>
        <argument key="console.command.messenger_debug" type="service_closure" id=".console.command.messenger_debug.lazy"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id=".console.command.messenger_stop_workers.lazy"/>
        <argument key="console.command.messenger_failed_messages_retry" type="service_closure" id=".console.command.messenger_failed_messages_retry.lazy"/>
        <argument key="console.command.messenger_failed_messages_show" type="service_closure" id=".console.command.messenger_failed_messages_show.lazy"/>
        <argument key="console.command.messenger_failed_messages_remove" type="service_closure" id=".console.command.messenger_failed_messages_remove.lazy"/>
        <argument key="console.command.messenger_stats" type="service_closure" id=".console.command.messenger_stats.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.translation_debug" type="service_closure" id=".console.command.translation_debug.lazy"/>
        <argument key="console.command.translation_extract" type="service_closure" id=".console.command.translation_extract.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.translation_pull" type="service_closure" id=".console.command.translation_pull.lazy"/>
        <argument key="console.command.translation_push" type="service_closure" id=".console.command.translation_push.lazy"/>
        <argument key="console.command.xliff_lint" type="service_closure" id=".console.command.xliff_lint.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.form_debug" type="service_closure" id=".console.command.form_debug.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="console.command.mailer_test" type="service_closure" id=".console.command.mailer_test.lazy"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.mapping_convert_command" type="service_closure" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service_closure" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine.mapping_import_command" type="service_closure" id="doctrine.mapping_import_command"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id="doctrine_migrations.sync_metadata_command"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id="doctrine_migrations.versions_command"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id="doctrine_migrations.current_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id="doctrine_migrations.version_command"/>
        <argument key="var_dumper.command.server_dump" type="service_closure" id=".var_dumper.command.server_dump.lazy"/>
        <argument key="monolog.command.server_log" type="service_closure" id=".monolog.command.server_log.lazy"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="security.command.debug_firewall" type="service_closure" id=".security.command.debug_firewall.lazy"/>
        <argument key="security.command.user_password_hash" type="service_closure" id=".security.command.user_password_hash.lazy"/>
        <argument key="fm_elfinder.command.installer" type="service_closure" id="fm_elfinder.command.installer"/>
        <argument key="SymfonyCasts\Bundle\ResetPassword\Command\ResetPasswordRemoveExpiredCommand" type="service_closure" id="SymfonyCasts\Bundle\ResetPassword\Command\ResetPasswordRemoveExpiredCommand"/>
        <argument key="doctrine.fixtures_load_command" type="service_closure" id="doctrine.fixtures_load_command"/>
        <argument key="api_platform.json_schema.json_schema_generate_command" type="service_closure" id="api_platform.json_schema.json_schema_generate_command"/>
        <argument key="api_platform.openapi.command" type="service_closure" id="api_platform.openapi.command"/>
        <argument key="debug.api_platform.debug_resource.command" type="service_closure" id="debug.api_platform.debug_resource.command"/>
        <argument key="lexik_jwt_authentication.check_config_command" type="service_closure" id=".lexik_jwt_authentication.check_config_command.lazy"/>
        <argument key="lexik_jwt_authentication.generate_token_command" type="service_closure" id=".lexik_jwt_authentication.generate_token_command.lazy"/>
        <argument key="lexik_jwt_authentication.generate_keypair_command" type="service_closure" id=".lexik_jwt_authentication.generate_keypair_command.lazy"/>
        <argument key="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand" type="service_closure" id=".Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand.lazy"/>
        <argument key="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand" type="service_closure" id=".Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand.lazy"/>
        <argument key="vich_uploader.command.mapping_debug_class" type="service_closure" id="vich_uploader.command.mapping_debug_class"/>
        <argument key="vich_uploader.command.mapping_debug" type="service_closure" id="vich_uploader.command.mapping_debug"/>
        <argument key="vich_uploader.command.mapping_list_classes" type="service_closure" id="vich_uploader.command.mapping_list_classes"/>
        <argument key="fos_js_routing.dump_command" type="service_closure" id=".fos_js_routing.dump_command.lazy"/>
        <argument key="fos_js_routing.router_debug_exposed_command" type="service_closure" id=".fos_js_routing.router_debug_exposed_command.lazy"/>
        <argument key="fos_ck_editor.command.installer" type="service_closure" id="fos_ck_editor.command.installer"/>
        <argument key="maker.auto_command.make_auth" type="service_closure" id=".maker.auto_command.make_auth.lazy"/>
        <argument key="maker.auto_command.make_command" type="service_closure" id=".maker.auto_command.make_command.lazy"/>
        <argument key="maker.auto_command.make_twig_component" type="service_closure" id=".maker.auto_command.make_twig_component.lazy"/>
        <argument key="maker.auto_command.make_controller" type="service_closure" id=".maker.auto_command.make_controller.lazy"/>
        <argument key="maker.auto_command.make_crud" type="service_closure" id=".maker.auto_command.make_crud.lazy"/>
        <argument key="maker.auto_command.make_docker_database" type="service_closure" id=".maker.auto_command.make_docker_database.lazy"/>
        <argument key="maker.auto_command.make_entity" type="service_closure" id=".maker.auto_command.make_entity.lazy"/>
        <argument key="maker.auto_command.make_fixtures" type="service_closure" id=".maker.auto_command.make_fixtures.lazy"/>
        <argument key="maker.auto_command.make_form" type="service_closure" id=".maker.auto_command.make_form.lazy"/>
        <argument key="maker.auto_command.make_message" type="service_closure" id=".maker.auto_command.make_message.lazy"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service_closure" id=".maker.auto_command.make_messenger_middleware.lazy"/>
        <argument key="maker.auto_command.make_registration_form" type="service_closure" id=".maker.auto_command.make_registration_form.lazy"/>
        <argument key="maker.auto_command.make_reset_password" type="service_closure" id=".maker.auto_command.make_reset_password.lazy"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service_closure" id=".maker.auto_command.make_serializer_encoder.lazy"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service_closure" id=".maker.auto_command.make_serializer_normalizer.lazy"/>
        <argument key="maker.auto_command.make_subscriber" type="service_closure" id=".maker.auto_command.make_subscriber.lazy"/>
        <argument key="maker.auto_command.make_twig_extension" type="service_closure" id=".maker.auto_command.make_twig_extension.lazy"/>
        <argument key="maker.auto_command.make_test" type="service_closure" id=".maker.auto_command.make_test.lazy"/>
        <argument key="maker.auto_command.make_validator" type="service_closure" id=".maker.auto_command.make_validator.lazy"/>
        <argument key="maker.auto_command.make_voter" type="service_closure" id=".maker.auto_command.make_voter.lazy"/>
        <argument key="maker.auto_command.make_user" type="service_closure" id=".maker.auto_command.make_user.lazy"/>
        <argument key="maker.auto_command.make_migration" type="service_closure" id=".maker.auto_command.make_migration.lazy"/>
        <argument key="maker.auto_command.make_stimulus_controller" type="service_closure" id=".maker.auto_command.make_stimulus_controller.lazy"/>
        <argument key="maker.auto_command.make_security_form_login" type="service_closure" id=".maker.auto_command.make_security_form_login.lazy"/>
        <argument key="maker.auto_command.make_state_processor" type="service_closure" id=".maker.auto_command.make_state_processor.lazy"/>
        <argument key="maker.auto_command.make_state_provider" type="service_closure" id=".maker.auto_command.make_state_provider.lazy"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument>WLRVIX2C2G</argument>
      <argument>0</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>BdFawG2u0Q</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>jClYJILeAW</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>k24nixlPa8</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>3lLjFp1GfN</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>QzXRB25R8j</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.messenger.restart_workers_signal.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument>PCpx5Zo8mQ</argument>
      <argument>0</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.validator_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>YogCVSd0zF</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>ro96METMqi</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_is_granted_attribute_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>pusN9vbl7b</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_token_verifier.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>lpA6Ubr11+</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.route_name_resolver.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>z7BWYyy4x7</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.resource.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>xdHmcnglKF</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.property.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>hkugGRjCtd</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.resource_collection.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>RISWOuvmJu</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/clients/client0/web1/web/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.fvqxOHC" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Extension\SerializerRuntime" type="service_closure" id="twig.runtime.serializer"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service_closure" id="twig.form.renderer"/>
        <argument key="Knp\Bundle\PaginatorBundle\Twig\Extension\PaginationRuntime" type="service_closure" id="Knp\Bundle\PaginatorBundle\Twig\Extension\PaginationRuntime"/>
        <argument key="Vich\UploaderBundle\Twig\Extension\UploaderExtensionRuntime" type="service_closure" id="Vich\UploaderBundle\Twig\Extension\UploaderExtensionRuntime"/>
      </argument>
    </service>
    <service id="App\Kernel" alias="kernel" public="true"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias=".debug.http_client"/>
    <service id="mailer" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.default_transport"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer"/>
    <service id="Symfony\Contracts\Translation\LocaleAwareInterface" alias="translation.locale_switcher"/>
    <service id="Symfony\Component\Translation\LocaleSwitcher" alias="translation.locale_switcher"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="debug.serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="debug.serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="debug.serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="debug.serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="debug.serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="debug.serializer.normalizer.object"/>
    <service id="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" alias="serializer.normalizer.property">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="api_platform.serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="cache.default_doctrine_dbal_provider" alias="doctrine.dbal.default_connection"/>
    <service id="SessionHandlerInterface" alias="session.handler.native"/>
    <service id="session.storage.factory" alias="session.storage.factory.native"/>
    <service id="session.handler" alias="session.handler.native"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory"/>
    <service id="form.property_accessor" alias="property_accessor"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator"/>
    <service id="Symfony\Component\Messenger\Transport\Serialization\SerializerInterface" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.default_bus" alias="debug.traced.messenger.bus.default" public="true"/>
    <service id="Symfony\Component\Messenger\MessageBusInterface" alias="debug.traced.messenger.bus.default"/>
    <service id="messenger.default_serializer" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.failure_transports.default" alias="messenger.transport.failed"/>
    <service id="Symfony\Component\Notifier\NotifierInterface" alias="notifier"/>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="cache.doctrine.orm.default.metadata"/>
    <service id="doctrine.orm.default_result_cache" alias="cache.doctrine.orm.default.result"/>
    <service id="doctrine.orm.default_query_cache" alias="cache.doctrine.orm.default.query"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="doctrine.migrations.metadata_storage" alias="doctrine.migrations.storage.table_storage"/>
    <service id="Twig_Environment" alias="twig"/>
    <service id="Twig\Environment" alias="twig"/>
    <service id="Symfony\Component\Mime\BodyRendererInterface" alias="twig.mime_body_renderer"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage"/>
    <service id="Symfony\Bundle\SecurityBundle\Security" alias="security.helper"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper">
      <deprecated package="symfony/security-bundle" version="6.2">The "%alias_id%" service alias is deprecated, use "Symfony\Bundle\SecurityBundle\Security" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall"/>
    <service id="Symfony\Component\Security\Http\FirewallMapInterface" alias="security.firewall.map"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" alias="security.password_hasher_factory"/>
    <service id="security.password_hasher" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" alias="security.user_authenticator"/>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="Symfony\Component\Security\Http\RememberMe\RememberMeHandlerInterface" alias="security.authenticator.firewall_aware_remember_me_handler"/>
    <service id="security.user_checker.main" alias="security.user_checker"/>
    <service id="security.authentication.session_strategy.login" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.login" alias="security.user_checker"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="security.user_checker"/>
    <service id="security.firewall.context_locator" alias=".service_locator.EqDN9r1"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default"/>
    <service id="SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelperInterface" alias="symfonycasts.verify_email.helper"/>
    <service id="FM\ElfinderBundle\Loader\ElFinderLoader" alias="fm_elfinder.loader.default"/>
    <service id="fm_elfinder.configurator" alias="fm_elfinder.configurator.default"/>
    <service id="fm_elfinder.loader" alias="fm_elfinder.loader.default" public="true"/>
    <service id="Knp\Component\Pager\PaginatorInterface" alias="knp_paginator"/>
    <service id="Knp\Component\Pager\ArgumentAccess\ArgumentAccessInterface" alias="Knp\Component\Pager\ArgumentAccess\RequestArgumentAccess"/>
    <service id="SymfonyCasts\Bundle\ResetPassword\ResetPasswordHelperInterface" alias="symfonycasts.reset_password.helper"/>
    <service id="api_platform.serializer" alias="debug.serializer"/>
    <service id="api_platform.property_accessor" alias="property_accessor"/>
    <service id="api_platform.property_info" alias="property_info"/>
    <service id="ApiPlatform\Api\ResourceClassResolverInterface" alias="api_platform.resource_class_resolver"/>
    <service id="ApiPlatform\Api\UrlGeneratorInterface" alias="api_platform.router"/>
    <service id="ApiPlatform\Serializer\SerializerContextBuilderInterface" alias="api_platform.serializer.context_builder.filter"/>
    <service id="ApiPlatform\Serializer\Filter\PropertyFilter" alias="api_platform.serializer.property_filter"/>
    <service id="ApiPlatform\Serializer\Filter\GroupFilter" alias="api_platform.serializer.group_filter"/>
    <service id="ApiPlatform\Action\PlaceholderAction" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.post_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.patch_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.put_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.delete_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="ApiPlatform\Action\NotFoundAction" alias="api_platform.action.not_found" public="true"/>
    <service id="ApiPlatform\Action\NotExposedAction" alias="api_platform.action.not_exposed" public="true"/>
    <service id="api_platform.identifiers_extractor" alias="api_platform.api.identifiers_extractor"/>
    <service id="ApiPlatform\Api\IdentifiersExtractorInterface" alias="api_platform.api.identifiers_extractor"/>
    <service id="api_platform.iri_converter" alias="api_platform.symfony.iri_converter"/>
    <service id="ApiPlatform\Api\IriConverterInterface" alias="api_platform.symfony.iri_converter"/>
    <service id="api_platform.state_provider" alias="api_platform.state_provider.locator"/>
    <service id="ApiPlatform\State\Pagination\Pagination" alias="api_platform.pagination"/>
    <service id="api_platform.state_processor" alias="api_platform.state_processor.locator"/>
    <service id="ApiPlatform\State\Pagination\PaginationOptions" alias="api_platform.pagination_options"/>
    <service id="ApiPlatform\State\CreateProvider" alias="api_platform.state_provider.create"/>
    <service id="ApiPlatform\State\ObjectProvider" alias="api_platform.state_provider.object"/>
    <service id="api_platform.path_segment_name_generator" alias="api_platform.metadata.path_segment_name_generator.underscore"/>
    <service id="api_platform.metadata.resource.name_collection_factory" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="ApiPlatform\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="api_platform.metadata.property.name_collection_factory" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="api_platform.metadata.property.metadata_factory" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="ApiPlatform\Metadata\Property\Factory\PropertyMetadataFactoryInterface" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory" alias="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    <service id="ApiPlatform\Metadata\Resource\Factory\ResourceMetadataCollectionFactoryInterface" alias="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    <service id="ApiPlatform\Metadata\Operation\Factory\OperationMetadataFactoryInterface" alias="api_platform.metadata.operation.metadata_factory"/>
    <service id="ApiPlatform\JsonSchema\TypeFactoryInterface" alias="api_platform.json_schema.type_factory"/>
    <service id="ApiPlatform\JsonSchema\SchemaFactoryInterface" alias="api_platform.hydra.json_schema.schema_factory"/>
    <service id="ApiPlatform\OpenApi\Serializer\OpenApiNormalizer" alias="debug.api_platform.openapi.normalizer.api_gateway"/>
    <service id="ApiPlatform\OpenApi\Options" alias="api_platform.openapi.options"/>
    <service id="ApiPlatform\OpenApi\Factory\OpenApiFactoryInterface" alias="lexik_jwt_authentication.api_platform.openapi.factory"/>
    <service id="api_platform.swagger_ui.listener" alias="api_platform.swagger.listener.ui"/>
    <service id="ApiPlatform\Doctrine\Common\State\RemoveProcessor" alias="api_platform.doctrine.orm.state.remove_processor"/>
    <service id="ApiPlatform\Doctrine\Common\State\PersistProcessor" alias="api_platform.doctrine.orm.state.persist_processor"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" alias="api_platform.doctrine.orm.order_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\RangeFilter" alias="api_platform.doctrine.orm.range_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\DateFilter" alias="api_platform.doctrine.orm.date_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\BooleanFilter" alias="api_platform.doctrine.orm.boolean_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\NumericFilter" alias="api_platform.doctrine.orm.numeric_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\ExistsFilter" alias="api_platform.doctrine.orm.exists_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\EagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.eager_loading"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\FilterExtension" alias="api_platform.doctrine.orm.query_extension.filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\FilterEagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.filter_eager_loading"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\PaginationExtension" alias="api_platform.doctrine.orm.query_extension.pagination"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\OrderExtension" alias="api_platform.doctrine.orm.query_extension.order"/>
    <service id="ApiPlatform\Doctrine\Orm\State\CollectionProvider" alias="api_platform.doctrine.orm.state.collection_provider"/>
    <service id="ApiPlatform\Doctrine\Orm\State\ItemProvider" alias="api_platform.doctrine.orm.state.item_provider"/>
    <service id="api_platform.state.item_provider" alias="api_platform.doctrine.orm.state.item_provider"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" alias="api_platform.doctrine.orm.search_filter"/>
    <service id="ApiPlatform\Validator\ValidatorInterface" alias="api_platform.validator"/>
    <service id="api_platform.message_bus" alias="debug.traced.messenger.bus.default"/>
    <service id="api_platform.security.expression_language" alias="security.expression_language"/>
    <service id="ApiPlatform\Symfony\Security\ResourceAccessCheckerInterface" alias="api_platform.security.resource_access_checker"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface" alias="lexik_jwt_authentication.jws_provider.lcobucci"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler" alias="lexik_jwt_authentication.handler.authentication_success"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler" alias="lexik_jwt_authentication.handler.authentication_failure"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\TokenExtractorInterface" alias="lexik_jwt_authentication.extractor.chain_extractor"/>
    <service id="lexik_jwt_authentication.jwt_token_authenticator" alias="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
    <service id="lexik_jwt_authentication.encoder" alias="lexik_jwt_authentication.encoder.lcobucci" public="true"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface" alias="lexik_jwt_authentication.encoder.lcobucci"/>
    <service id="lexik_jwt_authentication.key_loader" alias="lexik_jwt_authentication.key_loader.raw" public="true"/>
    <service id="Gesdinet\JWTRefreshTokenBundle\Generator\RefreshTokenGeneratorInterface" alias="gesdinet.jwtrefreshtoken.refresh_token_generator"/>
    <service id="Gesdinet\JWTRefreshTokenBundle\Model\RefreshTokenManagerInterface" alias="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
    <service id="Gesdinet\JWTRefreshTokenBundle\Request\Extractor\ExtractorInterface" alias="gesdinet.jwtrefreshtoken.request.extractor.chain"/>
    <service id="vich_uploader.storage" alias="vich_uploader.storage.file_system"/>
    <service id="Vich\UploaderBundle\Storage\StorageInterface" alias="vich_uploader.storage.file_system"/>
    <service id="Vich\UploaderBundle\Storage\FileSystemStorage" alias="vich_uploader.storage.file_system"/>
    <service id="vich_uploader.metadata_driver" alias="vich_uploader.metadata_driver.chain"/>
    <service id="vich_uploader.metadata.cache" alias="vich_uploader.metadata.cache.file_cache"/>
    <service id="Vich\UploaderBundle\Mapping\PropertyMappingResolverInterface" alias="vich_uploader.property_mapping_resolver"/>
    <service id="Vich\UploaderBundle\Mapping\PropertyMappingFactory" alias="vich_uploader.property_mapping_factory"/>
    <service id="vich_uploader.namer_uniqid" alias="Vich\UploaderBundle\Naming\UniqidNamer" public="true"/>
    <service id="vich_uploader.namer_property" alias="Vich\UploaderBundle\Naming\PropertyNamer" public="true"/>
    <service id="vich_uploader.namer_origname" alias="Vich\UploaderBundle\Naming\OrignameNamer" public="true"/>
    <service id="vich_uploader.namer_hash" alias="Vich\UploaderBundle\Naming\HashNamer" public="true"/>
    <service id="vich_uploader.namer_base64" alias="Vich\UploaderBundle\Naming\Base64Namer" public="true"/>
    <service id="vich_uploader.directory_namer_subdir" alias="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_directory_property" alias="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_directory_current_date_time" alias="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_smart_unique" alias="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true"/>
    <service id="Vich\UploaderBundle\Handler\DownloadHandler" alias="vich_uploader.download_handler"/>
    <service id="Vich\UploaderBundle\Handler\UploadHandler" alias="vich_uploader.upload_handler"/>
    <service id="Vich\UploaderBundle\Form\Type\VichFileType" alias="vich_uploader.form.type.file"/>
    <service id="Vich\UploaderBundle\Form\Type\VichImageType" alias="vich_uploader.form.type.image"/>
    <service id="fos_js_routing.router" alias="router.default"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.7nzbL4K" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.knvMuga"/>
    <service id="doctrine.id_generator_locator" alias=".service_locator.KLVvNIq"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $messengerLogger" alias="monolog.logger.messenger"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $mailerLogger" alias="monolog.logger.mailer"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $debugLogger" alias="monolog.logger.debug"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $deprecationLogger" alias="monolog.logger.deprecation"/>
    <service id="api_platform.name_converter" alias="serializer.name_converter.metadata_aware"/>
    <service id="gesdinet.jwtrefreshtoken.object_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="gesdinet.jwtrefreshtoken.user_checker" alias="security.user_checker"/>
    <service id=".service_locator.GsIjbjK" alias="messenger.receiver_locator"/>
    <service id=".service_locator.Q7if2wv" alias="messenger.retry_strategy_locator"/>
    <service id=".service_locator.ZBZXtOS" alias=".service_locator.NZdAz3P"/>
    <service id=".service_locator.k3s3K.2" alias=".service_locator.EqDN9r1"/>
    <service id=".service_locator.bnaLdkn" alias="api_platform.serializer_locator"/>
    <service id=".service_locator.BHamzOl" alias="api_platform.filter_locator"/>
    <service id=".service_locator.o.uf2zi" alias=".service_locator.7nzbL4K"/>
    <service id=".service_locator.ZIq1Hgc" alias=".service_locator.n8UGmG4"/>
    <service id=".service_locator.enwpUA8" alias=".service_locator.VIrGozw"/>
    <service id=".service_locator.eSI1xcU" alias=".service_locator.g.onyyT"/>
    <service id=".service_locator.vwkSGD6" alias=".service_locator.HcAqD_t"/>
    <service id=".service_locator.ZCChfx7" alias=".service_locator.VFRfSyw"/>
    <service id=".service_locator.oaWBrMT" alias=".service_locator.RgJF.d4"/>
    <service id=".service_locator.kR5q.Cq" alias=".service_locator.c22ImwG"/>
    <service id=".service_locator.e.nMMip" alias=".service_locator.E5H.BTi"/>
    <service id=".service_locator.8VPYWeE" alias=".service_locator.NbL4vpV"/>
    <service id=".service_locator.g1cSYjP" alias=".service_locator.E63WOfv"/>
    <service id=".service_locator.qCPB9jm" alias=".service_locator.EgHX0z5"/>
    <service id=".service_locator.KlG7WZm" alias=".service_locator.0yBt7Av"/>
    <service id=".service_locator.m4cJnC4" alias=".service_locator.FPQZBrM"/>
    <service id=".service_locator.wRY8_wd" alias=".service_locator.M6mqXM8"/>
    <service id=".service_locator.920S.Ym" alias=".service_locator.7CbTm.z"/>
    <service id=".service_locator.wcx6iD_" alias=".service_locator.aD9cOcx"/>
    <service id=".service_locator.khedFHD" alias=".service_locator.UsNqJ8P"/>
    <service id=".service_locator.bQvMS5U" alias=".service_locator.iqgcFjm"/>
    <service id=".service_locator.3l2sXqw" alias=".service_locator.Qgrzrfs"/>
    <service id=".service_locator.CG2pKIG" alias=".service_locator.IZGLOcg"/>
    <service id=".service_locator.bZ80f0e" alias=".service_locator.I7tmGVt"/>
    <service id=".service_locator.zec4NaY" alias=".service_locator.u0am54A"/>
    <service id=".service_locator.YtB71Oc" alias=".service_locator.mAe8GY."/>
    <service id=".service_locator.bk.grn0" alias=".service_locator.TGgVASX"/>
    <service id=".service_locator.0cwIuW0" alias=".service_locator.vVjJUaK"/>
    <service id=".service_locator.gGASP8u" alias=".service_locator.qKbPMoI"/>
    <service id=".service_locator.msCQ5kV" alias=".service_locator.yYnTFV3"/>
    <service id=".service_locator.u_D6cSc" alias=".service_locator.zJUkcD_"/>
    <service id=".service_locator.3VFHlJ." alias=".service_locator.Wb_9uAG"/>
    <service id=".service_locator.N0DMEih" alias=".service_locator.8HlNKHi"/>
    <service id=".service_locator.QSbYaNT" alias=".service_locator.UlCPoMT"/>
    <service id=".service_locator.A352S7v" alias=".service_locator.BV48PYm"/>
    <service id=".service_locator.uYAD6be" alias=".service_locator.En7B4vF"/>
    <service id=".service_locator.DpGtsXU" alias=".service_locator.Xw7Ms4B"/>
    <service id=".service_locator.Bjaea8p" alias=".service_locator.VDXxjXd"/>
    <service id=".service_locator.fKYG35D" alias=".service_locator.S84XzAK"/>
    <service id=".service_locator..jk4Yw8" alias=".service_locator.OgsBuKp"/>
    <service id=".service_locator.d6bqQ6w" alias=".service_locator.XknFu0E"/>
    <service id=".service_locator.C9jJg0G" alias=".service_locator.HOWxqzI"/>
    <service id=".service_locator.lnxJn4N" alias=".service_locator._QSmipa"/>
    <service id=".service_locator.yzjM9bd" alias=".service_locator.cGlJyZx"/>
    <service id=".service_locator.3eEI_y0" alias=".service_locator.H_EpB5m"/>
    <service id=".service_locator.ywx6J8v" alias=".service_locator.H779gTJ"/>
    <service id=".service_locator.rUM9Rxe" alias=".service_locator.7_6EDB0"/>
    <service id=".service_locator.Daggg3G" alias=".service_locator.yzF.EVX"/>
    <service id=".service_locator.D3CGe4_" alias=".service_locator.0G0dfh9"/>
    <service id=".service_locator.IajGKqu" alias=".service_locator.Qip0gkl"/>
    <service id=".service_locator.vb4XGhp" alias=".service_locator.AwxTtz6"/>
    <service id=".service_locator.btKsDeP" alias=".service_locator._V0RNof"/>
    <service id=".service_locator.O.gmOCw" alias=".service_locator.w4GY4t1"/>
    <service id=".service_locator._S.T3eS" alias=".service_locator.fzX53bK"/>
    <service id=".service_locator.79Z2_zZ" alias=".service_locator.6atRNmG"/>
    <service id=".service_locator.7WArrRl" alias=".service_locator.JpTvOfs"/>
    <service id=".service_locator.ov6jsa1" alias=".service_locator.WFG9hC."/>
    <service id=".service_locator.YDcRAmz" alias=".service_locator.XYRnh8F"/>
    <service id=".service_locator.JUn3R7u" alias=".service_locator.rvd2xOp"/>
    <service id=".service_locator.78i_PmK" alias=".service_locator.8hEBzro"/>
    <service id=".service_locator.yQLMxaz" alias=".service_locator.HMsaM1z"/>
    <service id=".service_locator.H451C7F" alias=".service_locator.e2G13d0"/>
    <service id=".service_locator.bT6ALH2" alias=".service_locator.Sm3vMyh"/>
    <service id=".service_locator.OFGT9ZV" alias=".service_locator.KgbducX"/>
    <service id=".service_locator.0KLlKu7" alias=".service_locator.G.r2VMp"/>
    <service id=".service_locator.pY2Bg1Y" alias=".service_locator.qpnski8"/>
    <service id=".service_locator.cxnVm_u" alias=".service_locator.80wW8wg"/>
    <service id=".service_locator.MicHoP2" alias=".service_locator.edBGD8s"/>
    <service id=".service_locator.7Sx1koy" alias=".service_locator.qmk8Bm6"/>
    <service id=".service_locator.uXw9N.G" alias=".service_locator.n.vWwvH"/>
    <service id=".service_locator.qIdIRhM" alias=".service_locator.knvMuga"/>
    <service id=".service_locator.9XMoc9I" alias=".service_locator.kzegaci"/>
    <service id=".service_locator.WmtsFBV" alias=".service_locator.wt9P91Q"/>
    <service id=".service_locator.JimLXpJ" alias=".service_locator.s23S4Lt"/>
    <service id=".service_locator.O24_MAy" alias=".service_locator.yY.p4P7"/>
    <service id=".service_locator.VZoQk0z" alias=".service_locator.CshazM0"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.deprecations.inner" alias="api_platform.metadata.resource.metadata_collection_factory.attributes"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.xml.inner" alias="api_platform.metadata.resource.metadata_collection_factory.deprecations"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.yaml.inner" alias="api_platform.metadata.resource.metadata_collection_factory.xml"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation.inner" alias="api_platform.metadata.resource.metadata_collection_factory.yaml"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.uri_template.inner" alias="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.link.inner" alias="api_platform.metadata.resource.metadata_collection_factory.uri_template"/>
    <service id="validator" alias="debug.validator"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.operation_name.inner" alias="api_platform.metadata.resource.metadata_collection_factory.link"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.input_output.inner" alias="api_platform.metadata.resource.metadata_collection_factory.operation_name"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.formats.inner" alias="api_platform.metadata.resource.metadata_collection_factory.input_output"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.filters.inner" alias="api_platform.metadata.resource.metadata_collection_factory.formats"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.alternate_uri.inner" alias="api_platform.metadata.resource.metadata_collection_factory.filters"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.php_doc.inner" alias="api_platform.metadata.resource.metadata_collection_factory.alternate_uri"/>
    <service id="api_platform.messenger.metadata.resource.metadata_collection_factory.inner" alias="api_platform.metadata.resource.metadata_collection_factory.php_doc"/>
    <service id="api_platform.metadata.property.metadata_factory.property_info.inner" alias="api_platform.metadata.property.metadata_factory.xml"/>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" alias="api_platform.metadata.property.metadata_factory.property_info"/>
    <service id="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory.inner" alias="api_platform.messenger.metadata.resource.metadata_collection_factory"/>
    <service id="api_platform.metadata.resource.link_factory" alias="api_platform.doctrine.orm.metadata.resource.link_factory"/>
    <service id="api_platform.metadata.property.metadata_factory.serializer.inner" alias="api_platform.doctrine.orm.metadata.property.metadata_factory"/>
    <service id="api_platform.metadata.property.metadata_factory.default_property.inner" alias="api_platform.metadata.property.metadata_factory.serializer"/>
    <service id="api_platform.metadata.property.metadata_factory.identifier.inner" alias="api_platform.metadata.property.metadata_factory.default_property"/>
    <service id="api_platform.metadata.property.metadata_factory.attribute.inner" alias="api_platform.metadata.property.metadata_factory.identifier"/>
    <service id="api_platform.metadata.property.metadata_factory.yaml.inner" alias="api_platform.metadata.property.metadata_factory.attribute"/>
    <service id="api_platform.metadata.property.metadata_factory.validator.inner" alias="api_platform.metadata.property.metadata_factory.yaml"/>
    <service id="http_client" alias=".debug.http_client"/>
    <service id="api_platform.openapi.factory" alias="lexik_jwt_authentication.api_platform.openapi.factory"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id="translator.data_collector.inner" alias="translator.default"/>
    <service id="serializer" alias="debug.serializer"/>
    <service id="doctrine.migrations.migrations_factory" alias="doctrine.migrations.container_aware_migrations_factory"/>
    <service id="var_dumper.cli_dumper" alias="var_dumper.contextualized_cli_dumper"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="security.firewall.authenticator.main" alias="debug.security.firewall.authenticator.main"/>
    <service id="security.firewall.authenticator.login" alias="debug.security.firewall.authenticator.login"/>
    <service id="security.firewall.authenticator.api" alias="debug.security.firewall.authenticator.api"/>
    <service id="api_platform.serializer.context_builder" alias="api_platform.serializer.context_builder.filter"/>
    <service id="api_platform.metadata.resource.name_collection_factory.attributes.inner" alias="api_platform.metadata.resource.name_collection_factory.xml"/>
    <service id="api_platform.metadata.property.name_collection_factory.xml.inner" alias="api_platform.metadata.property.name_collection_factory.property_info"/>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml.inner" alias="api_platform.metadata.resource.name_collection_factory.attributes"/>
    <service id="api_platform.metadata.property.name_collection_factory.yaml.inner" alias="api_platform.metadata.property.name_collection_factory.xml"/>
    <service id="api_platform.json_schema.schema_factory" alias="api_platform.hydra.json_schema.schema_factory"/>
    <service id="api_platform.hydra.normalizer.collection" alias="debug.api_platform.hydra.normalizer.collection"/>
    <service id="api_platform.hydra.normalizer.collection_filters.inner" alias="api_platform.hydra.normalizer.partial_collection_view"/>
    <service id="lexik_jwt_authentication.api_platform.openapi.factory.inner" alias="App\OpenApi\OpenApiFactory"/>
    <service id="App\Serializer\AvatarNormalizer" alias="debug.App\Serializer\AvatarNormalizer"/>
    <service id="serializer.normalizer.constraint_violation_list" alias="debug.serializer.normalizer.constraint_violation_list"/>
    <service id="serializer.normalizer.mime_message" alias="debug.serializer.normalizer.mime_message"/>
    <service id="serializer.normalizer.datetimezone" alias="debug.serializer.normalizer.datetimezone"/>
    <service id="serializer.normalizer.dateinterval" alias="debug.serializer.normalizer.dateinterval"/>
    <service id="serializer.normalizer.data_uri" alias="debug.serializer.normalizer.data_uri"/>
    <service id="serializer.normalizer.datetime" alias="debug.serializer.normalizer.datetime"/>
    <service id="serializer.normalizer.json_serializable" alias="debug.serializer.normalizer.json_serializable"/>
    <service id="serializer.normalizer.problem" alias="debug.serializer.normalizer.problem"/>
    <service id="serializer.denormalizer.unwrapping" alias="debug.serializer.denormalizer.unwrapping"/>
    <service id="serializer.normalizer.uid" alias="debug.serializer.normalizer.uid"/>
    <service id="serializer.normalizer.form_error" alias="debug.serializer.normalizer.form_error"/>
    <service id="serializer.normalizer.object" alias="debug.serializer.normalizer.object"/>
    <service id="serializer.denormalizer.array" alias="debug.serializer.denormalizer.array"/>
    <service id="serializer.normalizer.backed_enum" alias="debug.serializer.normalizer.backed_enum"/>
    <service id="serializer.normalizer.flatten_exception" alias="debug.serializer.normalizer.flatten_exception"/>
    <service id="api_platform.serializer.normalizer.item" alias="debug.api_platform.serializer.normalizer.item"/>
    <service id="api_platform.openapi.normalizer" alias="debug.api_platform.openapi.normalizer.api_gateway"/>
    <service id="api_platform.openapi.normalizer.api_gateway" alias="debug.api_platform.openapi.normalizer.api_gateway"/>
    <service id="api_platform.jsonld.normalizer.item" alias="debug.api_platform.jsonld.normalizer.item"/>
    <service id="api_platform.jsonld.normalizer.object" alias="debug.api_platform.jsonld.normalizer.object"/>
    <service id="api_platform.hydra.normalizer.documentation" alias="debug.api_platform.hydra.normalizer.documentation"/>
    <service id="api_platform.hydra.normalizer.constraint_violation_list" alias="debug.api_platform.hydra.normalizer.constraint_violation_list"/>
    <service id="api_platform.hydra.normalizer.entrypoint" alias="debug.api_platform.hydra.normalizer.entrypoint"/>
    <service id="api_platform.hydra.normalizer.error" alias="debug.api_platform.hydra.normalizer.error"/>
    <service id="debug.api_platform.hydra.normalizer.collection.inner" alias="api_platform.hydra.normalizer.collection_filters"/>
    <service id="api_platform.problem.normalizer.constraint_violation_list" alias="debug.api_platform.problem.normalizer.constraint_violation_list"/>
    <service id="api_platform.problem.normalizer.error" alias="debug.api_platform.problem.normalizer.error"/>
    <service id="serializer.encoder.xml" alias="debug.serializer.encoder.xml"/>
    <service id="serializer.encoder.json" alias="debug.serializer.encoder.json"/>
    <service id="serializer.encoder.yaml" alias="debug.serializer.encoder.yaml"/>
    <service id="serializer.encoder.csv" alias="debug.serializer.encoder.csv"/>
    <service id="api_platform.jsonld.encoder" alias="debug.api_platform.jsonld.encoder"/>
    <service id="api_platform.problem.encoder" alias="debug.api_platform.problem.encoder"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver"/>
    <service id="doctrine.orm.entity_value_resolver" alias="debug.doctrine.orm.entity_value_resolver"/>
    <service id="argument_resolver.backed_enum_resolver" alias="debug.argument_resolver.backed_enum_resolver"/>
    <service id="argument_resolver.datetime" alias="debug.argument_resolver.datetime"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session"/>
    <service id="api_platform.argument_resolver.payload" alias="debug.api_platform.argument_resolver.payload"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller"/>
    <service id="messenger.bus.default" alias="debug.traced.messenger.bus.default"/>
    <service id="doctrine.orm.default_metadata_driver" alias=".doctrine.orm.default_metadata_driver"/>
    <service id="serializer.mapping.class_metadata_factory" alias="api_platform.serializer.mapping.class_metadata_factory"/>
    <service id="api_platform.openapi.normalizer.api_gateway.inner" alias="debug.api_platform.openapi.normalizer"/>
    <service id="api_platform.metadata.resource.name_collection_factory.cached.inner" alias="api_platform.metadata.resource.name_collection_factory.yaml"/>
    <service id="api_platform.metadata.property.name_collection_factory.cached.inner" alias="api_platform.metadata.property.name_collection_factory.yaml"/>
    <service id="api_platform.metadata.property.metadata_factory.cached.inner" alias="api_platform.metadata.property.metadata_factory.validator"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.cached.inner" alias="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory"/>
    <service id=".service_locator.gFlme_s" alias=".service_locator.y4_Zrx."/>
    <service id=".service_locator.3lsinfO" alias=".service_locator.n8UGmG4"/>
    <service id=".service_locator.pUJfRT4" alias=".service_locator.lz_g3dg"/>
    <service id=".service_locator.iE9S_f_" alias=".service_locator.KPOw2Hp"/>
    <service id=".service_locator.vTh8dVN" alias=".service_locator.eqZsSWM"/>
    <service id=".service_locator.qo_0dA." alias=".service_locator._mqZjct"/>
    <service id=".service_locator.avO_aty" alias=".service_locator.JYs6EHz"/>
    <service id=".service_locator.NVNrw6U" alias=".service_locator.zNI9i6M"/>
    <service id=".service_locator.q9DdVDu" alias=".service_locator.VIrGozw"/>
    <service id=".service_locator.e5G6IoS" alias=".service_locator.g.onyyT"/>
    <service id=".service_locator.2whhcc6" alias=".service_locator.j7wOkYK"/>
    <service id=".service_locator.1VUR3y5" alias=".service_locator.HcAqD_t"/>
    <service id=".service_locator.VUceLkU" alias=".service_locator.iPTmcBs"/>
    <service id=".service_locator.xdcMWxb" alias=".service_locator.zc0mk_0"/>
    <service id=".service_locator.e2Yls8I" alias=".service_locator.eaTrZQM"/>
    <service id=".service_locator.6yMcGEV" alias=".service_locator.auv825B"/>
    <service id=".service_locator.rPxozmv" alias=".service_locator.LHBTlSB"/>
    <service id=".service_locator.cb2emIL" alias=".service_locator.aaST1nn"/>
    <service id=".service_locator.LZJykHB" alias=".service_locator.RblMI1d"/>
    <service id=".service_locator.4BUEVzZ" alias=".service_locator.dKHVPkC"/>
    <service id=".service_locator.57Ocp_7" alias=".service_locator..HWWlJE"/>
    <service id=".service_locator.RQX1UBH" alias=".service_locator.e8EBBee"/>
    <service id=".service_locator.NuvsZh_" alias=".service_locator.GdA86g7"/>
    <service id=".service_locator.vNn5krM" alias=".service_locator.Cb0FaSe"/>
    <service id=".service_locator.kJe5fMP" alias=".service_locator.Yz8Vt.k"/>
    <service id=".service_locator.Yk0H20b" alias=".service_locator.gMvq5pN"/>
    <service id=".service_locator.nKV_NbD" alias=".service_locator.VFRfSyw"/>
    <service id=".service_locator.XvBHmWp" alias=".service_locator.RgJF.d4"/>
    <service id=".service_locator.0dBNk6a" alias=".service_locator.Xl2sCQI"/>
    <service id=".service_locator.YDzbeJU" alias=".service_locator.tGxlRXC"/>
    <service id=".service_locator._LanNut" alias=".service_locator.1ZVS9Vu"/>
    <service id=".service_locator.zShH6n8" alias=".service_locator.c22ImwG"/>
    <service id=".service_locator.kTFi4BJ" alias=".service_locator.DcCEeyO"/>
    <service id=".service_locator.Ee9KlBm" alias=".service_locator.7zyAtZq"/>
    <service id=".service_locator.Ng8Qdjy" alias=".service_locator.v_kzbYK"/>
    <service id=".service_locator.xf4fTSY" alias=".service_locator.ZUciSQZ"/>
    <service id=".service_locator.e2l18_L" alias=".service_locator.zMkT7yZ"/>
    <service id=".service_locator.Xh8SYEG" alias=".service_locator.r0BjQku"/>
    <service id=".service_locator.1F0VpxY" alias=".service_locator..1fzwrY"/>
    <service id=".service_locator.7Xjz4o3" alias=".service_locator.E5H.BTi"/>
    <service id=".service_locator.hQ2Iu.B" alias=".service_locator.NbL4vpV"/>
    <service id=".service_locator.Ap70BrK" alias=".service_locator.6JvQVQH"/>
    <service id=".service_locator.ejoPAnl" alias=".service_locator.Q2J1hJr"/>
    <service id=".service_locator.oxXJY4n" alias=".service_locator.egXUG0V"/>
    <service id=".service_locator.wvrI7Dg" alias=".service_locator..dGzn4B"/>
    <service id=".service_locator.EA._Ntd" alias=".service_locator.SvV89WQ"/>
    <service id=".service_locator.3hzJj4b" alias=".service_locator.ajDOBVr"/>
    <service id=".service_locator.sjHli5i" alias=".service_locator.FjsgjXR"/>
    <service id=".service_locator.fb69dC2" alias=".service_locator.DBp52_G"/>
    <service id=".service_locator.HjRBHBz" alias=".service_locator.BuNYlya"/>
    <service id=".service_locator.pFHFcj3" alias=".service_locator.3PqNSe_"/>
    <service id=".service_locator.dQojMpm" alias=".service_locator.eheopyZ"/>
    <service id=".service_locator._Rv7Quy" alias=".service_locator.IHmhRtr"/>
    <service id=".service_locator.7GdjGqX" alias=".service_locator.YSOGZde"/>
    <service id=".service_locator.Q4My_AA" alias=".service_locator.4ylJ6pP"/>
    <service id=".service_locator.C4MXxpF" alias=".service_locator.E63WOfv"/>
    <service id=".service_locator..5QfEK." alias=".service_locator.Ak2dIxa"/>
    <service id=".service_locator.RS_rh.t" alias=".service_locator.v8JuPnp"/>
    <service id=".service_locator.apt4yxp" alias=".service_locator.fD6gyoR"/>
    <service id=".service_locator.PpJF2N0" alias=".service_locator.cIzlWoj"/>
    <service id=".service_locator.JbezRX6" alias=".service_locator.PvewYLJ"/>
    <service id=".service_locator.5GcgXsa" alias=".service_locator.Ep8i1lp"/>
    <service id=".service_locator.SUiVW2A" alias=".service_locator.nuHUyxg"/>
    <service id=".service_locator.4mECpf8" alias=".service_locator.WQjXpxN"/>
    <service id=".service_locator.s5dWJvO" alias=".service_locator.a.FNPPn"/>
    <service id=".service_locator.lIKxIcQ" alias=".service_locator.SdimP0A"/>
    <service id=".service_locator.nZmv_Hb" alias=".service_locator.c1Yi598"/>
    <service id=".service_locator.EJVP5fv" alias=".service_locator.dy6wSj2"/>
    <service id=".service_locator.Eek0l1b" alias=".service_locator.cgbC6Or"/>
    <service id=".service_locator.LaFh3NY" alias=".service_locator.GXW8MDB"/>
    <service id=".service_locator.kxceCAw" alias=".service_locator.EgHX0z5"/>
    <service id=".service_locator.raKIf3P" alias=".service_locator.QGP4FZ_"/>
    <service id=".service_locator.mtRKBMn" alias=".service_locator.irtl5bF"/>
    <service id=".service_locator.2O209.M" alias=".service_locator.UVTlCsZ"/>
    <service id=".service_locator.hxx_G9r" alias=".service_locator.DopB_Wq"/>
    <service id=".service_locator.IkqQdTB" alias=".service_locator.SAQXaRG"/>
    <service id=".service_locator.wSNrTVq" alias=".service_locator.w6TLtL4"/>
    <service id=".service_locator.vBBxq_4" alias=".service_locator.6Fe3VWi"/>
    <service id=".service_locator.8onyU6Q" alias=".service_locator.oy.IWoV"/>
    <service id=".service_locator.WnO8qZJ" alias=".service_locator.SlXkoU4"/>
    <service id=".service_locator.WqyxZTC" alias=".service_locator.pxaUkp_"/>
    <service id=".service_locator.xoOUP8f" alias=".service_locator.TMKevGr"/>
    <service id=".service_locator.lzHHz8V" alias=".service_locator.UqTc44d"/>
    <service id=".service_locator.YwMC_Cc" alias=".service_locator.6zRW84N"/>
    <service id=".service_locator.uaDa3jD" alias=".service_locator..PB0HcE"/>
    <service id=".service_locator.O12DtEG" alias=".service_locator.0yBt7Av"/>
    <service id=".service_locator.uhH3r_o" alias=".service_locator.DYnLJqc"/>
    <service id=".service_locator.qutsisz" alias=".service_locator.qvyKzbr"/>
    <service id=".service_locator.JIfdCrb" alias=".service_locator.JBkrMmK"/>
    <service id=".service_locator.FnZEhnf" alias=".service_locator.jEbB6rl"/>
    <service id=".service_locator.VGoYPXf" alias=".service_locator.tSnRecj"/>
    <service id=".service_locator.xNKikMi" alias=".service_locator.rlA3o86"/>
    <service id=".service_locator.PVDouzX" alias=".service_locator.R8mYGRC"/>
    <service id=".service_locator.2AhHxVu" alias=".service_locator.UmauJ7d"/>
    <service id=".service_locator.q1RR.a." alias=".service_locator.NB6SjKc"/>
    <service id=".service_locator.Yg8TVLD" alias=".service_locator.vTR.b54"/>
    <service id=".service_locator.ZMkqgAa" alias=".service_locator.fGeoUwi"/>
    <service id=".service_locator.4DqYtXa" alias=".service_locator.pWQSQEm"/>
    <service id=".service_locator.rdEcjh8" alias=".service_locator.FVfhqrZ"/>
    <service id=".service_locator.GTUYySM" alias=".service_locator.T9a0IK5"/>
    <service id=".service_locator.0SKjIWR" alias=".service_locator.CdKKsmp"/>
    <service id=".service_locator.ej0Ipj2" alias=".service_locator.wQsOg.V"/>
    <service id=".service_locator.7JKQZmx" alias=".service_locator.xjchgF8"/>
    <service id=".service_locator.x97CcwG" alias=".service_locator.Cj4aUBQ"/>
    <service id=".service_locator.o68bRaq" alias=".service_locator.90uTyKf"/>
    <service id=".service_locator.uncoHoI" alias=".service_locator.DveO1kU"/>
    <service id=".service_locator.KNpvmST" alias=".service_locator.FPQZBrM"/>
    <service id=".service_locator.F9S7JTs" alias=".service_locator.M6mqXM8"/>
    <service id=".service_locator.vWiWdqV" alias=".service_locator.7CbTm.z"/>
    <service id=".service_locator.OE16Hat" alias=".service_locator.pEIyNmT"/>
    <service id=".service_locator.h_IFvbz" alias=".service_locator.yVvQ1jo"/>
    <service id=".service_locator.TtT.ynM" alias=".service_locator.aD9cOcx"/>
    <service id=".service_locator.H5RTELE" alias=".service_locator.WSodB8c"/>
    <service id=".service_locator.vH25xPQ" alias=".service_locator.UsNqJ8P"/>
    <service id=".service_locator.HiryzsY" alias=".service_locator.g4P3r52"/>
    <service id=".service_locator.sVnEzPF" alias=".service_locator.iqgcFjm"/>
    <service id=".service_locator.rJBn3II" alias=".service_locator.mI1r52c"/>
    <service id=".service_locator._X9axm5" alias=".service_locator.kox0Cn."/>
    <service id=".service_locator.5odFjI9" alias=".service_locator.Qgrzrfs"/>
    <service id=".service_locator.BgC0oqq" alias=".service_locator.oDD2JWx"/>
    <service id=".service_locator.dZo98wY" alias=".service_locator.IZGLOcg"/>
    <service id=".service_locator.PKWVNQy" alias=".service_locator.iO2IILU"/>
    <service id=".service_locator..pKUXOE" alias=".service_locator.K8s3Utn"/>
    <service id=".service_locator.S9MiT2q" alias=".service_locator.LCKoqJU"/>
    <service id=".service_locator.8siOgON" alias=".service_locator.Oqt1cOI"/>
    <service id=".service_locator.PqrZJ_K" alias=".service_locator.IZvv_3x"/>
    <service id=".service_locator.la7_972" alias=".service_locator.naOR5os"/>
    <service id=".service_locator.gssvqLD" alias=".service_locator.pLCFjwu"/>
    <service id=".service_locator..W2KenQ" alias=".service_locator.I7tmGVt"/>
    <service id=".service_locator.ANMRNZM" alias=".service_locator.slnpeg."/>
    <service id=".service_locator.xsdFOQr" alias=".service_locator.u0am54A"/>
    <service id=".service_locator.RCOKEzY" alias=".service_locator.19S4JOS"/>
    <service id=".service_locator.vz06DSS" alias=".service_locator.fSiFUO9"/>
    <service id=".service_locator.6EN6Khb" alias=".service_locator.5qYIAhN"/>
    <service id=".service_locator.NhGU76G" alias=".service_locator.mAe8GY."/>
    <service id=".service_locator.r.JlRL0" alias=".service_locator.TGgVASX"/>
    <service id=".service_locator.iyXBnag" alias=".service_locator.iOqkD0R"/>
    <service id=".service_locator.6LU3bJ4" alias=".service_locator.vVjJUaK"/>
    <service id=".service_locator.oM.LEwG" alias=".service_locator.qKbPMoI"/>
    <service id=".service_locator.wKGMo7o" alias=".service_locator.yYnTFV3"/>
    <service id=".service_locator.Qfu97_x" alias=".service_locator.O4Tpc7i"/>
    <service id=".service_locator.PNCX7AN" alias=".service_locator.zJUkcD_"/>
    <service id=".service_locator.4R8MrlD" alias=".service_locator.Wb_9uAG"/>
    <service id=".service_locator.QHGMq5E" alias=".service_locator.8HlNKHi"/>
    <service id=".service_locator.CHNVToF" alias=".service_locator.UlCPoMT"/>
    <service id=".service_locator.1vqG5Oh" alias=".service_locator.IBLWktG"/>
    <service id=".service_locator.dU0piIY" alias=".service_locator.BV48PYm"/>
    <service id=".service_locator.6ra6HpR" alias=".service_locator.En7B4vF"/>
    <service id=".service_locator.hnRQ9qm" alias=".service_locator.XBu8bEJ"/>
    <service id=".service_locator.nbZvXxK" alias=".service_locator.Xw7Ms4B"/>
    <service id=".service_locator..vkfYSv" alias=".service_locator.VDXxjXd"/>
    <service id=".service_locator.1gPu4i3" alias=".service_locator.S84XzAK"/>
    <service id=".service_locator.1cJyzbW" alias=".service_locator.OgsBuKp"/>
    <service id=".service_locator.STA1Ph8" alias=".service_locator.XknFu0E"/>
    <service id=".service_locator.znPu3lr" alias=".service_locator.22DT_tw"/>
    <service id=".service_locator.D5PrI6x" alias=".service_locator.HOWxqzI"/>
    <service id=".service_locator.gxvt8EE" alias=".service_locator._QSmipa"/>
    <service id=".service_locator.qA_w3Y2" alias=".service_locator.cGlJyZx"/>
    <service id=".service_locator.hHZ00r2" alias=".service_locator.H_EpB5m"/>
    <service id=".service_locator.J7lSc4B" alias=".service_locator.DFyL8OH"/>
    <service id=".service_locator.ytAVY5s" alias=".service_locator.H779gTJ"/>
    <service id=".service_locator.OJmnvRJ" alias=".service_locator.uVvF4gL"/>
    <service id=".service_locator.pAhQz8w" alias=".service_locator.xYaqVzK"/>
    <service id=".service_locator.oQ14wJF" alias=".service_locator.7_6EDB0"/>
    <service id=".service_locator.CXx_gD8" alias=".service_locator.yzF.EVX"/>
    <service id=".service_locator.6yPxtPS" alias=".service_locator.0G0dfh9"/>
    <service id=".service_locator.HtauJ.h" alias=".service_locator.F86iHBA"/>
    <service id=".service_locator.tYzxJXC" alias=".service_locator.Qip0gkl"/>
    <service id=".service_locator.DWgybYc" alias=".service_locator.AwxTtz6"/>
    <service id=".service_locator.UmVgw1o" alias=".service_locator._V0RNof"/>
    <service id=".service_locator.j4sPv6g" alias=".service_locator.RBosDZz"/>
    <service id=".service_locator.Txit4yH" alias=".service_locator.0I2c_WY"/>
    <service id=".service_locator.LBeAHic" alias=".service_locator.gBs6jx2"/>
    <service id=".service_locator.uyHvuQa" alias=".service_locator.w4GY4t1"/>
    <service id=".service_locator.G39_IA7" alias=".service_locator.fzX53bK"/>
    <service id=".service_locator.mgGsnWl" alias=".service_locator.6atRNmG"/>
    <service id=".service_locator._8BM4fs" alias=".service_locator.PGJmDUF"/>
    <service id=".service_locator.9e2t_lq" alias=".service_locator.CsMkqUa"/>
    <service id=".service_locator.PK9KcSd" alias=".service_locator.JpTvOfs"/>
    <service id=".service_locator.v634RWx" alias=".service_locator.WFG9hC."/>
    <service id=".service_locator.rl7MWo1" alias=".service_locator.XYRnh8F"/>
    <service id=".service_locator.Xyy2hmj" alias=".service_locator.UP3MCwl"/>
    <service id=".service_locator.JVQg2aa" alias=".service_locator.rvd2xOp"/>
    <service id=".service_locator.BNtE6pf" alias=".service_locator.8hEBzro"/>
    <service id=".service_locator.2X.d_ol" alias=".service_locator.HMsaM1z"/>
    <service id=".service_locator.ek0KO1W" alias=".service_locator.Exgj6x3"/>
    <service id=".service_locator.sbP.dq5" alias=".service_locator.neYTR3i"/>
    <service id=".service_locator.jn2KaLi" alias=".service_locator.e2G13d0"/>
    <service id=".service_locator.TPQvsBy" alias=".service_locator.Sm3vMyh"/>
    <service id=".service_locator.4wwibiH" alias=".service_locator.KgbducX"/>
    <service id=".service_locator.9F_egse" alias=".service_locator.G.r2VMp"/>
    <service id=".service_locator.ostNlSn" alias=".service_locator.EE0.cm9"/>
    <service id=".service_locator.uPguXMt" alias=".service_locator.Z9ydiC1"/>
    <service id=".service_locator.7NIAq8D" alias=".service_locator.rSTd.nA"/>
    <service id=".service_locator.yogCT4w" alias=".service_locator.qpnski8"/>
    <service id=".service_locator.GZpO0HC" alias=".service_locator.80wW8wg"/>
    <service id=".service_locator.0fe6aUY" alias=".service_locator.edBGD8s"/>
    <service id=".service_locator.prAIrZO" alias=".service_locator.qmk8Bm6"/>
    <service id=".service_locator.bycALVz" alias=".service_locator.n.vWwvH"/>
    <service id=".service_locator.Kyflpr1" alias=".service_locator.CshazM0"/>
    <service id=".service_locator.ro9MXaF" alias=".service_locator.._yvSZB"/>
    <service id=".service_locator.u6DWx23" alias=".service_locator.cXsfP3P"/>
    <service id=".service_locator.hnz5ZNh" alias=".service_locator.0TACwl3"/>
    <service id=".service_locator.BlxN3Cw" alias=".service_locator.LrCXAmX"/>
    <service id=".service_locator.bU0Onqj" alias=".service_locator.PCWEfhq"/>
    <service id=".service_locator.uJlrHkM" alias=".service_locator..rWkGwp"/>
  </services>
</container>
