{% extends "front/base.html.twig" %}

{% block title %} - {{ 'REGISTER_TITLE_KEY'|trans }}{% endblock %}

{% block mainContent %}
    <section class="mb-9 position-relative" style="background-image:url(assets/images/bg/07.jpg); background-position: center left; background-size: cover;">
        <!-- Background dark overlay -->
        <div class="bg-overlay bg-blue opacity-9"></div>
        <div class="container z-index-9 position-relative">
            <div class="row g-4 justify-content-between align-items-center">
                <!-- Content -->
                <div class="col-lg-6">
                    <h1 class="text-white">{{ 'WELCOME_LARGEST_COMMUNITY_KEY'|trans }}</h1>
                    <p class="text-white mb-3">{{ 'JOIN_COMMUNITY_DESCRIPTION_KEY'|trans }}</p>
                    <a href="{{ url("app_front_courses") }}" class="btn btn-white mb-0">{{ 'EXPLORE_COURSES_KEY'|trans }}<i class="bi bi-arrow-right ms-2"></i></a>
                </div>

                <!-- Form -->
                <div class="col-lg-6 col-xl-5 mb-n9">
                    <div class="card card-body shadow p-4 p-sm-5">
                        <!-- Title -->
                        <h2 class="mb-0 h3">{{ 'CREATE_ACCOUNT_KEY'|trans }}</h2>
                        <p class="mb-0">{{ 'ALREADY_HAVE_ACCOUNT_KEY'|trans }} <a href="{{ path('app_login') }}">{{ 'LOGIN_KEY'|trans }}</a></p>

                        {{ form_start(registrationForm, {'attr': {'class': 'mt-4', 'id': 'registration_form'}}) }}
                            <!-- Invitation Code -->
                            <div class="mb-3">
                                <label class="form-label">{{ 'INVITATION_CODE_KEY'|trans }}</label>
                                {% set invitationCode = app.request.query.get('code') ?? app.request.query.get('invitation') %}
                                {{ form_widget(registrationForm.parentCode, {
                                    'attr': {
                                        'class': 'form-control',
                                        'readonly': invitationCode is not empty,
                                        'value': invitationCode|default('')
                                    }
                                }) }}
                                {{ form_errors(registrationForm.parentCode) }}
                                {% if invitationCode is not empty %}
                                    <small class="text-muted">{{ 'INVITATION_CODE_APPLIED_KEY'|trans }}</small>
                                {% endif %}
                            </div>

                            <!-- Full Name -->
                            <div class="mb-3">
                                <label class="form-label">{{ 'FULL_NAME_KEY'|trans }}</label>
                                {{ form_widget(registrationForm.fullName, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(registrationForm.fullName) }}
                            </div>

                            <!-- Username -->
                            <div class="mb-3">
                                <label class="form-label">{{ 'USERNAME_KEY'|trans }}</label>
                                {{ form_widget(registrationForm.username, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(registrationForm.username) }}
                            </div>

                            <!-- Phone Number -->
                            <div class="mb-3">
                                <label class="form-label">{{ 'PHONE_NUMBER_KEY'|trans }}</label>
                                {{ form_widget(registrationForm.phoneNumber, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(registrationForm.phoneNumber) }}
                            </div>

                            <!-- Password -->
                            <div class="mb-3">
                                <label class="form-label">{{ 'PASSWORD_KEY'|trans }}</label>
                                {{ form_widget(registrationForm.plainPassword, {'attr': {'class': 'form-control', 'id': 'password'}}) }}
                                {{ form_errors(registrationForm.plainPassword) }}
                            </div>

                            <!-- Password Confirmation -->
                            <div class="mb-3">
                                <label class="form-label">{{ 'CONFIRM_PASSWORD_KEY'|trans }}</label>
                                <input type="password" class="form-control" id="password_confirm" required>
                                <div class="invalid-feedback">
                                    {{ 'PASSWORDS_DO_NOT_MATCH_KEY'|trans }}
                                </div>
                            </div>

                            <!-- Terms -->
                            <div class="mb-3">
                                {{ form_widget(registrationForm.agreeTerms, {'attr': {'class': 'form-check-input me-2'}}) }}
                                {{ form_label(registrationForm.agreeTerms, 'En vous inscrivant, vous acceptez les conditions d\'utilisation', {'label_attr': {'class': 'form-check-label'}}) }}
                                {{ form_errors(registrationForm.agreeTerms) }}
                            </div>

                            <button type="submit" class="btn btn-primary w-100 mb-0" id="submit_btn">{{ 'REGISTER_KEY'|trans }}</button>
                        {{ form_end(registrationForm) }}

                        <!-- Password validation script -->
                        <script>
                            document.addEventListener('DOMContentLoaded', function() {
                                const form = document.getElementById('registration_form');
                                const password = document.getElementById('password');
                                const passwordConfirm = document.getElementById('password_confirm');
                                const submitBtn = document.getElementById('submit_btn');

                                function validatePasswords() {
                                    if (password.value !== passwordConfirm.value) {
                                        passwordConfirm.classList.add('is-invalid');
                                        submitBtn.disabled = true;
                                        return false;
                                    } else {
                                        passwordConfirm.classList.remove('is-invalid');
                                        submitBtn.disabled = false;
                                        return true;
                                    }
                                }

                                password.addEventListener('input', validatePasswords);
                                passwordConfirm.addEventListener('input', validatePasswords);

                                form.addEventListener('submit', function(e) {
                                    if (!validatePasswords()) {
                                        e.preventDefault();
                                    }
                                });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}