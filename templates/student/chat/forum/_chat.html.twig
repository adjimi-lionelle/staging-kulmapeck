<!-- Chat Interface START -->
<div id="chatInterface" class="chat-interface d-none flex-column h-100">
    <!-- Chat Header -->
    <div class="chat-header p-3 border-bottom d-flex align-items-center">
        <button class="btn btn-light btn-sm d-lg-none me-2" id="backToForums">
            <i class="fas fa-arrow-left"></i>
        </button>
        {% if forum %}
            <div class="d-flex align-items-center flex-grow-1">
                <div class="avatar avatar-md me-3">
                    <div class="subject-icon rounded-circle bg-light d-flex align-items-center justify-content-center">
                        <i class="fas {{ forum.icon|default('fa-book') }} text-primary"></i>
                    </div>
                </div>
                <div>
                    <h6 class="mb-0">{{ forum.subject }}</h6>
                    <small class="text-muted">
                        <span class="online-count">{{ forum.onlineCount }}</span> {% trans %}ONLINE_KEY{% endtrans %}
                    </small>
                </div>
            </div>
            <div class="chat-actions">
                <button class="btn btn-light btn-icon" data-bs-toggle="tooltip" title="{% trans %}VIDEO_CALL_KEY{% endtrans %}">
                    <i class="fas fa-video"></i>
                </button>
                <button class="btn btn-light btn-icon ms-2" data-bs-toggle="tooltip" title="{% trans %}VOICE_CALL_KEY{% endtrans %}">
                    <i class="fas fa-phone"></i>
                </button>
                <button class="btn btn-light btn-icon ms-2" data-bs-toggle="tooltip" title="{% trans %}MORE_OPTIONS_KEY{% endtrans %}">
                    <i class="fas fa-ellipsis-v"></i>
                </button>
            </div>
        {% endif %}
    </div>

    <!-- Chat Messages Container -->
    <div class="chat-messages-container flex-grow-1 p-3">
        {{ include('student/chat/forum/_messages.html.twig', {
            messages: messages|default([])
        }) }}
    </div>

    <!-- Chat Input -->
    <div class="chat-input p-3 border-top">
        <form id="messageForm" class="message-form">
            <div class="input-group">
                <button type="button" class="btn btn-light" data-bs-toggle="tooltip" title="{% trans %}ATTACH_FILE_KEY{% endtrans %}">
                    <i class="fas fa-paperclip"></i>
                </button>
                <input type="text" class="form-control border-0 bg-light" 
                       placeholder="{% trans %}TYPE_MESSAGE_KEY{% endtrans %}"
                       id="messageInput"
                       maxlength="500">
                <button type="button" class="btn btn-light" data-bs-toggle="tooltip" title="{% trans %}EMOJI_KEY{% endtrans %}">
                    <i class="far fa-smile"></i>
                </button>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
            <small class="text-muted d-block mt-1">
                <span id="charCount">0</span>/500
            </small>
        </form>
    </div>
</div>

<style>
    .chat-interface {
        background: #fff;
    }

    .chat-messages-container {
        overflow-y: auto;
        background: var(--bs-light);
    }

    .chat-input .form-control {
        border: none !important;
        padding: 0.75rem 1rem;
    }

    .chat-input .form-control:focus {
        box-shadow: none;
    }

    .btn-icon {
        width: 40px;
        height: 40px;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

    .message-form {
        position: relative;
    }

    #charCount {
        font-size: 0.75rem;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const messageForm = document.getElementById('messageForm');
        const messageInput = document.getElementById('messageInput');
        const charCount = document.getElementById('charCount');
        const maxLength = 500;

        // Character counter
        messageInput.addEventListener('input', function() {
            const count = this.value.length;
            charCount.textContent = count;
            
            if (count >= maxLength) {
                charCount.classList.add('text-danger');
            } else {
                charCount.classList.remove('text-danger');
            }
        });

        // Form submission
        messageForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const message = messageInput.value.trim();
            
            if (message && currentForumId) {
                sendMessage(currentForumId, message);
                messageInput.value = '';
                charCount.textContent = '0';
            }
        });
    });

    function sendMessage(forumId, message) {
        fetch('{{ path('app_student_chat_send') }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                subject: forumId,
                message: message
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Message sent successfully, reload messages
                loadForumMessages(forumId);
            } else {
                // Handle error
                alert(data.error || '{% trans %}ERROR_SENDING_MESSAGE_KEY{% endtrans %}');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('{% trans %}ERROR_SENDING_MESSAGE_KEY{% endtrans %}');
        });
    }
</script>
