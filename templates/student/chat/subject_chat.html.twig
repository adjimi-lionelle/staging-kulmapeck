{% extends 'student/base.html.twig' %}

{% block title %}Chat{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/subject_chat.css') }}">
{% endblock %}

{% block pageContent %}
    <div class="container-fluid p-0">
        <div class="card chat-card">
            <div class="card-body p-0">
                <div class="chat-container">
                    <div class="sidebar">
                        <div class="search-box">
                            <div class="input-group">
                                <span class="input-group-text border-0 bg-light">
                                    <i class="bi bi-search"></i>
                                </span>
                                <input type="text" class="form-control border-0 bg-light" placeholder="Search subjects..." id="subject-search">
                            </div>
                        </div>
                        <div class="subject-list">
                            {% for subject in available_subjects %}
                                <div class="subject-item d-flex align-items-center p-3 {% if subject.id == current_subject.id %}active{% endif %}" 
                                     data-subject-id="{{ subject.id }}">
                                    <div class="avatar avatar-md">
                                        <img src="{{ asset(subject.icon) }}" alt="{{ subject.name }}" class="avatar-img rounded-circle">
                                    </div>
                                    <div class="ms-3">
                                        <h6 class="mb-1">{{ subject.name }}</h6>
                                        <p class="small text-secondary mb-0">{{ subject.teacherPersona.name }}</p>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                    
                    <div class="chat-window">
                        <div class="chat-header">
                            <div class="current-subject d-flex align-items-center justify-content-between p-3">
                                <div class="d-flex align-items-center">
                                    <div class="avatar avatar-lg me-2">
                                        <img src="{{ current_subject.teacherPersona.avatar }}" class="avatar-img rounded-circle" alt="{{ current_subject.teacherPersona.name }}">
                                    </div>
                                    <div>
                                        <h5 class="mb-0">{{ current_subject.name }}</h5>
                                        <p class="small text-secondary mb-0">{{ current_subject.teacherPersona.name }}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="chat-messages" id="chat-messages">
                            {% for message in messages %}
                                <div class="message {% if message.fromStudent %}outgoing{% else %}incoming{% endif %}">
                                    <div class="message-content">{{ message.content }}</div>
                                    <div class="message-time">{{ message.createdAt|date('H:i') }}</div>
                                </div>
                            {% endfor %}
                        </div>
                        
                        <div class="chat-input">
                            <div class="input-group">
                                <textarea id="message-input" class="form-control" placeholder="Type your message..." rows="1"></textarea>
                                <button id="send-button" class="btn btn-primary">
                                    <i class="bi bi-send-fill"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        const chatSocket = new WebSocket('{{ websocket_url }}');
        const studentToken = '{{ student_token }}';
        
        chatSocket.onopen = () => {
            console.log('Connected to chat server');
            chatSocket.send(JSON.stringify({
                type: 'auth',
                token: studentToken
            }));
        };
        
        chatSocket.onmessage = (event) => {
            const data = JSON.parse(event.data);
            if (data.type === 'message') {
                appendMessage(data.message);
            }
        };
        
        function appendMessage(message) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${message.fromStudent ? 'outgoing' : 'incoming'}`;
            messageDiv.innerHTML = `
                <div class="message-content">${message.content}</div>
                <div class="message-time">${new Date(message.createdAt).toLocaleTimeString()}</div>
            `;
            const messagesDiv = document.getElementById('chat-messages');
            messagesDiv.appendChild(messageDiv);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }
        
        // Auto-resize textarea
        const messageInput = document.getElementById('message-input');
        messageInput.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });
        
        document.getElementById('send-button').addEventListener('click', () => {
            const message = messageInput.value.trim();
            if (message) {
                chatSocket.send(JSON.stringify({
                    type: 'message',
                    content: message
                }));
                messageInput.value = '';
                messageInput.style.height = 'auto';
            }
        });
        
        messageInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                document.getElementById('send-button').click();
            }
        });
        
        document.getElementById('subject-search').addEventListener('input', (e) => {
            const searchTerm = e.target.value.toLowerCase();
            document.querySelectorAll('.subject-item').forEach(item => {
                const subjectName = item.querySelector('h6').textContent.toLowerCase();
                item.style.display = subjectName.includes(searchTerm) ? 'flex' : 'none';
            });
        });
        
        document.querySelectorAll('.subject-item').forEach(item => {
            item.addEventListener('click', () => {
                const subjectId = item.dataset.subjectId;
                window.location.href = `{{ path('app_subject_chat', {'subject': 'SUBJECT_ID'}) }}`.replace('SUBJECT_ID', subjectId);
            });
        });
    </script>
{% endblock %}
